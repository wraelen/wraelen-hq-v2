{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/lib/supabaseClient.ts"],"sourcesContent":["// src/lib/supabaseClient.ts – Centralized Supabase clients (efficient: Memoizes creation, type-safe with DB schema; best for scalability in gamified features like real-time quest updates/leaderboards)\nimport { createClient } from '@supabase/supabase-js';  // Base package for client (browser-safe – no ssr on client; push back: ssr for server only)\nimport type { Database } from '@/types/supabase';  // Generated types (autocompletes e.g., profile.points; regenerate on schema changes)\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n\n// Client singleton: For browser-side (e.g., signin forms, real-time subs – logic: Memoized to avoid multiple instances warning; best for UX flow without server roundtrips)\nlet clientSupabase: ReturnType<typeof createClient<Database>> | null = null;  // Logic: Global memo (avoids multiple GoTrueClient – fixes undefined session behavior; push back: Raw createClient can share localStorage key, causing bugs)\n\nexport const getClientSupabase = () => {\n  if (!clientSupabase) {\n    clientSupabase = createClient<Database>(supabaseUrl, supabaseAnonKey);  // Logic: Create once (efficient – uses public vars for browser; no cookies on client as sessions persist via localStorage/JWT)\n  }\n  return clientSupabase;\n};"],"names":[],"mappings":"AAAA,yMAAyM;;;;;AAIrL;AAHpB,khBAAuD,4FAA4F;;AAGnJ,MAAM;AACN,MAAM;AAEN,4KAA4K;AAC5K,IAAI,iBAAmE,MAAO,6JAA6J;AAEpO,MAAM,oBAAoB;IAC/B,IAAI,CAAC,gBAAgB;QACnB,iBAAiB,IAAA,qUAAY,EAAW,aAAa,kBAAmB,+HAA+H;IACzM;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/app/auth/signin/page.tsx"],"sourcesContent":["// src/app/auth/signin/page.tsx – Login form (client-side for interactivity; base Supabase client for browser mutations – best for Next.js 15+ pivot, async-safe without deprecated helpers)\n'use client';  // Logic: Client component (best for form state – no SSR overhead for inputs; push back: Server actions for mutations if scaling auth heavy)\n\nimport { useState } from 'react';\nimport { getClientSupabase } from '@/lib/supabaseClient';  // Updated: Singleton utility (logic: Memoized client – fixes multiple GoTrueClient warning; best for browser context consistency)\n\nexport default function SignIn() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string | null>(null);\n\n  // Logic: Client-side singleton (best practice: Use getClientSupabase to get memoized client – env vars available via process.env.NEXT_PUBLIC_*; no cookies needed on client as sessions persist via localStorage/JWT; fixes multiple instances)\n  const supabase = getClientSupabase();\n\n  const handleSignIn = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (password.length < 6) return setError('Password must be at least 6 characters');  // Logic: Client validation (push back: Add more like email format check – best for UX/security, prevents weak creds in internal app with leads)\n    const { error } = await supabase.auth.signInWithPassword({ email, password });  // Logic: Supabase native (hashing/JWT auto – no custom bcrypt)\n    if (error) {\n      setError(error.message);  // UX: Feedback for flow (e.g., \"Invalid credentials\" – improves rep login experience)\n      console.error('Login error:', error.message);  // Logic: Dev log (best for debugging – check browser console if no redirect)\n    } else {\n      console.log('Login success – redirecting...');  // Logic: Dev log (confirm if this prints – if yes, signIn succeeded; if no, auth failed)\n      await supabase.auth.getSession();  // Logic: Force session sync (best practice: Ensures JWT/localStorage updated before redirect – fixes timing bug where middleware sees no session; no-brainer for reliable post-login flow)\n      window.location.href = '/signup';  // Kept: Hard redirect (your tweak – reliable for session sync; push back: If you want client push, add useRouter and router.refresh() before router.push('/dashboard') for smoother \"game\" transition without reload)\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center bg-black text-green-400 font-mono\">\n      <form onSubmit={handleSignIn} className=\"p-8 border-2 border-green-500 rounded-lg shadow-[0_0_15px_rgba(0,255,0,0.7)] bg-black/80\">\n        <h2 className=\"text-2xl mb-6 text-center\">Enter Wraelen HQ</h2>\n        {error && <p className=\"text-red-500 mb-4\">{error}</p>}  // Logic: Conditional error (best for UX – clear, non-blocking)\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          className=\"w-full mb-4 p-2 bg-black border border-green-500 text-green-400 focus:outline-none focus:border-green-300\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"w-full mb-6 p-2 bg-black border border-green-500 text-green-400 focus:outline-none focus:border-green-300\"\n        />\n        <button type=\"submit\" className=\"w-full p-2 bg-green-500 text-black hover:bg-green-600\">Login</button>\n      </form>\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,4LAA4L;;;;;;AAG5L;AACA,sTAA2D,kIAAkI;;;AAH7L,cAAe,4IAA4I;;;AAK5I,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yaAAQ,EAAC;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yaAAQ,EAAC;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yaAAQ,EAAgB;IAElD,gPAAgP;IAChP,MAAM,WAAW,IAAA,qMAAiB;IAElC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI,SAAS,MAAM,GAAG,GAAG,OAAO,SAAS,2CAA4C,gJAAgJ;QACrO,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,kBAAkB,CAAC;YAAE;YAAO;QAAS,IAAK,+DAA+D;QAC/I,IAAI,OAAO;YACT,SAAS,MAAM,OAAO,GAAI,sFAAsF;YAChH,QAAQ,KAAK,CAAC,gBAAgB,MAAM,OAAO,GAAI,6EAA6E;QAC9H,OAAO;YACL,QAAQ,GAAG,CAAC,mCAAoC,yFAAyF;YACzI,MAAM,SAAS,IAAI,CAAC,UAAU,IAAK,2LAA2L;YAC9N,OAAO,QAAQ,CAAC,IAAI,GAAG,WAAY,sNAAsN;QAC3P;IACF;IAEA,qBACE,6bAAC;QAAI,WAAU;kBACb,cAAA,6bAAC;YAAK,UAAU;YAAc,WAAU;;8BACtC,6bAAC;oBAAG,WAAU;8BAA4B;;;;;;gBACzC,uBAAS,6bAAC;oBAAE,WAAU;8BAAqB;;;;;;gBAAW;8BACvD,6bAAC;oBACC,MAAK;oBACL,aAAY;oBACZ,OAAO;oBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oBACxC,WAAU;;;;;;8BAEZ,6bAAC;oBACC,MAAK;oBACL,aAAY;oBACZ,OAAO;oBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oBAC3C,WAAU;;;;;;8BAEZ,6bAAC;oBAAO,MAAK;oBAAS,WAAU;8BAAwD;;;;;;;;;;;;;;;;;AAIhG;GA7CwB;KAAA","debugId":null}}]
}