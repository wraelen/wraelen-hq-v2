{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACZ,qBACE,4YAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,4YAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACjB,qBACE,4YAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACvB,qBACE,4YAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,4YAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACnB,qBACE,4YAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,4YAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACb,qBACE,4YAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,4YAAC;YACC,aAAU;YACV,WAAW,IAAA,4HAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACnB,qBACE,4YAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACjB,qBACE,4YAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACnB,qBACE,4YAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,KAAmD;QAAnD,EAAE,SAAS,EAAE,GAAG,OAAmC,GAAnD;IAChB,qBACE,4YAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAmD;QAAnD,EAAE,SAAS,EAAE,GAAG,OAAmC,GAAnD;IACjB,qBACE,4YAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAmD;QAAnD,EAAE,SAAS,EAAE,GAAG,OAAmC,GAAnD;IACjB,qBACE,4YAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,KAGY;QAHZ,EACpB,SAAS,EACT,GAAG,OAC6B,GAHZ;IAIpB,qBACE,4YAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/app/dashboard/page.tsx"],"sourcesContent":["// src/app/dashboard/page.tsx – Dashboard page (MMORPG HQ overview; matches Shadcn demo with card grid, chart, table – your content preserved/adapted: Cards for role/points/badges, table for top reps leaderboard). \n// Logic: SSR fetch for initial data, client subs for realtime (Supabase – live leaderboards like game rankings). Used Shadcn Card/Table/Chart (run CLI if missing: npx shadcn-ui add card table chart-bar). No removals – additive for demo style. \n'use client'; \nimport { createClientComponentClient } from '@supabase/auth-helpers-nextjs'; \nimport { useEffect, useState } from 'react'; \nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'; \nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'; \nimport { Badge } from '@/components/ui/badge'; \nimport { ChartContainer } from '@/components/ui/chart'; // Stub chart (demo-style bar for quest progress) \ntype Profile = { id: string; role: string; points: number; badges: string[] }; // From schema \nexport default function DashboardPage() { \n  const [profiles, setProfiles] = useState<Profile[]>([]); // For leaderboard (top reps by points) \n  const supabase = createClientComponentClient(); \n  // Fetch initial profiles (sorted by points) \n  useEffect(() => { \n    const fetchProfiles = async () => { \n      const { data } = await supabase.from('profile').select('*').order('points', { ascending: false }).limit(10); \n      setProfiles(data || []); \n    }; \n    fetchProfiles(); \n    // Realtime sub for live updates (gamified – reps see ranks change) \n    const channel = supabase.channel('profiles-channel').on( \n      'postgres_changes', \n      { event: 'UPDATE', schema: 'public', table: 'profile' }, \n      () => fetchProfiles() \n    ).subscribe(); \n    return () => supabase.removeChannel(channel); \n  }, [supabase]); \n  return ( \n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\"> {/* Demo-style card grid */} \n      <Card> \n        <CardHeader> \n          <CardTitle>Welcome to HQ</CardTitle> \n          <CardDescription>wraelen@wraelen.com | Role: novice</CardDescription> {/* Your welcome – dynamic from user */} \n        </CardHeader> \n        <CardContent> \n          <p>Secure, personalized - motivates reps, fallback for no profile.</p> \n        </CardContent> \n      </Card> \n      <Card> \n        <CardHeader> \n          <CardTitle>Points</CardTitle> \n        </CardHeader> \n        <CardContent> \n          <div className=\"text-2xl font-bold\">13</div> {/* Dynamic from profile */} \n        </CardContent> \n      </Card> \n      <Card> \n        <CardHeader> \n          <CardTitle>Achievement Gallery</CardTitle> \n        </CardHeader> \n        <CardContent> \n          <Badge>None</Badge> {/* List badges as badges */} \n        </CardContent> \n      </Card> \n      <Card className=\"col-span-4\"> {/* Full-width for chart – stub quest progress */} \n        <CardHeader> \n          <CardTitle>Quest Progress</CardTitle> \n        </CardHeader> \n        <CardContent> \n          <ChartContainer className=\"h-[200px]\"> \n            {/* Stub bar chart – replace with real data/chart lib like Recharts */} \n            <div className=\"h-full w-full bg-muted flex items-end gap-2 p-4\"> \n              <div className=\"w-full h-3/4 bg-primary\" /> \n              <div className=\"w-full h-1/2 bg-primary\" /> \n              {/* Add more bars */} \n            </div> \n          </ChartContainer> \n        </CardContent> \n      </Card> \n      <Card className=\"col-span-4 md:col-span-3\"> {/* Demo-style recent sales table adapted to leaderboard */} \n        <CardHeader> \n          <CardTitle>Leaderboard Quest: Top Reps</CardTitle> \n        </CardHeader> \n        <CardContent> \n          <Table> \n            <TableHeader> \n              <TableRow> \n                <TableHead>Rank</TableHead> \n                <TableHead>Role</TableHead> \n                <TableHead>Points</TableHead> \n                <TableHead>Badges</TableHead> \n              </TableRow> \n            </TableHeader> \n            <TableBody> \n              {profiles.map((profile, index) => ( \n                <TableRow key={profile.id}> \n                  <TableCell>{index + 1}</TableCell> \n                  <TableCell>{profile.role}</TableCell> \n                  <TableCell>{profile.points}</TableCell> \n                  <TableCell> \n                    {profile.badges?.map((badge) => <Badge key={badge} variant=\"secondary\" className=\"mr-1\">{badge}</Badge>)} \n                  </TableCell> \n                </TableRow> \n              ))} \n            </TableBody> \n          </Table> \n        </CardContent> \n      </Card> \n    </div> \n  ); \n}"],"names":[],"mappings":"AAAA,sNAAsN;AACtN,oPAAoP;;;;;;AAEpP;AACA;AACA;AACA;;;;;;;;;;;;;AAJA;;;;;;;AAQe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,wXAAQ,EAAY,EAAE,GAAG,wCAAwC;IACjG,MAAM,WAAW,IAAA,8UAA2B;IAC5C,6CAA6C;IAC7C,IAAA,yXAAS;mCAAC;YACR,MAAM;yDAAgB;oBACpB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,WAAW,MAAM,CAAC,KAAK,KAAK,CAAC,UAAU;wBAAE,WAAW;oBAAM,GAAG,KAAK,CAAC;oBACxG,YAAY,QAAQ,EAAE;gBACxB;;YACA;YACA,oEAAoE;YACpE,MAAM,UAAU,SAAS,OAAO,CAAC,oBAAoB,EAAE,CACrD,oBACA;gBAAE,OAAO;gBAAU,QAAQ;gBAAU,OAAO;YAAU;mDACtD,IAAM;kDACN,SAAS;YACX;2CAAO,IAAM,SAAS,aAAa,CAAC;;QACtC;kCAAG;QAAC;KAAS;IACb,qBACE,4YAAC;QAAI,WAAU;;YAA2C;0BACxD,4YAAC,2IAAI;;kCACH,4YAAC,iJAAU;;0CACT,4YAAC,gJAAS;0CAAC;;;;;;0CACX,4YAAC,sJAAe;0CAAC;;;;;;4BAAoD;;;;;;;kCAEvE,4YAAC,kJAAW;kCACV,cAAA,4YAAC;sCAAE;;;;;;;;;;;;;;;;;0BAGP,4YAAC,2IAAI;;kCACH,4YAAC,iJAAU;kCACT,cAAA,4YAAC,gJAAS;sCAAC;;;;;;;;;;;kCAEb,4YAAC,kJAAW;;0CACV,4YAAC;gCAAI,WAAU;0CAAqB;;;;;;4BAAQ;;;;;;;;;;;;;0BAGhD,4YAAC,2IAAI;;kCACH,4YAAC,iJAAU;kCACT,cAAA,4YAAC,gJAAS;sCAAC;;;;;;;;;;;kCAEb,4YAAC,kJAAW;;0CACV,4YAAC;0CAAM;;;;;;4BAAY;;;;;;;;;;;;;0BAGvB,4YAAC,2IAAI;gBAAC,WAAU;;oBAAa;kCAC3B,4YAAC,iJAAU;kCACT,cAAA,4YAAC,gJAAS;sCAAC;;;;;;;;;;;kCAEb,4YAAC,kJAAW;kCACV,cAAA,4YAAC;4BAAe,WAAU;sCAExB,cAAA,4YAAC;gCAAI,WAAU;;kDACb,4YAAC;wCAAI,WAAU;;;;;;kDACf,4YAAC;wCAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAMvB,4YAAC,2IAAI;gBAAC,WAAU;;oBAA2B;kCACzC,4YAAC,iJAAU;kCACT,cAAA,4YAAC,gJAAS;sCAAC;;;;;;;;;;;kCAEb,4YAAC,kJAAW;kCACV,cAAA,4YAAC,6IAAK;;8CACJ,4YAAC,mJAAW;8CACV,cAAA,4YAAC,gJAAQ;;0DACP,4YAAC,iJAAS;0DAAC;;;;;;0DACX,4YAAC,iJAAS;0DAAC;;;;;;0DACX,4YAAC,iJAAS;0DAAC;;;;;;0DACX,4YAAC,iJAAS;0DAAC;;;;;;;;;;;;;;;;;8CAGf,4YAAC,iJAAS;8CACP,SAAS,GAAG,CAAC,CAAC,SAAS;4CAMjB;6DALL,4YAAC,gJAAQ;;8DACP,4YAAC,iJAAS;8DAAE,QAAQ;;;;;;8DACpB,4YAAC,iJAAS;8DAAE,QAAQ,IAAI;;;;;;8DACxB,4YAAC,iJAAS;8DAAE,QAAQ,MAAM;;;;;;8DAC1B,4YAAC,iJAAS;+DACP,kBAAA,QAAQ,MAAM,cAAd,sCAAA,gBAAgB,GAAG,CAAC,CAAC,sBAAU,4YAAC;4DAAkB,SAAQ;4DAAY,WAAU;sEAAQ;2DAA7C;;;;;;;;;;;2CALjC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAezC;GA3FwB;KAAA","debugId":null}}]
}