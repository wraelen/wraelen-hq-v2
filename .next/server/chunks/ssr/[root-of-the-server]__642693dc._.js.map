{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Table = registerClientReference(\n    function() { throw new Error(\"Attempted to call Table() from the server but Table is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"Table\",\n);\nexport const TableBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableBody() from the server but TableBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"TableBody\",\n);\nexport const TableCaption = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCaption() from the server but TableCaption is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"TableCaption\",\n);\nexport const TableCell = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCell() from the server but TableCell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"TableCell\",\n);\nexport const TableFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableFooter() from the server but TableFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"TableFooter\",\n);\nexport const TableHead = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHead() from the server but TableHead is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"TableHead\",\n);\nexport const TableHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHeader() from the server but TableHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"TableHeader\",\n);\nexport const TableRow = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableRow() from the server but TableRow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"TableRow\",\n);\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,6DACA;AAEG,MAAM,YAAY,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6DACA;AAEG,MAAM,eAAe,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6DACA;AAEG,MAAM,YAAY,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6DACA;AAEG,MAAM,cAAc,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA;AAEG,MAAM,YAAY,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6DACA;AAEG,MAAM,cAAc,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA;AAEG,MAAM,WAAW,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,6DACA","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Table = registerClientReference(\n    function() { throw new Error(\"Attempted to call Table() from the server but Table is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"Table\",\n);\nexport const TableBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableBody() from the server but TableBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"TableBody\",\n);\nexport const TableCaption = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCaption() from the server but TableCaption is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"TableCaption\",\n);\nexport const TableCell = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCell() from the server but TableCell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"TableCell\",\n);\nexport const TableFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableFooter() from the server but TableFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"TableFooter\",\n);\nexport const TableHead = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHead() from the server but TableHead is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"TableHead\",\n);\nexport const TableHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHeader() from the server but TableHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"TableHeader\",\n);\nexport const TableRow = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableRow() from the server but TableRow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"TableRow\",\n);\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yCACA;AAEG,MAAM,YAAY,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yCACA;AAEG,MAAM,eAAe,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yCACA;AAEG,MAAM,YAAY,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yCACA;AAEG,MAAM,cAAc,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA;AAEG,MAAM,YAAY,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yCACA;AAEG,MAAM,cAAc,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA;AAEG,MAAM,WAAW,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,yCACA","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/lib/prisma.ts"],"sourcesContent":["// lib/prisma.ts\nimport { PrismaClient } from '@prisma/client';\n\ntype PrismaClientConstructor = () => PrismaClient;  // Explicit for ReturnType\n\nconst prismaClientSingleton: PrismaClientConstructor = () => {\n  return new PrismaClient();\n};\n\ndeclare global {\n  // eslint-disable-next-line no-var -- Hoisting required for global Prisma singleton\n  var prisma: ReturnType<PrismaClientConstructor> | undefined;\n}\n\nconst prisma = globalThis.prisma ?? prismaClientSingleton();\n\nif (process.env.NODE_ENV !== 'production') globalThis.prisma = prisma!;  // Non-null for dev\n\nexport default prisma;"],"names":[],"mappings":"AAAA,gBAAgB;;;;AAChB;;AAIA,MAAM,wBAAiD;IACrD,OAAO,IAAI,6HAAA,CAAA,eAAY;AACzB;AAOA,MAAM,SAAS,WAAW,MAAM,IAAI;AAEpC,wCAA2C,WAAW,MAAM,GAAG,QAAU,mBAAmB;uCAE7E","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["// src/app/api/auth/[...nextauth]/route.ts (new file—Auth.js config for login/register with credentials, Prisma adapter for User model integration, session extension for gamification fields)\nimport { PrismaAdapter } from '@auth/prisma-adapter'; // Added: Prisma adapter for session/user linking (auto-creates User on register if not exists)\nimport { User } from '@prisma/client'; // Added: Import User type from Prisma client (fixes TS2304 'Cannot find name 'User'' in callbacks; ties to your User model for session extension)\nimport bcrypt from 'bcryptjs'; // Added: For password hashing/verification (secure storage/comparison)\n// eslint-disable-next-line import/no-duplicates\nimport NextAuth from 'next-auth';\n// eslint-disable-next-line import/no-duplicates\nimport { Session } from 'next-auth'; // Added: Import Session type from next-auth (fixes TS2304 'Cannot find name 'Session'' in callbacks)\nimport CredentialsProvider from 'next-auth/providers/credentials'; // Added: For username/password login (credentials provider)\nimport prisma from '@/lib/prisma'; // Kept your singleton Prisma client\n\nexport const authOptions = {\n  adapter: PrismaAdapter(prisma), // Added: Uses Prisma to store sessions/accounts, links to your User model (required for adapter; handles register/login auto)\n  providers: [\n    CredentialsProvider({\n      name: 'Credentials',\n      credentials: {\n        username: { label: \"Username\", type: \"text\" },\n        password: { label: \"Password\", type: \"password\" },\n      },\n      async authorize(credentials) {\n        if (!credentials?.username || !credentials?.password) return null; // Added: Basic validation (no empty fields)\n        const user = await prisma.user.findUnique({ where: { username: credentials.username } });\n        if (user && await bcrypt.compare(credentials.password, user.password)) {\n          return user; // Added: Successful login—returns user for session\n        }\n        return null; // Added: Invalid creds—return null to fail\n      },\n    }),\n  ],\n  callbacks: {\n    async session({ session, user }: { session: Session; user: User }) { // Added: Types for session/user params (fixes TS7031 implicit 'any' from earlier list)\n      // Added: Extend session with gamification fields from User model (points/badges/role for dashboard/XP bar; available in getServerSession)\n      session.user = { ...session.user, id: user.id, role: user.role, points: user.points, badges: user.badges };\n      return session;\n    },\n  },\n  secret: process.env.JWT_SECRET, // Added: From .env (generate random string: openssl rand -base64 32)\n  session: { strategy: \"jwt\" as const }, // Added: JWT for session (simple for solo; switch to database for scale)\n  pages: { signIn: '/auth/signin' }, // Added: Custom login page (create next for game-themed UI)\n};\n\nconst handler = NextAuth(authOptions);\nexport { handler as GET, handler as POST }; // Added: Export for API route (handles all auth requests)"],"names":[],"mappings":"AAAA,8LAA8L;;;;;;AAC9L,wjBAAsD,+FAA+F;AAErJ,2TAA+B,uEAAuE;AACtG,gDAAgD;AAChD;AAGA,umBAAmE,4DAA4D;AAC/H,0MAAmC,oCAAoC;;;;;;AAEhE,MAAM,cAAc;IACzB,SAAS,CAAA,GAAA,kVAAA,CAAA,gBAAa,AAAD,EAAE,oHAAA,CAAA,UAAM;IAC7B,WAAW;QACT,CAAA,GAAA,uWAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAO;gBAC5C,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,YAAY,CAAC,aAAa,UAAU,OAAO,MAAM,4CAA4C;gBAC/G,MAAM,OAAO,MAAM,oHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,CAAC;oBAAE,OAAO;wBAAE,UAAU,YAAY,QAAQ;oBAAC;gBAAE;gBACtF,IAAI,QAAQ,MAAM,sLAAA,CAAA,UAAM,CAAC,OAAO,CAAC,YAAY,QAAQ,EAAE,KAAK,QAAQ,GAAG;oBACrE,OAAO,MAAM,mDAAmD;gBAClE;gBACA,OAAO,MAAM,2CAA2C;YAC1D;QACF;KACD;IACD,WAAW;QACT,MAAM,SAAQ,EAAE,OAAO,EAAE,IAAI,EAAoC;YAC/D,0IAA0I;YAC1I,QAAQ,IAAI,GAAG;gBAAE,GAAG,QAAQ,IAAI;gBAAE,IAAI,KAAK,EAAE;gBAAE,MAAM,KAAK,IAAI;gBAAE,QAAQ,KAAK,MAAM;gBAAE,QAAQ,KAAK,MAAM;YAAC;YACzG,OAAO;QACT;IACF;IACA,QAAQ,QAAQ,GAAG,CAAC,UAAU;IAC9B,SAAS;QAAE,UAAU;IAAe;IACpC,OAAO;QAAE,QAAQ;IAAe;AAClC;AAEA,MAAM,UAAU,CAAA,GAAA,oVAAA,CAAA,UAAQ,AAAD,EAAE;;CACmB,0DAA0D","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/app/dashboard/page.tsx"],"sourcesContent":["// src/app/dashboard/page.tsx\nimport { getServerSession } from 'next-auth'; // Kept existing\nimport { Progress } from '@/components/ui/progress'; // Kept existing\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'; // Kept existing\nimport prisma from '@/lib/prisma'; // Kept existing\nimport { authOptions } from '../api/auth/[...nextauth]/route'; // Added: Import authOptions from auth route (fixes TS2304 'Cannot find name 'authOptions'')\n\nexport default async function Dashboard() {\n  const session = await getServerSession(authOptions); // Kept existing\n  if (!session) return <div>Login required</div>;\n\n  const user = await prisma.user.findUnique({ where: { id: session.user.id }, include: { leads: true } });\n  const leaders = await prisma.user.findMany({ orderBy: { points: 'desc' }, take: 10 });\n\n  const totalScore = user?.leads.reduce((sum, lead) => sum + lead.score, 0) || 0;\n  const nextThreshold = 1000; // Kept existing\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1>Wraelen HQ - {user?.username} (Role: {user?.role})</h1>\n      <p>Points: {user?.points ?? 0} | Badges: {user?.badges.join(', ')}</p> /* Updated: ?? 0 for user.points (fixes TS18048 undefined) */\n      <Progress value={(user?.points ?? 0 / nextThreshold) * 100} className=\"w-full mb-4\" /> /* Updated: ?? 0 for user.points (fixes TS18048) */\n      <p>Quest Bonuses from Leads: +{totalScore} XP</p>\n      <h2>Your Leads ({user?.leads.length})</h2>\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead>Address</TableHead>\n            <TableHead>Price</TableHead>\n            <TableHead>Score</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {user?.leads.map((lead) => (\n            <TableRow key={lead.id}>\n              <TableCell>{lead.address}</TableCell>\n              <TableCell>{lead.price}</TableCell>\n              <TableCell>{lead.score}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <h2>Leaderboard</h2>\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead>Rank</TableHead>\n            <TableHead>Rep</TableHead>\n            <TableHead>Points</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {leaders.map((rep, idx) => (\n            <TableRow key={rep.id}>\n              <TableCell>{idx + 1}</TableCell>\n              <TableCell>{rep.username}</TableCell>\n              <TableCell>{rep.points}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,6BAA6B;;;;;AAC7B,okBAA8C,gBAAgB;AAC9D,uOAAqD,gBAAgB;AACrE,iOAAuG,gBAAgB;AACvH,0MAAmC,gBAAgB;AACnD,oQAA+D,4FAA4F;;;;;;;AAE5I,eAAe;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,oVAAA,CAAA,mBAAgB,AAAD,EAAE,wJAAA,CAAA,cAAW,GAAG,gBAAgB;IACrE,IAAI,CAAC,SAAS,qBAAO,6bAAC;kBAAI;;;;;;IAE1B,MAAM,OAAO,MAAM,oHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QAAE,OAAO;YAAE,IAAI,QAAQ,IAAI,CAAC,EAAE;QAAC;QAAG,SAAS;YAAE,OAAO;QAAK;IAAE;IACrG,MAAM,UAAU,MAAM,oHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAAE,SAAS;YAAE,QAAQ;QAAO;QAAG,MAAM;IAAG;IAEnF,MAAM,aAAa,MAAM,MAAM,OAAO,CAAC,KAAK,OAAS,MAAM,KAAK,KAAK,EAAE,MAAM;IAC7E,MAAM,gBAAgB,MAAM,gBAAgB;IAE5C,qBACE,6bAAC;QAAI,WAAU;;0BACb,6bAAC;;oBAAG;oBAAc,MAAM;oBAAS;oBAAS,MAAM;oBAAK;;;;;;;0BACrD,6bAAC;;oBAAE;oBAAS,MAAM,UAAU;oBAAE;oBAAY,MAAM,OAAO,KAAK;;;;;;;YAAU;0BACtE,6bAAC,oIAAA,CAAA,WAAQ;gBAAC,OAAO,CAAC,MAAM,UAAU,IAAI,aAAa,IAAI;gBAAK,WAAU;;;;;;YAAgB;0BACtF,6bAAC;;oBAAE;oBAA4B;oBAAW;;;;;;;0BAC1C,6bAAC;;oBAAG;oBAAa,MAAM,MAAM;oBAAO;;;;;;;0BACpC,6bAAC,iIAAA,CAAA,QAAK;;kCACJ,6bAAC,iIAAA,CAAA,cAAW;kCACV,cAAA,6bAAC,iIAAA,CAAA,WAAQ;;8CACP,6bAAC,iIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,6bAAC,iIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,6bAAC,iIAAA,CAAA,YAAS;8CAAC;;;;;;;;;;;;;;;;;kCAGf,6bAAC,iIAAA,CAAA,YAAS;kCACP,MAAM,MAAM,IAAI,CAAC,qBAChB,6bAAC,iIAAA,CAAA,WAAQ;;kDACP,6bAAC,iIAAA,CAAA,YAAS;kDAAE,KAAK,OAAO;;;;;;kDACxB,6bAAC,iIAAA,CAAA,YAAS;kDAAE,KAAK,KAAK;;;;;;kDACtB,6bAAC,iIAAA,CAAA,YAAS;kDAAE,KAAK,KAAK;;;;;;;+BAHT,KAAK,EAAE;;;;;;;;;;;;;;;;0BAQ5B,6bAAC;0BAAG;;;;;;0BACJ,6bAAC,iIAAA,CAAA,QAAK;;kCACJ,6bAAC,iIAAA,CAAA,cAAW;kCACV,cAAA,6bAAC,iIAAA,CAAA,WAAQ;;8CACP,6bAAC,iIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,6bAAC,iIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,6bAAC,iIAAA,CAAA,YAAS;8CAAC;;;;;;;;;;;;;;;;;kCAGf,6bAAC,iIAAA,CAAA,YAAS;kCACP,QAAQ,GAAG,CAAC,CAAC,KAAK,oBACjB,6bAAC,iIAAA,CAAA,WAAQ;;kDACP,6bAAC,iIAAA,CAAA,YAAS;kDAAE,MAAM;;;;;;kDAClB,6bAAC,iIAAA,CAAA,YAAS;kDAAE,IAAI,QAAQ;;;;;;kDACxB,6bAAC,iIAAA,CAAA,YAAS;kDAAE,IAAI,MAAM;;;;;;;+BAHT,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;AAUjC","debugId":null}}]
}