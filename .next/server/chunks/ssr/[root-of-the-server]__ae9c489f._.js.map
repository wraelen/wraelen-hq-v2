{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 9, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_dd475d0c.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_dd475d0c-module__9A3jha__className\",\n  \"variable\": \"inter_dd475d0c-module__9A3jha__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_dd475d0c.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22variable%22:%22--font-sans%22}],%22variableName%22:%22fontSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,gKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,gKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,gKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/progress.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Progress = registerClientReference(\n    function() { throw new Error(\"Attempted to call Progress() from the server but Progress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/wraelen/wraelen-internal-boilerplate/src/components/ui/progress.tsx <module evaluation>\",\n    \"Progress\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,WAAW,IAAA,wgBAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,qGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/progress.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Progress = registerClientReference(\n    function() { throw new Error(\"Attempted to call Progress() from the server but Progress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/wraelen/wraelen-internal-boilerplate/src/components/ui/progress.tsx\",\n    \"Progress\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,WAAW,IAAA,wgBAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,iFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/lib/supabaseClient.ts"],"sourcesContent":["// src/lib/supabaseClient.ts – Reusable Supabase clients (type-safe with generated DB types; best for scalability in gamified features like real-time quest updates)\nimport { createServerComponentClient } from '@supabase/auth-helpers-nextjs';\nimport { createClient } from '@supabase/supabase-js';\nimport { cookies } from 'next/headers';  // Server-side cookie access (efficient for SSR sessions)\n\nimport type { Database } from '@/types/supabase';  // Adjusted path – '@/types' alias resolves to src/types (tsconfig setup)\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n\n// Server client: Use in API routes/server components (no client exposure – secure for internal auth/quests)\nexport const createServerSupabaseClient = () => createServerComponentClient<Database>({ cookies });\n\n// Client client: For browser-side (e.g., signup forms, real-time subs – anon key limits to reads/mutations as per RLS)\nexport const createClientSupabaseClient = () => createClient<Database>(supabaseUrl, supabaseAnonKey);"],"names":[],"mappings":"AAAA,oKAAoK;;;;;;;AACpK;AACA;AACA,ipBAAyC,yDAAyD;;;;AAIlG,MAAM;AACN,MAAM;AAGC,MAAM,6BAA6B,IAAM,IAAA,4XAA2B,EAAW;QAAE,SAAA,0YAAO;IAAC;AAGzF,MAAM,6BAA6B,IAAM,IAAA,kUAAY,EAAW,aAAa","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,qRAAO,EAAC,IAAA,+OAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/app/layout.tsx"],"sourcesContent":["// src/app/layout.tsx – Root layout (server-side; best practice: Global metadata/UI like XP bar – efficient SSR, no client fetches for core elements)\nimport 'src/styles/global.css';  // Kept: Tailwind/globals (best for console/game theme – add monospace fonts/glow plugins later for \"HQ\" vibe)\nimport { PrismaClient } from '@prisma/client';  // Added: Prisma for profile (logic: Get points/role – relational fetch for gamification)\nimport type { Metadata } from 'next';  // Kept: Type-safe metadata (best for SEO/internal search)\nimport { Inter as FontSans } from 'next/font/google';  // Kept: Font opt (push back: Add monospace like 'Fira Code' for terminal feel – install via npm)\nimport Link from 'next/link';  // Kept: Client nav (fast, no reloads – game-like flow for traversing levels/quests)\nimport { Progress } from '@/components/ui/progress';  // Kept: Shadcn for XP bar (install if missing: npx shadcn@latest add progress; visual motivator for reps)\nimport { createServerSupabaseClient } from '@/lib/supabaseClient';  // Added: Supabase server client (logic: Fetch session for XP/role – type-safe, secure)\nimport { cn } from '@/lib/utils';  // Kept: Tailwind helper (best for conditional classes, e.g., role-based styling)\n\n\nconst prisma = new PrismaClient();  // Logic: Server-only instance (best practice: No client DB access – secure for internal data like points)\n\nconst fontSans = FontSans({\n  subsets: ['latin'],\n  variable: '--font-sans',\n});\n\nexport const metadata: Metadata = {  // Kept: Global meta (best for branding – add og images for \"HQ\" game feel)\n  title: 'Wraelen HQ',\n  description: 'Gamified internal headquarters for Wraelen real estate wholesaling – level up, earn badges, challenge peers!',\n};\n\nexport default async function RootLayout({ children }: { children: React.ReactNode }) {\n  const supabase = createServerSupabaseClient();  // Logic: Server session fetch (efficient – no extra deps; replaces getServerSession)\n  const { data: { session } } = await supabase.auth.getSession();  // Get user session (logic: Null if unauth – redirect in middleware/pages)\n\n  let xp = 0;  // Stub XP/points (logic: Fetch from Prisma if logged in – best for gamification display; update role thresholds later, e.g., 1000 points = \"Apprentice\")\n  let role = 'Guest';  // Default (push back: Use 'Novice' post-login; add badges UI)\n  if (session) {\n    const profile = await prisma.profile.findUnique({ where: { userId: session.user.id } });  // Logic: Relational fetch (efficient join if expanding to quests)\n    xp = profile?.points || 0;\n    role = profile?.role || 'Novice';\n  }\n\n  return (\n    <html lang=\"en\">\n      <body className={cn('min-h-screen bg-background font-sans antialiased', fontSans.variable)}>  // Kept: Tailwind base (best for responsive HQ dashboard)\n        <header className=\"p-4 bg-black text-green-400 border-b border-green-500\">  // Added: Themed header (console vibe – green-on-black for \"game\" feel)\n          <nav className=\"flex justify-between items-center\">\n            <Link href=\"/\" className=\"text-2xl font-bold\">Wraelen HQ</Link>  // Logic: Home link (fast nav – best for flow between quests/dashboard)\n            <div className=\"flex items-center gap-4\">\n              <span>Role: {role}</span>  // Logic: Display role (motivates leveling; update on point thresholds)\n              <Progress value={(xp / 1000) * 100} className=\"w-32\" />  // Logic: XP bar (visual progress – stub max 1000; customize for levels)\n              {session ? <button onClick={async () => await supabase.auth.signOut()}>Logout</button> : <Link href=\"/auth/signin\">Login</Link>}  // Logic: Auth toggle (best practice: Server session for conditional UI)\n            </div>\n          </nav>\n        </header>\n        {children}\n      </body>\n    </html>\n  );\n}"],"names":[],"mappings":"AAAA,qJAAqJ;;;;;;;;AAErJ,4NAAgD,yFAAyF;;AAGzI,+rBAA+B,oFAAoF;AACnH,6TAAsD,0GAA0G;AAChK,gTAAoE,uFAAuF;AAC3J,8RAAmC,iFAAiF;;;;;;;;;AAGpH,MAAM,SAAS,IAAI,6IAAY,IAAK,0GAA0G;AAOvI,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,eAAe,WAAW,EAAE,QAAQ,EAAiC;IAClF,MAAM,WAAW,IAAA,2MAA0B,KAAK,qFAAqF;IACrI,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU,IAAK,0EAA0E;IAE3I,IAAI,KAAK,GAAI,yJAAyJ;IACtK,IAAI,OAAO,SAAU,8DAA8D;IACnF,IAAI,SAAS;QACX,MAAM,UAAU,MAAM,OAAO,OAAO,CAAC,UAAU,CAAC;YAAE,OAAO;gBAAE,QAAQ,QAAQ,IAAI,CAAC,EAAE;YAAC;QAAE,IAAK,kEAAkE;QAC5J,KAAK,SAAS,UAAU;QACxB,OAAO,SAAS,QAAQ;IAC1B;IAEA,qBACE,8eAAC;QAAK,MAAK;kBACT,cAAA,8eAAC;YAAK,WAAW,IAAA,0KAAE,EAAC,oDAAoD,oJAAQ,CAAC,QAAQ;;gBAAG;8BAC1F,8eAAC;oBAAO,WAAU;;wBAAwD;sCACxE,8eAAC;4BAAI,WAAU;;8CACb,8eAAC,uaAAI;oCAAC,MAAK;oCAAI,WAAU;8CAAqB;;;;;;gCAAiB;8CAC/D,8eAAC;oCAAI,WAAU;;sDACb,8eAAC;;gDAAK;gDAAO;;;;;;;wCAAY;sDACzB,8eAAC,iMAAQ;4CAAC,OAAO,AAAC,KAAK,OAAQ;4CAAK,WAAU;;;;;;wCAAS;wCACtD,wBAAU,8eAAC;4CAAO,SAAS,UAAY,MAAM,SAAS,IAAI,CAAC,OAAO;sDAAI;;;;;iEAAkB,8eAAC,uaAAI;4CAAC,MAAK;sDAAe;;;;;;wCAAa;;;;;;;;;;;;;;;;;;;gBAIrI;;;;;;;;;;;;AAIT","debugId":null}}]
}