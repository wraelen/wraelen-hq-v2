{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/table.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Table = registerClientReference(\n    function() { throw new Error(\"Attempted to call Table() from the server but Table is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"Table\",\n);\nexport const TableBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableBody() from the server but TableBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"TableBody\",\n);\nexport const TableCaption = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCaption() from the server but TableCaption is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"TableCaption\",\n);\nexport const TableCell = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCell() from the server but TableCell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"TableCell\",\n);\nexport const TableFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableFooter() from the server but TableFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"TableFooter\",\n);\nexport const TableHead = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHead() from the server but TableHead is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"TableHead\",\n);\nexport const TableHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHeader() from the server but TableHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"TableHeader\",\n);\nexport const TableRow = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableRow() from the server but TableRow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx <module evaluation>\",\n    \"TableRow\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,QAAQ,IAAA,udAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,6DACA;AAEG,MAAM,YAAY,IAAA,udAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6DACA;AAEG,MAAM,eAAe,IAAA,udAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6DACA;AAEG,MAAM,YAAY,IAAA,udAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6DACA;AAEG,MAAM,cAAc,IAAA,udAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA;AAEG,MAAM,YAAY,IAAA,udAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6DACA;AAEG,MAAM,cAAc,IAAA,udAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA;AAEG,MAAM,WAAW,IAAA,udAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,6DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/table.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Table = registerClientReference(\n    function() { throw new Error(\"Attempted to call Table() from the server but Table is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"Table\",\n);\nexport const TableBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableBody() from the server but TableBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"TableBody\",\n);\nexport const TableCaption = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCaption() from the server but TableCaption is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"TableCaption\",\n);\nexport const TableCell = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCell() from the server but TableCell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"TableCell\",\n);\nexport const TableFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableFooter() from the server but TableFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"TableFooter\",\n);\nexport const TableHead = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHead() from the server but TableHead is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"TableHead\",\n);\nexport const TableHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHeader() from the server but TableHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"TableHeader\",\n);\nexport const TableRow = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableRow() from the server but TableRow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/table.tsx\",\n    \"TableRow\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,QAAQ,IAAA,udAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yCACA;AAEG,MAAM,YAAY,IAAA,udAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yCACA;AAEG,MAAM,eAAe,IAAA,udAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yCACA;AAEG,MAAM,YAAY,IAAA,udAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yCACA;AAEG,MAAM,cAAc,IAAA,udAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA;AAEG,MAAM,YAAY,IAAA,udAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yCACA;AAEG,MAAM,cAAc,IAAA,udAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA;AAEG,MAAM,WAAW,IAAA,udAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,yCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/app/dialer/page.tsx"],"sourcesContent":["import { createServerClient } from '@supabase/ssr';\nimport { cookies } from 'next/headers';\nimport { Button } from '@/components/ui/button'; // Shadcn\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { dialLeadAction } from '@/lib/actions'; // Imported action\nimport prisma from '@/lib/prisma'; // Assuming exported client\n\nexport default async function DialerPage() {\n  const cookieStore = cookies();\n  const supabase = createServerClient(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!, {\n    cookies: {\n      getAll: () => cookieStore.getAll(),\n      setAll: (cookiesToSet) => { try { cookiesToSet.forEach(({ name, value, options }) => cookieStore.set(name, value, options)); } catch {} },\n    },\n  });\n\n  const { data: { session } } = await supabase.auth.getSession();\n  if (!session?.user.id) {\n    redirect('/auth/signin'); // Logic: Protect page (middleware handles, but extra guard)\n  }\n\n  const leads = await prisma.leads.findMany({\n    where: { assigned_to: session.user.id },\n    include: { properties: true }, // Logic: Fetch address etc. for display\n    orderBy: { created_at: 'desc' }, // Recent first\n  });\n\n  return (\n    <div className=\"p-8 bg-black text-green-400 font-mono\">\n      <h2 className=\"text-2xl mb-6\">Dialer Quest: Call Leads</h2>\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead>Address</TableHead>\n            <TableHead>Name</TableHead>\n            <TableHead>Phone</TableHead>\n            <TableHead>Actions</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {leads.map(lead => (\n            <TableRow key={lead.id}>\n              <TableCell>{lead.properties.address}</TableCell>\n              <TableCell>{`${lead.first_name || ''} ${lead.last_name || ''}`.trim() || 'Unknown'}</TableCell>\n              <TableCell>{lead.phone || 'No Phone'}</TableCell>\n              <TableCell>\n                {lead.phone && (\n                  <form action={async () => { 'use server'; await dialLeadAction(lead.id); }}>\n                    <Button type=\"submit\" variant=\"outline\">Dial</Button> {/* Logic: Triggers action – client sees success via revalidate? */}\n                  </form>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;;;;;AAAA;AAAA;AACA;AACA,mOAAiD,SAAS;AAC1D;AACA,4MAAgD,kBAAkB;AAClE,0MAAmC,2BAA2B;;;;;;;;;;MA0C9B,uCAAR;;IAAoC,MAAM,IAAA,uIAAc;AAAW;AAA3D,8bAAA;AAxCjB,eAAe;IAC5B,MAAM,cAAc,IAAA,yVAAO;IAC3B,MAAM,WAAW,IAAA,4SAAkB,sUAAoF;QACrH,SAAS;YACP,QAAQ,IAAM,YAAY,MAAM;YAChC,QAAQ,CAAC;gBAAmB,IAAI;oBAAE,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAK,YAAY,GAAG,CAAC,MAAM,OAAO;gBAAW,EAAE,OAAM,CAAC;YAAE;QAC1I;IACF;IAEA,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;IAC5D,IAAI,CAAC,SAAS,KAAK,IAAI;QACrB,SAAS,iBAAiB,4DAA4D;IACxF;IAEA,MAAM,QAAQ,MAAM,+HAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;QACxC,OAAO;YAAE,aAAa,QAAQ,IAAI,CAAC,EAAE;QAAC;QACtC,SAAS;YAAE,YAAY;QAAK;QAC5B,SAAS;YAAE,YAAY;QAAO;IAChC;IAEA,qBACE,6bAAC;QAAI,WAAU;;0BACb,6bAAC;gBAAG,WAAU;0BAAgB;;;;;;0BAC9B,6bAAC,0IAAK;;kCACJ,6bAAC,gJAAW;kCACV,cAAA,6bAAC,6IAAQ;;8CACP,6bAAC,8IAAS;8CAAC;;;;;;8CACX,6bAAC,8IAAS;8CAAC;;;;;;8CACX,6bAAC,8IAAS;8CAAC;;;;;;8CACX,6bAAC,8IAAS;8CAAC;;;;;;;;;;;;;;;;;kCAGf,6bAAC,8IAAS;kCACP,MAAM,GAAG,CAAC,CAAA,qBACT,6bAAC,6IAAQ;;kDACP,6bAAC,8IAAS;kDAAE,KAAK,UAAU,CAAC,OAAO;;;;;;kDACnC,6bAAC,8IAAS;kDAAE,GAAG,KAAK,UAAU,IAAI,GAAG,CAAC,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,MAAM;;;;;;kDACzE,6bAAC,8IAAS;kDAAE,KAAK,KAAK,IAAI;;;;;;kDAC1B,6bAAC,8IAAS;kDACP,KAAK,KAAK,kBACT,6bAAC;4CAAK,MAAM,EAAE;;8DACZ,6bAAC,4IAAM;oDAAC,MAAK;oDAAS,SAAQ;8DAAU;;;;;;gDAAa;;;;;;;;;;;;;+BAP9C,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;AAiBlC","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/.next-internal/server/app/dialer/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {signOutAction as '00315b03f56c36afe12dfeb5c652abd33bef4e3415'} from 'ACTIONS_MODULE0'\nexport {pollImportStatus as '40466bc412b189907900eb342e636f8842c72e0114'} from 'ACTIONS_MODULE0'\nexport {importDataAction as '406fe66154764a470bd2e6892cbf6564e8ba792062'} from 'ACTIONS_MODULE0'\nexport {dialLeadAction as '4079d682f668d9e609513a443751f3f25df63679e8'} from 'ACTIONS_MODULE0'\nexport {signInAction as '40c51dafa413642fae5ba42f7a583d85c55e72290c'} from 'ACTIONS_MODULE0'\nexport {enrichLeadRealtor as '40de287e4a19bf59e275536cc07c5d930ec2748f64'} from 'ACTIONS_MODULE0'\nexport {$$RSC_SERVER_ACTION_0 as '40d2e834f1b3e54e3947371d60f40432608a162fc0'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AAMA","debugId":null}}]
}