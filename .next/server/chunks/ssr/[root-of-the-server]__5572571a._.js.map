{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/progress.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Progress = registerClientReference(\n    function() { throw new Error(\"Attempted to call Progress() from the server but Progress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/progress.tsx <module evaluation>\",\n    \"Progress\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,WAAW,IAAA,udAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,gEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/progress.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Progress = registerClientReference(\n    function() { throw new Error(\"Attempted to call Progress() from the server but Progress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/progress.tsx\",\n    \"Progress\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,WAAW,IAAA,udAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/lib/prisma.ts"],"sourcesContent":["// src/lib/prisma.ts – Prisma singleton (best practice: Avoids new instances per request – reduces latency/overhead for quest updates; push back: Raw imports risk exhaustion on Supabase as reps grow)\nimport { PrismaClient } from '@prisma/client';\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient();  // Prod: Single instance (efficient scale for leaderboards/queries)\n} else {\n  if (!globalThis.prisma) {\n    globalThis.prisma = new PrismaClient();  // Dev: Global persists across HMR (hot reload – no reconnections on code changes)\n  }\n  prisma = globalThis.prisma;\n}\n\nexport default prisma;  // Logic: Export for server use (type-safe, e.g., prisma.profile.findUnique autocompletes points/role)"],"names":[],"mappings":"AAAA,uMAAuM;;;;;AACvM;;AAEA,IAAI;AAEJ;;KAEO;IACL,IAAI,CAAC,WAAW,MAAM,EAAE;QACtB,WAAW,MAAM,GAAG,IAAI,6IAAY,IAAK,kFAAkF;IAC7H;IACA,SAAS,WAAW,MAAM;AAC5B;uCAEe;CAAS,sGAAsG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/lib/supabaseServer.ts"],"sourcesContent":["// src/lib/supabaseServer.ts – Async Supabase server client helper (best practice: Wrap for Next 15 async cookies – fixes sync-dynamic-apis warnings; centralized for reuse in actions/layout; added autoRefresh false to avoid sets in components)\nimport { createServerClient } from '@supabase/ssr';\nimport { cookies } from 'next/headers';\nimport type { Database } from '@/types/database.types'; // Keep your types\n\nexport async function createSupabaseServerClient() {\n  const cookieStore = await cookies(); // Logic: Await dynamic cookies (Next 15 requirement – avoids sync errors)\n  return createServerClient<Database>(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      auth: {\n        autoRefreshToken: false, // Logic: Disable auto-refresh in server components (prevents token set during getSession – fixes cookie modify error; refresh in actions/middleware)\n        persistSession: false, // Logic: No persist on server (session is per-request)\n      },\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name)?.value; // Logic: Sync get after await (safe)\n        },\n        set(name: string, value: string, options: any) {\n          try {\n            cookieStore.set({ name, value, ...options }); // Logic: No await needed (set is sync)\n          } catch (error) {\n            console.error('Cookie set error:', error); // Handle silently (best for prod resilience)\n          }\n        },\n        remove(name: string, options: any) {\n          try {\n            cookieStore.set({ name, value: '', ...options }); // Logic: Remove via empty set\n          } catch (error) {\n            console.error('Cookie remove error:', error);\n          }\n        },\n      },\n    }\n  );\n}"],"names":[],"mappings":"AAAA,mPAAmP;;;;;AACnP;AAAA;AACA;;;AAGO,eAAe;IACpB,MAAM,cAAc,MAAM,IAAA,yVAAO,KAAI,0EAA0E;IAC/G,OAAO,IAAA,4SAAkB,sUAGvB;QACE,MAAM;YACJ,kBAAkB;YAClB,gBAAgB;QAClB;QACA,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO,OAAO,qCAAqC;YAC5E;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAY;gBAC3C,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM;wBAAO,GAAG,OAAO;oBAAC,IAAI,uCAAuC;gBACvF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,qBAAqB,QAAQ,6CAA6C;gBAC1F;YACF;YACA,QAAO,IAAY,EAAE,OAAY;gBAC/B,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM,OAAO;wBAAI,GAAG,OAAO;oBAAC,IAAI,8BAA8B;gBAClF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,wBAAwB;gBACxC;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/app/layout.tsx"],"sourcesContent":["// src/app/layout.tsx – Root layout (SSR for session fetch; gamified header with role/XP – updated for async Supabase)\nimport Link from 'next/link';\nimport { Progress } from '@/components/ui/progress'; // Assuming Shadcn\nimport { signOutAction } from '@/lib/actions'; // Import server action (bound for form)\nimport prisma from '@/lib/prisma'; // Shared singleton\nimport { createSupabaseServerClient } from '@/lib/supabaseServer'; // Import async helper (fixes warnings)\nimport type { Database } from '@/types/database.types';\n\nexport default async function RootLayout({ children }: { children: React.ReactNode }) {\n  const supabase = await createSupabaseServerClient(); // Logic: Await async client (Next 15 compatible – no sync warnings)\n\n  const { data: { session } } = await supabase.auth.getSession(); // Logic: Fetch session (SSR – available to children via props if needed)\n\n  // Fetch profile for gamification (role/points – plain data only)\n  let role = 'guest';\n  let xp = 0;\n  if (session?.user.id) {\n    const profile = await prisma.profiles.findUnique({ where: { id: session.user.id } }); // Logic: profiles (match schema; assumes generate ran)\n    role = profile?.role || 'rep';\n    xp = profile?.points || 0;\n  }\n\n  return (\n    <html lang=\"en\">\n      <body>\n        <header>\n          <nav>\n            <div>\n              <span>Role: {role}</span>\n              <Progress value={(xp / 1000) * 100} className=\"w-32\" /> {/* Logic: XP bar (gamified progress – tie to levels) */}\n              {session ? (\n                <form action={signOutAction}> {/* Logic: Bind server action (no inline async – avoids serialization) */}\n                  <button type=\"submit\">Logout</button>\n                </form>\n              ) : (\n                <Link href=\"/auth/signin\">Login</Link>\n              )}\n            </div>\n          </nav>\n        </header>\n        {children}\n      </body>\n    </html>\n  );\n}"],"names":[],"mappings":"AAAA,sHAAsH;;;;;;AACtH;AACA,uOAAqD,kBAAkB;AACvE,4MAA+C,wCAAwC;AACvF,0MAAmC,mBAAmB;AACtD,0NAAmE,uCAAuC;;;;;;;AAG3F,eAAe,WAAW,EAAE,QAAQ,EAAiC;IAClF,MAAM,WAAW,MAAM,IAAA,0JAA0B,KAAI,oEAAoE;IAEzH,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU,IAAI,yEAAyE;IAEzI,iEAAiE;IACjE,IAAI,OAAO;IACX,IAAI,KAAK;IACT,IAAI,SAAS,KAAK,IAAI;QACpB,MAAM,UAAU,MAAM,+HAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO;gBAAE,IAAI,QAAQ,IAAI,CAAC,EAAE;YAAC;QAAE,IAAI,uDAAuD;QAC7I,OAAO,SAAS,QAAQ;QACxB,KAAK,SAAS,UAAU;IAC1B;IAEA,qBACE,6bAAC;QAAK,MAAK;kBACT,cAAA,6bAAC;;8BACC,6bAAC;8BACC,cAAA,6bAAC;kCACC,cAAA,6bAAC;;8CACC,6bAAC;;wCAAK;wCAAO;;;;;;;8CACb,6bAAC,gJAAQ;oCAAC,OAAO,AAAC,KAAK,OAAQ;oCAAK,WAAU;;;;;;gCAAS;gCACtD,wBACC,6bAAC;oCAAK,QAAQ,sIAAa;;wCAAE;sDAC3B,6bAAC;4CAAO,MAAK;sDAAS;;;;;;;;;;;yDAGxB,6bAAC,sXAAI;oCAAC,MAAK;8CAAe;;;;;;;;;;;;;;;;;;;;;;gBAKjC;;;;;;;;;;;;AAIT","debugId":null}}]
}