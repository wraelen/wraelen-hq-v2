{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/avatar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,udAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,iBAAiB,IAAA,udAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,8DACA;AAEG,MAAM,cAAc,IAAA,udAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/avatar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,udAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,iBAAiB,IAAA,udAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0CACA;AAEG,MAAM,cAAc,IAAA,udAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,oOAAO,EAAC,IAAA,8LAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/button.tsx"],"sourcesContent":["import { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n        \"icon-sm\": \"size-8\",\n        \"icon-lg\": \"size-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AAGA;;;;;AAEA,MAAM,iBAAiB,IAAA,kPAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;YACN,WAAW;YACX,WAAW;QACb;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,4SAAI,GAAG;IAE9B,qBACE,6bAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/dropdown-menu.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DropdownMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenu() from the server but DropdownMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenu\",\n);\nexport const DropdownMenuCheckboxItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuCheckboxItem() from the server but DropdownMenuCheckboxItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuCheckboxItem\",\n);\nexport const DropdownMenuContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuContent() from the server but DropdownMenuContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuContent\",\n);\nexport const DropdownMenuGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuGroup() from the server but DropdownMenuGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuGroup\",\n);\nexport const DropdownMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuItem() from the server but DropdownMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuItem\",\n);\nexport const DropdownMenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuLabel() from the server but DropdownMenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuLabel\",\n);\nexport const DropdownMenuPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuPortal() from the server but DropdownMenuPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuPortal\",\n);\nexport const DropdownMenuRadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioGroup() from the server but DropdownMenuRadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuRadioGroup\",\n);\nexport const DropdownMenuRadioItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioItem() from the server but DropdownMenuRadioItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuRadioItem\",\n);\nexport const DropdownMenuSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSeparator() from the server but DropdownMenuSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSeparator\",\n);\nexport const DropdownMenuShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuShortcut() from the server but DropdownMenuShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuShortcut\",\n);\nexport const DropdownMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSub() from the server but DropdownMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSub\",\n);\nexport const DropdownMenuSubContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubContent() from the server but DropdownMenuSubContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSubContent\",\n);\nexport const DropdownMenuSubTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubTrigger() from the server but DropdownMenuSubTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSubTrigger\",\n);\nexport const DropdownMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuTrigger() from the server but DropdownMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,udAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qEACA;AAEG,MAAM,2BAA2B,IAAA,udAAuB,EAC3D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,qEACA;AAEG,MAAM,sBAAsB,IAAA,udAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,qEACA;AAEG,MAAM,oBAAoB,IAAA,udAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,qEACA;AAEG,MAAM,mBAAmB,IAAA,udAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,qEACA;AAEG,MAAM,oBAAoB,IAAA,udAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,qEACA;AAEG,MAAM,qBAAqB,IAAA,udAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,qEACA;AAEG,MAAM,yBAAyB,IAAA,udAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,qEACA;AAEG,MAAM,wBAAwB,IAAA,udAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,qEACA;AAEG,MAAM,wBAAwB,IAAA,udAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,qEACA;AAEG,MAAM,uBAAuB,IAAA,udAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,qEACA;AAEG,MAAM,kBAAkB,IAAA,udAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,qEACA;AAEG,MAAM,yBAAyB,IAAA,udAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,qEACA;AAEG,MAAM,yBAAyB,IAAA,udAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,qEACA;AAEG,MAAM,sBAAsB,IAAA,udAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,qEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/dropdown-menu.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DropdownMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenu() from the server but DropdownMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenu\",\n);\nexport const DropdownMenuCheckboxItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuCheckboxItem() from the server but DropdownMenuCheckboxItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuCheckboxItem\",\n);\nexport const DropdownMenuContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuContent() from the server but DropdownMenuContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuContent\",\n);\nexport const DropdownMenuGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuGroup() from the server but DropdownMenuGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuGroup\",\n);\nexport const DropdownMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuItem() from the server but DropdownMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuItem\",\n);\nexport const DropdownMenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuLabel() from the server but DropdownMenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuLabel\",\n);\nexport const DropdownMenuPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuPortal() from the server but DropdownMenuPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuPortal\",\n);\nexport const DropdownMenuRadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioGroup() from the server but DropdownMenuRadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioGroup\",\n);\nexport const DropdownMenuRadioItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioItem() from the server but DropdownMenuRadioItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioItem\",\n);\nexport const DropdownMenuSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSeparator() from the server but DropdownMenuSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSeparator\",\n);\nexport const DropdownMenuShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuShortcut() from the server but DropdownMenuShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuShortcut\",\n);\nexport const DropdownMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSub() from the server but DropdownMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSub\",\n);\nexport const DropdownMenuSubContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubContent() from the server but DropdownMenuSubContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubContent\",\n);\nexport const DropdownMenuSubTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubTrigger() from the server but DropdownMenuSubTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubTrigger\",\n);\nexport const DropdownMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuTrigger() from the server but DropdownMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,udAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,iDACA;AAEG,MAAM,2BAA2B,IAAA,udAAuB,EAC3D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,iDACA;AAEG,MAAM,sBAAsB,IAAA,udAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iDACA;AAEG,MAAM,oBAAoB,IAAA,udAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,iDACA;AAEG,MAAM,mBAAmB,IAAA,udAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,iDACA;AAEG,MAAM,oBAAoB,IAAA,udAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,iDACA;AAEG,MAAM,qBAAqB,IAAA,udAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,iDACA;AAEG,MAAM,yBAAyB,IAAA,udAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iDACA;AAEG,MAAM,wBAAwB,IAAA,udAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,iDACA;AAEG,MAAM,wBAAwB,IAAA,udAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,iDACA;AAEG,MAAM,uBAAuB,IAAA,udAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,iDACA;AAEG,MAAM,kBAAkB,IAAA,udAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,iDACA;AAEG,MAAM,yBAAyB,IAAA,udAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iDACA;AAEG,MAAM,yBAAyB,IAAA,udAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iDACA;AAEG,MAAM,sBAAsB,IAAA,udAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6bAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,8bACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/progress.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Progress = registerClientReference(\n    function() { throw new Error(\"Attempted to call Progress() from the server but Progress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/progress.tsx <module evaluation>\",\n    \"Progress\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,WAAW,IAAA,udAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,gEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/progress.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Progress = registerClientReference(\n    function() { throw new Error(\"Attempted to call Progress() from the server but Progress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/progress.tsx\",\n    \"Progress\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,WAAW,IAAA,udAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/lib/supabaseServer.ts"],"sourcesContent":["// src/lib/supabaseServer.ts – Async Supabase server client helper (best practice: Wrap for Next 15 async cookies – fixes sync-dynamic-apis warnings; centralized for reuse in actions/layout; added autoRefresh false to avoid sets in components)\nimport { createServerClient } from '@supabase/ssr';\nimport { cookies } from 'next/headers';\nimport type { Database } from '@/types/database.types'; // Keep your types\n\nexport async function createSupabaseServerClient() {\n  const cookieStore = await cookies(); // Logic: Await dynamic cookies (Next 15 requirement – avoids sync errors)\n  return createServerClient<Database>(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      auth: {\n        autoRefreshToken: false, // Logic: Disable auto-refresh in server components (prevents token set during getSession – fixes cookie modify error; refresh in actions/middleware)\n        persistSession: false, // Logic: No persist on server (session is per-request)\n      },\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name)?.value; // Logic: Sync get after await (safe)\n        },\n        set(name: string, value: string, options: any) {\n          try {\n            cookieStore.set({ name, value, ...options }); // Logic: No await needed (set is sync)\n          } catch (error) {\n            // The `set` method was called from a Server Action. Ignore – middleware will refresh session on next request.\n            // Logic: No logging here (expected noise in Next.js 15+ with Supabase SSR during token refresh attempts; the try-catch safely ignores it per docs – unblocks cleanly without clutter; push back: If debugging needed, add console.warn only in dev via process.env.NODE_ENV)\n          }\n        },\n        remove(name: string, options: any) {\n          try {\n            cookieStore.set({ name, value: '', ...options }); // Logic: Remove via empty set\n          } catch (error) {\n            // Ignored as above\n          }\n        },\n      },\n    }\n  );\n}"],"names":[],"mappings":"AAAA,mPAAmP;;;;;AACnP;AAAA;AACA;;;AAGO,eAAe;IACpB,MAAM,cAAc,MAAM,IAAA,yVAAO,KAAI,0EAA0E;IAC/G,OAAO,IAAA,4SAAkB,sUAGvB;QACE,MAAM;YACJ,kBAAkB;YAClB,gBAAgB;QAClB;QACA,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO,OAAO,qCAAqC;YAC5E;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAY;gBAC3C,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM;wBAAO,GAAG,OAAO;oBAAC,IAAI,uCAAuC;gBACvF,EAAE,OAAO,OAAO;gBACd,8GAA8G;gBAC9G,6QAA6Q;gBAC/Q;YACF;YACA,QAAO,IAAY,EAAE,OAAY;gBAC/B,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM,OAAO;wBAAI,GAAG,OAAO;oBAAC,IAAI,8BAA8B;gBAClF,EAAE,OAAO,OAAO;gBACd,mBAAmB;gBACrB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/lib/actions.ts"],"sourcesContent":["// src/lib/actions.ts – Updated with async Supabase (align with layout fix; keeps Propstream CSV ready – test upload post-restart; fixed notes type by disabling dynamicTyping and explicit conversions – best practice: Treat CSV as strings to avoid surprises, manually Number() numerics for safety/scalability in imports/quests)\n'use server'; // Logic: Marks as server-only (no client bundle bloat – optimizes for internal app with leads/calls)\nimport { LeadSource, LeadType, PrismaClient, PropertyType } from '@prisma/client';  // Your DB client (async-safe in actions)\nimport { redirect } from 'next/navigation'; // Server redirect (reliable – no client hacks; best for post-auth flow to dashboard quests)\nimport Papa from 'papaparse'; // Logic: CSV parser (handles headers, errors – best for Propstream exports)\nimport Twilio from 'twilio'; // Logic: Twilio SDK for outbound calls (inexpensive, reliable integration)\nimport { z } from 'zod';  // Validation (type-safe inputs – prevents junk data in DB; no-brainer for prod)\nimport crypto from 'crypto';  // Built-in hash (no extra deps – for address_hash dedup)\nimport { createSupabaseServerClient } from '@/lib/supabaseServer'; // Use async helper (fixes warnings in actions too)\nimport type { Database } from '@/types/database.types'; // Types (autocompletes e.g., session.user.id for Prisma sync – now fixed via your gen)\n\nconst prisma = new PrismaClient();  // Global instance (efficient in Next.js actions – auto-closes; push back: Cache in lib/prisma.ts for hot reloads if issues)\n\nconst twilioClient = Twilio(process.env.TWILIO_ACCOUNT_SID, process.env.TWILIO_AUTH_TOKEN); // Logic: Init Twilio (guard env in prod)\n\nconst importSchema = z.object({\n  source: z.literal('propstream'), // Logic: Locked to Propstream for now (expand later)\n});  // Logic: Zod for form (file handled separately)\n\n// Action: Sign in (logic: Basic stub – expand with your original zod/email/password validation; centralized for type-safety)\nexport async function signInAction(formData: FormData) {\n  const email = formData.get('email')?.toString() ?? '';\n  const password = formData.get('password')?.toString() ?? '';\n  // ... (add your validation/error returns here; e.g., zod schema for email/password)\n  const supabase = await createSupabaseServerClient(); // Logic: Async client (Next 15 safe)\n  const { error } = await supabase.auth.signInWithPassword({ email, password });\n  if (error) {\n    return { error: error.message };\n  }\n  redirect('/dashboard'); // Logic: Post-login to HQ (quests await!)\n}\n\n// Action: Sign out (logic: Centralized mutation – avoids serialization issues in layout; redirects to signin)\nexport async function signOutAction() {\n  const supabase = await createSupabaseServerClient(); // Logic: Async client (consistent fix)\n  await supabase.auth.signOut(); // Logic: Clears session (middleware will redirect unauthed requests)\n  redirect('/auth/signin'); // Logic: Post-signout flow (back to login – update to '/' if public landing needed)\n}\n\n// Action: Import from Propstream CSV (logic: Parse file → per-row extract/map → batch upsert properties/create leads – returns results for UX)\n// New: Added enrichRealtors flag from form (optional – if true and env enabled, enrich after create; pushback: Gate to avoid costs; serial for now, batch later if scale)\n// New: After all, trigger quest checks (increment points by leads.length, check/complete quests via transaction – atomic/best practice to avoid partial fails)\nexport async function importDataAction(formData: FormData) {\n  const validated = importSchema.safeParse({\n    source: formData.get('source')?.toString() ?? 'propstream',\n  });\n  if (!validated.success) {\n    return { error: validated.error.format() };\n  }\n\n  const file = formData.get('file') as File | null; // Logic: Get uploaded CSV (from dropzone/form)\n  if (!file) {\n    return { error: 'No file uploaded' };\n  }\n\n  const enrichRealtors = formData.get('enrichRealtors') === 'true'; // New: Optional flag from checkbox (default false)\n\n  // Parse CSV (papaparse – async, handles large files stream-like)\n  const csvText = await file.text();\n  const parsed = Papa.parse(csvText, { header: true, skipEmptyLines: true, dynamicTyping: false }); // Fix: Disable dynamicTyping (all fields as strings – avoids number surprises like notes:1 as Int; explicit Number() below for numerics)\n  if (parsed.errors.length > 0) {\n    return { error: `CSV parse errors: ${parsed.errors.map(e => e.message).join('; ')}` }; // Logic: Early feedback (e.g., malformed rows)\n  }\n\n  const rows = parsed.data as Record<string, any>[]; // Logic: Typed rows (Propstream columns like 'Property Address', 'AVM', etc.)\n  const supabase = await createSupabaseServerClient(); // Logic: Hoist session fetch (efficiency – avoids per-row calls)\n  const { data: { session } } = await supabase.auth.getSession();\n  if (!session?.user.id) {\n    return { error: 'No session – login required' };\n  }\n\n  const results = await Promise.allSettled(rows.map(async (row, index) => { // Logic: Parallel for speed; settled for per-row errors\n    try {\n      // Map Propstream columns to schema (flexible – handle variants/missing; added equity/mortgage for creative financing)\n      const propertyTypeMap: Record<string, PropertyType> = { // Logic: Dict for safe enum mapping (pushback: Better than lowercase assume – handles variants)\n        'single family': 'single_family',\n        'multi family': 'multi_family',\n        'condo': 'condo',\n        'townhouse': 'townhouse',\n        'land': 'land',\n        'commercial': 'commercial',\n        'duplex (2 units, any combination)': 'multi_family', // Added: Matches your sample CSV value (normalize to enum; pushback: If more variants, expand or use AI fuzzy match later)\n        // Add more mappings as needed; default to 'other' below\n      };\n\n      const address = row['Address']?.trim() || null; // Logic: Trim (now strings)\n      const city = row['City']?.trim() || null;\n      const state = row['State']?.toUpperCase() || null; // Standardize to uppercase (e.g., 'FL' → 'FL')\n      const zip_code = row['Zip']?.trim() || null; // Keep as string for leading zeros\n      if (!address || !city || !state || !zip_code) {\n        throw new Error('Missing required address fields');\n      }\n\n      const address_hash = crypto.createHash('sha256').update(`${address}${city}${state}${zip_code}`.toLowerCase()).digest('hex'); // Logic: Normalized hash for dedup (lowercase for consistency)\n\n      const propertyData = {\n        address,\n        city,\n        state,\n        zip_code,\n        property_type: propertyTypeMap[row['Property Type']?.toLowerCase() || ''] || 'other' as PropertyType,\n        bedrooms: Number(row['Bedrooms']) || null, // Explicit Number (NaN → null)\n        bathrooms: Number(row['Total Bathrooms']) || null, // Matches CSV header 'Total Bathrooms'\n        square_feet: Number(row['Building Sqft']) || null,\n        year_built: Number(row['Effective Year Built']) || null,\n        avm: Number(row['Est. Value']) || null, // Matches 'Est. Value' for AVM\n        owner_occupied: row['Owner Occupied']?.toLowerCase() === 'yes' ? true : (row['Owner Occupied']?.toLowerCase() === 'no' ? false : null), // Boolean map from string\n        distress_signals: row['Foreclosure Factor'] ? { foreclosure: row['Foreclosure Factor'] } : null, // Json: Basic distress (expand with more CSV fields if available)\n        notes: row['Marketing Lists'] || null, // Now string (e.g., '1' instead of 1 – fixes validation error)\n        equity: Number(row['Est. Equity']) || null, // Matches 'Est. Equity' in CSV\n        remaining_balance: Number(row['Est. Remaining balance of Open Loans']) || null, // Matches CSV\n        loan_to_value: Number(row['Est. Loan-to-Value']) || null, // Matches CSV\n        open_loans: Number(row['Total Open Loans']) || null, // Matches CSV\n        metadata: { // Json: Extras for creative financing (add more if CSV has them; e.g., if 'Equity' column exists, parse here)\n        },\n      };\n\n      // Upsert property (dedup on hash – merge data)\n      const property = await prisma.properties.upsert({\n        where: { address_hash },\n        update: propertyData,\n        create: { ...propertyData, address_hash },\n      });\n\n      // Parse owner names (split first/last if combined; for owner leads)\n      const owner1First = row['Owner 1 First Name']?.trim() || null;\n      const owner1Last = row['Owner 1 Last Name']?.trim() || null;\n      const phone = row['Owner 1 Phone']?.trim() || null; // Assuming CSV has phone; add if present\n      const email = row['Owner 1 Email']?.trim() || null; // Add if CSV has email\n\n      const leadData = {\n        properties_id: property.id,\n        lead_type: 'owner' as LeadType, // Default to owner for Propstream (realtor enrich separate)\n        first_name: owner1First,\n        last_name: owner1Last,\n        phone,\n        email,\n        status: 'new' as const, // Default new\n        source: 'propstream_import' as LeadSource,\n        assigned_to: session.user.id, // Assign to importer (gamification: Their quest points)\n        points_earned: 1, // Per-lead points (expand logic for quality-based)\n        notes: row['Notes'] || null,\n        metadata: { imported_at: new Date(), county: row['County'] || null }, // Audit + extras\n      };\n\n      // Create lead (no unique – allow multiples per property if needed; pushback: Add unique constraint if 1:1 desired)\n      const lead = await prisma.leads.create({ data: leadData });\n\n      // New: Optional auto-enrich (gate with env to avoid bulk costs; pushback: Serial for simplicity, but if slow, add batch/queue later with Upstash)\n      if (enrichRealtors && process.env.ENABLE_AUTO_ENRICH === 'true') {\n        await enrichLeadRealtor(lead.id); // Call existing (handles errors internally – log, don't fail import)\n      }\n\n      return { success: true, row: index + 1, leadId: lead.id }; // For results list\n    } catch (error) {\n      console.error(`Import error for row ${index + 1}:`, error);\n      return { success: false, row: index + 1, error: (error as Error).message };\n    }\n  }));\n\n  // Filter fulfilled/rejected for summary (UX: Show counts in results)\n  const successful = results.filter(r => r.status === 'fulfilled' && (r.value as any).success).length;\n  const failed = results.length - successful;\n\n  // New: Trigger quests (after all imports – use transaction for atomic points/quests; best practice to prevent races)\n  if (successful > 0) {\n    await prisma.$transaction(async (tx) => {\n      // Get profile (by user_id from session)\n      const profile = await tx.profile.findUnique({ where: { user_id: session.user.id } });\n      if (!profile) throw new Error('Profile not found');\n\n      // Increment points (1 per successful lead; ties to leads.points_earned but aggregates to profile)\n      await tx.profile.update({\n        where: { user_id: session.user.id },\n        data: { points: { increment: successful } },\n      });\n\n      // Get active quests (for this user – check incomplete)\n      const quests = await tx.quest.findMany({\n        where: { active: true },\n      });\n\n      for (const quest of quests) {\n        // Check if already completed (unique constraint prevents dupes)\n        const existingCompletion = await tx.quest_completions.findUnique({\n          where: { quest_id_profile_id: { quest_id: quest.id, profile_id: profile.id } },\n        });\n        if (existingCompletion) continue;\n\n        // Parse criteria and check (basic for min_imports; expand for other types like min_calls)\n        const criteria = quest.criteria as { min_imports?: number } | null;\n        if (criteria?.min_imports) {\n          // Count total imports for user (ever; for one_time – adjust for daily/weekly with date filters)\n          const totalImports = await tx.leads.count({\n            where: { assigned_to: profile.id, source: LeadSource.propstream_import },\n          });\n          if (totalImports >= criteria.min_imports) {\n            // Complete quest (award extra points)\n            await tx.quest_completions.create({\n              data: {\n                quest_id: quest.id,\n                profile_id: profile.id,\n                evidence: { total_imports: totalImports, awarded_points: quest.points },\n              },\n            });\n            await tx.profile.update({\n              where: { id: profile.id },\n              data: { points: { increment: quest.points } },\n            });\n            // Optional: Unlock badge if requirements met (e.g., check badges.requirements – add similar loop if needed)\n          }\n        }\n        // Expand: Add cases for other criteria (e.g., if (criteria.min_calls) { count calls... })\n      }\n    });\n  }\n\n  if (failed === results.length) {\n    return { error: 'All rows failed – check CSV format/console logs' };\n  }\n\n  return { success: true, results, summary: { successful, failed } }; // Logic: Return array for display (no jobId yet; pushback: For long-running, add Upstash/edge func + return jobId for poll)\n}\n\n// Stub poll (replace with real DB query on 'import_jobs' table for prod; unblocks testing without Upstash)\nexport async function pollImportStatus(jobId: string) {\n  // Stub logic: Simulate progress (e.g., from memory or DB; here, random increment for testing)\n  // In real, query prisma.import_jobs.findUnique({ where: { id: jobId } }) for { progress, results, error }\n  const simulatedProgress = Math.min(100, (Math.random() * 20) + (await new Promise(r => setTimeout(r, 500)) as any || 0)); // Fake delay/increment\n  if (simulatedProgress >= 100) {\n    return { progress: 100, results: [], error: null }; // Replace with real results\n  }\n  return { progress: simulatedProgress, results: [], error: null };\n}\n\n// Action: Dial lead (logic: Twilio outbound call – from your Twilio number to lead phone; logs to calls table)\nexport async function dialLeadAction(leadId: number) {\n  try {\n    const lead = await prisma.leads.findUnique({ where: { id: leadId }, include: { properties: true } });\n    if (!lead?.phone) {\n      throw new Error('No phone for lead');\n    }\n\n    const supabase = await createSupabaseServerClient(); // Logic: Async client\n    const { data: { session } } = await supabase.auth.getSession();\n    if (!session?.user.id || lead.assigned_to !== session.user.id) {\n      throw new Error('Unauthorized or mismatched assignment');\n    }\n\n    // Twilio outbound (phone-to-phone; expand to browser via Voice SDK if web calls needed)\n    const call = await twilioClient.calls.create({\n      to: lead.phone, // Lead's number\n      from: process.env.TWILIO_PHONE_NUMBER!, // Your Twilio number\n      url: 'http://your-domain.com/api/twiml', // Logic: TwiML endpoint (create /api/twiml route for voice response – e.g., <Say>Hello, connecting to lead</Say>)\n      statusCallback: 'http://your-domain.com/api/call-status', // Logic: Webhook for metrics (update calls table on complete)\n      statusCallbackEvent: ['initiated', 'ringing', 'answered', 'completed'], // Track status\n    });\n\n    // Log call (for metrics/quests – expand with webhook for duration/points)\n    await prisma.calls.create({\n      data: {\n        leads_id: lead.id,\n        caller_id: session.user.id,\n        call_sid: call.sid, // Twilio ID for tracking\n        status: 'initiated',\n        metadata: { address: lead.properties.address },\n      },\n    });\n\n    return { success: true, callId: call.sid };\n  } catch (error) {\n    console.error('Dial error:', error);\n    return { success: false, error: (error as Error).message };\n  }\n}\n\n// Helper: Stubbed extractFromLink (removed for pivot – mock for non-CSV if needed)\n// async function extractFromLink(...) { return { /* mock data */ }; } // Comment out Zillow logic\n\n// Action: Enrich lead with realtor info (fix: Added for API call; uses RapidAPI key from .env – solves realtor missing in Propstream; push back: Cache results to avoid repeat costs)\n// New: Improved query with full address (address + city + state + zip – fixes partial failures; pushback: If API still flaky, add fallback or switch to another like Datafiniti)\n// New: Added detailed logging for debugging (query, status, raw data, parsed realtor – best practice for API issues; remove or gate in prod if verbose)\n// Suggestion: Alternate parsing to data.properties?.[0]?.listing_agent (common in Realtor APIs; adjust based on logs/raw data)\nexport async function enrichLeadRealtor(leadId: string) {\n  const supabase = await createSupabaseServerClient(); // Logic: Async client\n  const { data: { session } } = await supabase.auth.getSession();\n  if (!session?.user.id) {\n    return { error: 'No session' };\n  }\n\n  const lead = await prisma.leads.findUnique({ where: { id: leadId }, include: { properties: true } });\n  if (!lead || lead.assigned_to !== session.user.id) {\n    return { error: 'Unauthorized or lead not found' };\n  }\n\n  const fullAddress = `${lead.properties.address}, ${lead.properties.city}, ${lead.properties.state} ${lead.properties.zip_code}`; // New: Full query for better API accuracy (fixes partial address issues)\n\n  console.log(`Enriching lead ${leadId} with query: ${fullAddress}`); // New: Log the input query for verification\n\n  try {\n    const response = await fetch('https://realtor-com4.p.rapidapi.com/properties/v1/search', { // Logic: Endpoint for agents by location (adjust per API docs; e.g., /agents if separate)\n      method: 'POST', // Or GET—check docs\n      headers: {\n        'Content-Type': 'application/json',\n        'x-rapidapi-key': process.env.RAPIDAPI_KEY!, // Your key from .env (add to .env: RAPIDAPI_KEY=your_key)\n        'x-rapidapi-host': 'realtor-com4.p.rapidapi.com',\n      },\n      body: JSON.stringify({ // Params from docs (example—tweak for address search)\n        location: fullAddress,\n        limit: 1, // Top realtor\n      }),\n    });\n\n    console.log(`API response status: ${response.status}`); // New: Log status (e.g., 200 ok, 404 no match, 401 bad key)\n\n    if (!response.ok) {\n      console.log(`API error details: ${await response.text()}`); // New: Log error body if not ok (e.g., rate limit or invalid params)\n      return { error: `API error: ${response.status}` };\n    }\n\n    const data = await response.json();\n    console.log('Raw API response data:', JSON.stringify(data, null, 2)); // New: Log full response (inspect structure for agents)\n\n    const realtor = data.properties?.[0]?.listing_agent || {}; // New: Alternate parsing (common in Realtor APIs; fallback to {} if no match – adjust if logs show different path, e.g., data.agents?.[0])\n\n    console.log('Parsed realtor:', realtor); // New: Log what we're extracting (e.g., empty if no match)\n\n    await prisma.leads.update({\n      where: { id: leadId },\n      data: {\n        realtor_first_name: realtor.first_name || null,\n        realtor_last_name: realtor.last_name || null,\n        realtor_phone: realtor.phone || null,\n        metadata: { ...((typeof lead.metadata === 'object' && lead.metadata !== null) ? lead.metadata : {}), enriched_at: new Date(), api_source: 'realtor-com' }, // Cache/audit\n      },\n    });\n\n    return { success: true, realtor };\n  } catch (error) {\n    console.error('Enrich error:', error);\n    return { error: (error as Error).message };\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 974, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/DashboardHeader.tsx"],"sourcesContent":["// src/components/DashboardHeader.tsx – Demo-style header (fixed top for main area; with breadcrumb, search, theme toggle, user dropdown – gamified as \"player bar\" with XP progress). \n// Logic: Matches Shadcn example exactly (classes/h-16/border-b); added your role/XP as cards. Use hooks for theme/user if needed (e.g., useTheme for toggle). No deps beyond Shadcn. \nimport { Bell, Search } from 'lucide-react'; \nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'; \nimport { Button } from '@/components/ui/button'; \nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from '@/components/ui/dropdown-menu'; \nimport { Input } from '@/components/ui/input'; \nimport { Progress } from '@/components/ui/progress'; \nimport { signOutAction } from '@/lib/actions'; // For logout \ninterface DashboardHeaderProps { \n  role: string; \n  xp: number; \n} \nexport default function DashboardHeader({ role, xp }: DashboardHeaderProps) { \n  return ( \n    <header className=\"sticky top-0 z-30 flex h-16 items-center gap-4 border-b bg-background px-4 sm:static sm:h-auto sm:border-0 sm:bg-transparent sm:px-6\"> {/* Exact demo classes/structure */} \n      <div className=\"flex items-center gap-4\"> \n        <span className=\"text-sm font-medium\">Dashboard</span> {/* Stub breadcrumb; expand with next/navigation for dynamic */} \n      </div> \n      <div className=\"relative ml-auto flex-1 md:grow-0\"> \n        <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" /> \n        <Input type=\"search\" placeholder=\"Search...\" className=\"w-full rounded-lg bg-background pl-8 md:w-[200px] lg:w-[336px]\" /> {/* Demo search input */} \n      </div> \n      <div className=\"flex items-center gap-4\"> \n        <div className=\"rounded-md bg-card p-2 shadow-sm\"> {/* Your role card – demo-style compact */} \n          <span className=\"text-sm font-medium text-primary\">Role: {role}</span> \n        </div> \n        <div className=\"rounded-md bg-card p-2 shadow-sm\"> {/* Your XP card with progress */} \n          <span className=\"text-sm font-medium text-primary\">XP: {xp}</span> \n          <Progress value={(xp / 1000) * 100} className=\"mt-1 h-2\" /> \n        </div> \n        <Button variant=\"outline\" size=\"icon\" className=\"overflow-hidden rounded-full\"> \n          <Bell className=\"h-4 w-4\" /> {/* Notifications stub – gamified alerts for quests */} \n        </Button> \n        <DropdownMenu> \n          <DropdownMenuTrigger asChild> \n            <Button variant=\"outline\" size=\"icon\" className=\"overflow-hidden rounded-full\"> \n              <Avatar> \n                <AvatarImage src=\"/placeholder-user.jpg\" /> {/* Swap for user avatar */} \n                <AvatarFallback>U</AvatarFallback> \n              </Avatar> \n            </Button> \n          </DropdownMenuTrigger> \n          <DropdownMenuContent align=\"end\"> \n            <DropdownMenuLabel>My Account</DropdownMenuLabel> \n            <DropdownMenuSeparator /> \n            <DropdownMenuItem>Settings</DropdownMenuItem> \n            <DropdownMenuItem>Support</DropdownMenuItem> \n            <DropdownMenuSeparator /> \n            <form action={signOutAction}> \n              <DropdownMenuItem asChild> \n                <Button variant=\"ghost\" type=\"submit\" className=\"w-full justify-start\">Logout</Button> \n              </DropdownMenuItem> \n            </form> \n          </DropdownMenuContent> \n        </DropdownMenu> \n      </div> \n    </header> \n  ); \n}"],"names":[],"mappings":"AAAA,uLAAuL;AACvL,sLAAsL;;;;;;AACtL;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,4MAA+C,cAAc;;;;;;;;;AAK9C,SAAS,gBAAgB,EAAE,IAAI,EAAE,EAAE,EAAwB;IACxE,qBACE,6bAAC;QAAO,WAAU;;YAAuI;0BACvJ,6bAAC;gBAAI,WAAU;;kCACb,6bAAC;wBAAK,WAAU;kCAAsB;;;;;;oBAAgB;;;;;;;0BAExD,6bAAC;gBAAI,WAAU;;kCACb,6bAAC,oSAAM;wBAAC,WAAU;;;;;;kCAClB,6bAAC,0IAAK;wBAAC,MAAK;wBAAS,aAAY;wBAAY,WAAU;;;;;;oBAAmE;;;;;;;0BAE5H,6bAAC;gBAAI,WAAU;;kCACb,6bAAC;wBAAI,WAAU;;4BAAmC;0CAChD,6bAAC;gCAAK,WAAU;;oCAAmC;oCAAO;;;;;;;;;;;;;kCAE5D,6bAAC;wBAAI,WAAU;;4BAAmC;0CAChD,6bAAC;gCAAK,WAAU;;oCAAmC;oCAAK;;;;;;;0CACxD,6bAAC,gJAAQ;gCAAC,OAAO,AAAC,KAAK,OAAQ;gCAAK,WAAU;;;;;;;;;;;;kCAEhD,6bAAC,4IAAM;wBAAC,SAAQ;wBAAU,MAAK;wBAAO,WAAU;;0CAC9C,6bAAC,8RAAI;gCAAC,WAAU;;;;;;4BAAY;;;;;;;kCAE9B,6bAAC,4JAAY;;0CACX,6bAAC,mKAAmB;gCAAC,OAAO;0CAC1B,cAAA,6bAAC,4IAAM;oCAAC,SAAQ;oCAAU,MAAK;oCAAO,WAAU;8CAC9C,cAAA,6bAAC,4IAAM;;0DACL,6bAAC,iJAAW;gDAAC,KAAI;;;;;;4CAA0B;0DAC3C,6bAAC,oJAAc;0DAAC;;;;;;;;;;;;;;;;;;;;;;0CAItB,6bAAC,mKAAmB;gCAAC,OAAM;;kDACzB,6bAAC,iKAAiB;kDAAC;;;;;;kDACnB,6bAAC,qKAAqB;;;;;kDACtB,6bAAC,gKAAgB;kDAAC;;;;;;kDAClB,6bAAC,gKAAgB;kDAAC;;;;;;kDAClB,6bAAC,qKAAqB;;;;;kDACtB,6bAAC;wCAAK,QAAQ,sIAAa;kDACzB,cAAA,6bAAC,gKAAgB;4CAAC,OAAO;sDACvB,cAAA,6bAAC,4IAAM;gDAAC,SAAQ;gDAAQ,MAAK;gDAAS,WAAU;0DAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQvF","debugId":null}},
    {"offset": {"line": 1246, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/sidebar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Sidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sidebar() from the server but Sidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"Sidebar\",\n);\nexport const SidebarContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarContent() from the server but SidebarContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarContent\",\n);\nexport const SidebarFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarFooter() from the server but SidebarFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarFooter\",\n);\nexport const SidebarGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroup() from the server but SidebarGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarGroup\",\n);\nexport const SidebarGroupAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupAction() from the server but SidebarGroupAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarGroupAction\",\n);\nexport const SidebarGroupContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupContent() from the server but SidebarGroupContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarGroupContent\",\n);\nexport const SidebarGroupLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupLabel() from the server but SidebarGroupLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarGroupLabel\",\n);\nexport const SidebarHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarHeader() from the server but SidebarHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarHeader\",\n);\nexport const SidebarInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarInput() from the server but SidebarInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarInput\",\n);\nexport const SidebarInset = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarInset() from the server but SidebarInset is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarInset\",\n);\nexport const SidebarMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenu() from the server but SidebarMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenu\",\n);\nexport const SidebarMenuAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuAction() from the server but SidebarMenuAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuAction\",\n);\nexport const SidebarMenuBadge = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuBadge() from the server but SidebarMenuBadge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuBadge\",\n);\nexport const SidebarMenuButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuButton() from the server but SidebarMenuButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuButton\",\n);\nexport const SidebarMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuItem() from the server but SidebarMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuItem\",\n);\nexport const SidebarMenuSkeleton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSkeleton() from the server but SidebarMenuSkeleton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuSkeleton\",\n);\nexport const SidebarMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSub() from the server but SidebarMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuSub\",\n);\nexport const SidebarMenuSubButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSubButton() from the server but SidebarMenuSubButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuSubButton\",\n);\nexport const SidebarMenuSubItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSubItem() from the server but SidebarMenuSubItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuSubItem\",\n);\nexport const SidebarProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarProvider() from the server but SidebarProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarProvider\",\n);\nexport const SidebarRail = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarRail() from the server but SidebarRail is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarRail\",\n);\nexport const SidebarSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarSeparator() from the server but SidebarSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarSeparator\",\n);\nexport const SidebarTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarTrigger() from the server but SidebarTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarTrigger\",\n);\nexport const useSidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSidebar() from the server but useSidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"useSidebar\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,UAAU,IAAA,udAAuB,EAC1C;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,+DACA;AAEG,MAAM,iBAAiB,IAAA,udAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+DACA;AAEG,MAAM,gBAAgB,IAAA,udAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,+DACA;AAEG,MAAM,eAAe,IAAA,udAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,+DACA;AAEG,MAAM,qBAAqB,IAAA,udAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,+DACA;AAEG,MAAM,sBAAsB,IAAA,udAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,+DACA;AAEG,MAAM,oBAAoB,IAAA,udAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,+DACA;AAEG,MAAM,gBAAgB,IAAA,udAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,+DACA;AAEG,MAAM,eAAe,IAAA,udAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,+DACA;AAEG,MAAM,eAAe,IAAA,udAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,+DACA;AAEG,MAAM,cAAc,IAAA,udAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,+DACA;AAEG,MAAM,oBAAoB,IAAA,udAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,+DACA;AAEG,MAAM,mBAAmB,IAAA,udAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,+DACA;AAEG,MAAM,oBAAoB,IAAA,udAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,+DACA;AAEG,MAAM,kBAAkB,IAAA,udAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,+DACA;AAEG,MAAM,sBAAsB,IAAA,udAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,+DACA;AAEG,MAAM,iBAAiB,IAAA,udAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+DACA;AAEG,MAAM,uBAAuB,IAAA,udAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,+DACA;AAEG,MAAM,qBAAqB,IAAA,udAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,+DACA;AAEG,MAAM,kBAAkB,IAAA,udAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,+DACA;AAEG,MAAM,cAAc,IAAA,udAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,+DACA;AAEG,MAAM,mBAAmB,IAAA,udAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,+DACA;AAEG,MAAM,iBAAiB,IAAA,udAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+DACA;AAEG,MAAM,aAAa,IAAA,udAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,+DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1375, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/sidebar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Sidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sidebar() from the server but Sidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"Sidebar\",\n);\nexport const SidebarContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarContent() from the server but SidebarContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarContent\",\n);\nexport const SidebarFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarFooter() from the server but SidebarFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarFooter\",\n);\nexport const SidebarGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroup() from the server but SidebarGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarGroup\",\n);\nexport const SidebarGroupAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupAction() from the server but SidebarGroupAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarGroupAction\",\n);\nexport const SidebarGroupContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupContent() from the server but SidebarGroupContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarGroupContent\",\n);\nexport const SidebarGroupLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupLabel() from the server but SidebarGroupLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarGroupLabel\",\n);\nexport const SidebarHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarHeader() from the server but SidebarHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarHeader\",\n);\nexport const SidebarInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarInput() from the server but SidebarInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarInput\",\n);\nexport const SidebarInset = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarInset() from the server but SidebarInset is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarInset\",\n);\nexport const SidebarMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenu() from the server but SidebarMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenu\",\n);\nexport const SidebarMenuAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuAction() from the server but SidebarMenuAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuAction\",\n);\nexport const SidebarMenuBadge = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuBadge() from the server but SidebarMenuBadge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuBadge\",\n);\nexport const SidebarMenuButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuButton() from the server but SidebarMenuButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuButton\",\n);\nexport const SidebarMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuItem() from the server but SidebarMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuItem\",\n);\nexport const SidebarMenuSkeleton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSkeleton() from the server but SidebarMenuSkeleton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuSkeleton\",\n);\nexport const SidebarMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSub() from the server but SidebarMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuSub\",\n);\nexport const SidebarMenuSubButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSubButton() from the server but SidebarMenuSubButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuSubButton\",\n);\nexport const SidebarMenuSubItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSubItem() from the server but SidebarMenuSubItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuSubItem\",\n);\nexport const SidebarProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarProvider() from the server but SidebarProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarProvider\",\n);\nexport const SidebarRail = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarRail() from the server but SidebarRail is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarRail\",\n);\nexport const SidebarSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarSeparator() from the server but SidebarSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarSeparator\",\n);\nexport const SidebarTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarTrigger() from the server but SidebarTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarTrigger\",\n);\nexport const useSidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSidebar() from the server but useSidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"useSidebar\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,UAAU,IAAA,udAAuB,EAC1C;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2CACA;AAEG,MAAM,iBAAiB,IAAA,udAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2CACA;AAEG,MAAM,gBAAgB,IAAA,udAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,2CACA;AAEG,MAAM,eAAe,IAAA,udAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,2CACA;AAEG,MAAM,qBAAqB,IAAA,udAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,2CACA;AAEG,MAAM,sBAAsB,IAAA,udAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,2CACA;AAEG,MAAM,oBAAoB,IAAA,udAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,2CACA;AAEG,MAAM,gBAAgB,IAAA,udAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,2CACA;AAEG,MAAM,eAAe,IAAA,udAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,2CACA;AAEG,MAAM,eAAe,IAAA,udAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,2CACA;AAEG,MAAM,cAAc,IAAA,udAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,2CACA;AAEG,MAAM,oBAAoB,IAAA,udAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,2CACA;AAEG,MAAM,mBAAmB,IAAA,udAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,2CACA;AAEG,MAAM,oBAAoB,IAAA,udAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,2CACA;AAEG,MAAM,kBAAkB,IAAA,udAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2CACA;AAEG,MAAM,sBAAsB,IAAA,udAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,2CACA;AAEG,MAAM,iBAAiB,IAAA,udAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2CACA;AAEG,MAAM,uBAAuB,IAAA,udAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,2CACA;AAEG,MAAM,qBAAqB,IAAA,udAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,2CACA;AAEG,MAAM,kBAAkB,IAAA,udAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2CACA;AAEG,MAAM,cAAc,IAAA,udAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,2CACA;AAEG,MAAM,mBAAmB,IAAA,udAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,2CACA;AAEG,MAAM,iBAAiB,IAAA,udAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2CACA;AAEG,MAAM,aAAa,IAAA,udAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,2CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1504, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1512, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/lib/prisma.ts"],"sourcesContent":["// src/lib/prisma.ts – Prisma singleton (best practice: Avoids new instances per request – reduces latency/overhead for quest updates; push back: Raw imports risk exhaustion on Supabase as reps grow)\nimport { PrismaClient } from '@prisma/client';\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient();  // Prod: Single instance (efficient scale for leaderboards/queries)\n} else {\n  if (!globalThis.prisma) {\n    globalThis.prisma = new PrismaClient();  // Dev: Global persists across HMR (hot reload – no reconnections on code changes)\n  }\n  prisma = globalThis.prisma;\n}\n\nexport default prisma;  // Logic: Export for server use (type-safe, e.g., prisma.profile.findUnique autocompletes points/role)"],"names":[],"mappings":"AAAA,uMAAuM;;;;;AACvM;;AAEA,IAAI;AAEJ;;KAEO;IACL,IAAI,CAAC,WAAW,MAAM,EAAE;QACtB,WAAW,MAAM,GAAG,IAAI,6IAAY,IAAK,kFAAkF;IAC7H;IACA,SAAS,WAAW,MAAM;AAC5B;uCAEe;CAAS,sGAAsG","debugId":null}},
    {"offset": {"line": 1534, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/app/layout.tsx"],"sourcesContent":["// src/app/layout.tsx – Root layout (SSR for session fetch; gamified header with role/XP – updated for async Supabase) \n// Logic: Integrated Shadcn Sidebar (fixed left nav – always visible on desktop; rounded/shadowed container for app-like feel). Kept session/header; content wrapped in <SidebarProvider> (flex sibling). Menu structure per spec (mains + Data submenu). Icons via Lucide (Heroicons equiv). No removals – additive for navigation. \n// Update: Refactored to match Shadcn demo style – used nav items array for reusability (best practice; easy to add icons/submenus/roles), added SidebarInset for main (auto-handles padding/collapse), extracted header to DashboardHeader component (with search/user for demo match). Added stroke=\"currentColor\" to icons (fixes visibility in custom themes). \nimport '@/styles/global.css'; // Kept: Global styles \nimport { Award, Building, Database as DatabaseIcon, FileText, Home, Phone, PhoneCall, Settings, ShoppingBag, Users } from 'lucide-react'; \nimport DashboardHeader from '@/components/ui/DashboardHeader'; // New: Extracted header component (matches demo with search/user) \nimport { Sidebar, SidebarContent, SidebarFooter, SidebarGroup, SidebarGroupContent, SidebarHeader, SidebarMenu, SidebarMenuButton, SidebarMenuItem, SidebarMenuSub, SidebarMenuSubButton, SidebarMenuSubItem, SidebarProvider } from '@/components/ui/sidebar'; // Added Sub components for non-accordion submenus if needed \nimport { Sidebar, SidebarContent, SidebarFooter, SidebarGroup, SidebarGroupContent, SidebarHeader, SidebarMenu, SidebarMenuButton, SidebarMenuItem, SidebarMenuSub, SidebarMenuSubButton, SidebarMenuSubItem, SidebarProvider } from '@/components/ui/sidebar'; // Added Sub components for non-accordion submenus if needed \n\nimport { signOutAction } from '@/lib/actions'; // Import server action (bound for form) \nimport prisma from '@/lib/prisma'; // Shared singleton \nimport { createSupabaseServerClient } from '@/lib/supabaseServer'; // Import async helper (fixes warnings) \n// New: Nav items array (best practice for demo-style – reusable, easy to map with icons/sub; your menu preserved) \nconst navItems = [ \n  { title: 'Home', href: '/dashboard', icon: Home }, \n  { title: 'Extract', href: '/extract', icon: FileText }, \n  { title: 'Dialer', href: '/dialer', icon: Phone }, \n  { title: 'Achievement Gallery', href: '/achievements', icon: Award }, \n  { title: 'Shop', href: '/shop', icon: ShoppingBag }, \n  { \n    title: 'Data', \n    icon: DatabaseIcon, \n    subItems: [ \n      { title: 'Leads', href: '/data/leads', icon: Users }, \n      { title: 'Properties', href: '/data/properties', icon: Building }, \n      { title: 'Call Metrics', href: '/data/calls', icon: PhoneCall }, \n    ], \n  }, \n  { title: 'Settings', href: '/settings', icon: Settings }, \n]; \nexport default async function RootLayout({ children }: { children: React.ReactNode }) { \n  const supabase = await createSupabaseServerClient(); \n  const { data: { user } } = await supabase.auth.getUser(); \n  // Fetch profile for gamification (role/points – plain data only) \n  let role = 'guest'; \n  let xp = 0; \n  if (user?.id) { \n    const profile = await prisma.profile.findUnique({ where: { id: user.id } }); \n    role = profile?.role || 'rep'; \n    xp = profile?.points || 0; \n  } \n  return ( \n    <html lang=\"en\"> \n      <body className=\"antialiased font-mono bg-background text-foreground dark\"> \n        <SidebarProvider> \n          <Sidebar variant=\"sidebar\" collapsible=\"none\" className=\"fixed left-0 top-0 h-full w-64 bg-card shadow-md border-r\"> {/* Updated: Removed p-4 (demo uses border-r instead; cleaner) */} \n            <SidebarHeader className=\"h-16 flex items-center px-4 border-b\"> {/* Demo-style fixed height/border */} \n              <div className=\"flex items-center gap-2 font-semibold\"> \n                <div className=\"h-6 w-6 rounded bg-primary\" /> {/* Smaller logo for demo match */} \n                <span>Wraelen HQ</span> \n              </div> \n            </SidebarHeader> \n            <SidebarContent> \n              <SidebarGroup> \n                <SidebarGroupContent> \n                  <SidebarMenu> \n                    {navItems.map((item) => ( \n                      <SidebarMenuItem key={item.title}> \n                        {item.subItems ? ( \n                          <Accordion type=\"single\" collapsible defaultValue={item.title}> \n                            <AccordionItem value={item.title} className=\"border-none\"> {/* Demo-style no border */} \n                              <AccordionTrigger className=\"py-2 text-sm hover:bg-accent hover:text-accent-foreground\"> \n                                <item.icon className=\"h-4 w-4 mr-2 stroke-current\" /> {/* Demo size h-4 w-4; stroke fixes visibility */} \n                                {item.title} \n                              </AccordionTrigger> \n                              <AccordionContent className=\"p-0\"> \n                                <SidebarMenuSub> \n                                  {item.subItems.map((sub) => ( \n                                    <SidebarMenuSubItem key={sub.title}> \n                                      <SidebarMenuSubButton asChild> \n                                        <Link href={sub.href}> \n                                          <sub.icon className=\"h-4 w-4 mr-2 stroke-current\" /> \n                                          {sub.title} \n                                        </Link> \n                                      </SidebarMenuSubButton> \n                                    </SidebarMenuSubItem> \n                                  ))} \n                                </SidebarMenuSub> \n                              </AccordionContent> \n                            </AccordionItem> \n                          </Accordion> \n                        ) : ( \n                          <SidebarMenuButton asChild className=\"py-2 text-sm\"> {/* Demo-style padding/text size */} \n                            <Link href={item.href}> \n                              <item.icon className=\"h-4 w-4 mr-2 stroke-current\" /> \n                              {item.title} \n                            </Link> \n                          </SidebarMenuButton> \n                        )} \n                      </SidebarMenuItem> \n                    ))} \n                  </SidebarMenu> \n                </SidebarGroupContent> \n              </SidebarGroup> \n            </SidebarContent> \n            <SidebarFooter className=\"p-4 border-t\"> {/* Demo-style border-top */} \n              <form action={signOutAction}> \n                <Button variant=\"ghost\" type=\"submit\" className=\"w-full justify-start\">Logout</Button> \n              </form> \n            </SidebarFooter> \n          </Sidebar> \n          <div className=\"flex flex-1 flex-col min-h-screen\"> {/* New: Wrapper for header + main (demo structure for fixed header) */} \n            <DashboardHeader role={role} xp={xp} /> {/* New: Extracted header (passes role/xp; matches demo with search/user) */} \n            <main className=\"flex flex-1 flex-col p-4 lg:p-6 bg-background\"> {/* Updated: Removed lg:ml-64 (SidebarInset handles); added lg:p-6 for demo spacing */} \n              {children} \n            </main> \n          </div> \n        </SidebarProvider> \n      </body> \n    </html> \n  ); \n}"],"names":[],"mappings":"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","debugId":null}}]
}