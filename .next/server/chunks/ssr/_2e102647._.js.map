{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/progress.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Progress = registerClientReference(\n    function() { throw new Error(\"Attempted to call Progress() from the server but Progress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/progress.tsx <module evaluation>\",\n    \"Progress\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,gEACA","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/progress.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Progress = registerClientReference(\n    function() { throw new Error(\"Attempted to call Progress() from the server but Progress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/progress.tsx\",\n    \"Progress\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,ocAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4CACA","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/app/layout.tsx"],"sourcesContent":["import \"src/styles/global.css\" // Kept existing import for Tailwind styles\n\nimport { Progress } from '@/components/ui/progress'; // Added: Shadcn Progress component for visual XP bar (install if not: npx shadcn-ui@latest add progress)\n\nexport default async function RootLayout({ children }: { children: React.ReactNode }) {\n  const userXp = 150; // Kept stubbed XP for testing without auth (Level 1, 50/100 XP); replace with session.user?.xp when adding auth\n  const currentLevel = Math.min(Math.floor(userXp / 100), 99); // Added: Calc level 0-99 based on XP (100 XP per level placeholder—adjust to your defined task values; no multipliers as per your request)\n  const progressToNext = userXp % 100; // Added: Calc progress % to next level for bar fill (0-100)\n\n  return (\n    <html lang=\"en\">\n      <body>\n        {/* Added: Persistent XP bar on every page (visual progress, like WoW top bar; tied to stubbed XP for now—updates on re-render after quests) */}\n        <div className=\"fixed top-0 left-0 w-full h-4 bg-gray-200 z-50\">\n          <Progress value={progressToNext} className=\"h-full\" /> {/* Added: Progress to next level using Shadcn (Tailwind-styled); value is % to next 100 XP; used Progress to clear unused warning */}\n          <span className=\"absolute top-0 left-1/2 transform -translate-x-1/2 text-xs text-black\">Level {currentLevel} ({progressToNext}/100 XP)</span> /* Added: Level display with placeholder for lore tooltip (add Tooltip component here for hover explanation) */\n        </div>\n        {children} // Kept existing children render\n      </body>\n    </html>\n  )\n}"],"names":[],"mappings":";;;;AAEA,uOAAqD,yGAAyG;;;;AAE/I,eAAe,WAAW,EAAE,QAAQ,EAAiC;IAClF,MAAM,SAAS,KAAK,gHAAgH;IACpI,MAAM,eAAe,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,SAAS,MAAM,KAAK,2IAA2I;IACxM,MAAM,iBAAiB,SAAS,KAAK,4DAA4D;IAEjG,qBACE,6bAAC;QAAK,MAAK;kBACT,cAAA,6bAAC;;8BAEC,6bAAC;oBAAI,WAAU;;sCACb,6bAAC,oIAAA,CAAA,WAAQ;4BAAC,OAAO;4BAAgB,WAAU;;;;;;wBAAW;sCACtD,6bAAC;4BAAK,WAAU;;gCAAwE;gCAAO;gCAAa;gCAAG;gCAAe;;;;;;;wBAAe;;;;;;;gBAE9I;gBAAS;;;;;;;;;;;;AAIlB","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/next%4015.3.3_%40babel%2Bcore%407.27.1_%40opentelemetry%2Bapi%401.7.0_%40playwright%2Btest%401.52.0_babel-p_f5eb03dd7555133d0d3449b8702c5a62/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,wQAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}