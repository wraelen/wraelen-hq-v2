{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/.next-internal/server/app/dashboard/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {$$RSC_SERVER_ACTION_0 as '40d92fdaace826a4b14baf5b30cd6ab04e268791d4'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/app/dashboard/page.tsx"],"sourcesContent":["// src/app/dashboard/page.tsx – Server-rendered dashboard (efficient, secure data fetch – best for loading gamification data like role/points/badges on initial load; push back: If real-time updates needed for leaderboards, add client component with Supabase Realtime subscribe)\nimport { createServerClient } from '@supabase/ssr'; // Updated: ssr client (async-safe for Next.js 15+ – fixes old helpers deprecation; best for server fetches without cookies await issues)\nimport { cookies } from 'next/headers'; // For cookie store (secure for sessions – server-only)\nimport { redirect } from 'next/navigation'; // For unauth redirect (best practice: Server-side guard – fast, no client flash)\nimport prisma from '@/lib/prisma'; // Prisma singleton (logic: Relational fetch for profile – efficient, avoids multiple connections per request; best for scale as reps view dashboards concurrently)\nexport default async function Dashboard() {\n  const cookieStore = await cookies(); // Logic: Awaitable in 15+ (best for dynamic APIs – secure cookie access)\n  const supabase = createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    { cookies: {\n      getAll: () => cookieStore.getAll(),\n      setAll: (cookiesToSet) => {\n        try {\n          cookiesToSet.forEach(({ name, value, options }) => cookieStore.set(name, value, options)); // Logic: Attempts set (succeeds in components; ignored in actions via catch – middleware refreshes on redirect)\n        } catch {\n          // The `set` method was called from a Server Action. Ignore – middleware will refresh session on next request.\n        }\n      },\n    } }\n  ); // Logic: ssr client (async-safe sessions – replaces old helpers; best for SSR without deprecation warnings)\n  const { data: { session } } = await supabase.auth.getSession(); // Logic: Await fetch (async-safe – gets current user session; if null, redirect below)\n  if (!session) redirect('/auth/signin'); // Logic: Guard unauth (server-side – best for security, prevents data leaks before client render)\n  const profile = await prisma.profile.findUnique({ where: { user_id: session.user.id } }); // Logic: Fetch gamification data (relational – efficient query; push back: If no profile, create on-the-fly or handle error for robustness)\n  return (\n    <div className=\"p-4 bg-black text-green-500 font-mono\">\n      <h1>Welcome to HQ, {session.user.email}! Role: {profile?.role || 'Novice'}</h1> // Logic: Display user info (personalized – motivates reps; fallback for no profile)\n      <p>Points: {profile?.points || 0} | Badges: {profile?.badges.join(', ') || 'None'}</p> // Logic: Gamification stats (stub – expand with progress bar/component for visual \"level up\" feel)\n      {/* Quest board, leaderboards here – e.g., <QuestBoard userId={session.user.id} /> or realtime sub for live updates (push back: Use Supabase Realtime for peer challenges – feels \"game-like\" without polling) */}\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,qRAAqR;;;;;;AACrR,gjBAAoD,yIAAyI;AAA7L;AACA,ipBAAwC,uDAAuD;AAC/F,wuBAA4C,iFAAiF;AAA7H;AACA,gSAAmC,mKAAmK;;;;;;AACvL,eAAe;IAC5B,MAAM,cAAc,MAAM,IAAA,0YAAO,KAAI,yEAAyE;IAC9G,MAAM,WAAW,IAAA,6VAAkB,sUAGjC;QAAE,SAAS;YACT,QAAQ,IAAM,YAAY,MAAM;YAChC,QAAQ,CAAC;gBACP,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAK,YAAY,GAAG,CAAC,MAAM,OAAO,WAAW,gHAAgH;gBAC7M,EAAE,OAAM;gBACN,8GAA8G;gBAChH;YACF;QACF;IAAE,IACD,4GAA4G;IAC/G,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU,IAAI,uFAAuF;IACvJ,IAAI,CAAC,SAAS,IAAA,icAAQ,EAAC,iBAAiB,kGAAkG;IAC1I,MAAM,UAAU,MAAM,gLAAM,CAAC,OAAO,CAAC,UAAU,CAAC;QAAE,OAAO;YAAE,SAAS,QAAQ,IAAI,CAAC,EAAE;QAAC;IAAE,IAAI,4IAA4I;IACtO,qBACE,8eAAC;QAAI,WAAU;;0BACb,8eAAC;;oBAAG;oBAAgB,QAAQ,IAAI,CAAC,KAAK;oBAAC;oBAAS,SAAS,QAAQ;;;;;;;YAAc;0BAC/E,8eAAC;;oBAAE;oBAAS,SAAS,UAAU;oBAAE;oBAAY,SAAS,OAAO,KAAK,SAAS;;;;;;;YAAW;;;;;;;AAI5F","debugId":null}}]
}