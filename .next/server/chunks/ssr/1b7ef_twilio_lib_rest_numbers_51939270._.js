module.exports = [
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/bulkEligibility.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BulkEligibilityInstance = exports.BulkEligibilityContextImpl = void 0;
exports.BulkEligibilityListInstance = BulkEligibilityListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
class BulkEligibilityContextImpl {
    constructor(_version, requestId){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(requestId)) {
            throw new Error("Parameter 'requestId' is not valid.");
        }
        this._solution = {
            requestId
        };
        this._uri = `/HostedNumber/Eligibility/Bulk/${requestId}`;
    }
    fetch(callback) {
        const headers = {};
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            headers
        });
        operationPromise = operationPromise.then((payload)=>new BulkEligibilityInstance(operationVersion, payload, instance._solution.requestId));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.BulkEligibilityContextImpl = BulkEligibilityContextImpl;
class BulkEligibilityInstance {
    constructor(_version, payload, requestId){
        this._version = _version;
        this.requestId = payload.request_id;
        this.url = payload.url;
        this.results = payload.results;
        this.friendlyName = payload.friendly_name;
        this.status = payload.status;
        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
        this.dateCompleted = deserialize.iso8601DateTime(payload.date_completed);
        this._solution = {
            requestId: requestId || this.requestId
        };
    }
    get _proxy() {
        this._context = this._context || new BulkEligibilityContextImpl(this._version, this._solution.requestId);
        return this._context;
    }
    /**
     * Fetch a BulkEligibilityInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed BulkEligibilityInstance
     */ fetch(callback) {
        return this._proxy.fetch(callback);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            requestId: this.requestId,
            url: this.url,
            results: this.results,
            friendlyName: this.friendlyName,
            status: this.status,
            dateCreated: this.dateCreated,
            dateCompleted: this.dateCompleted
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.BulkEligibilityInstance = BulkEligibilityInstance;
function BulkEligibilityListInstance(version) {
    const instance = (requestId)=>instance.get(requestId);
    instance.get = function get(requestId) {
        return new BulkEligibilityContextImpl(version, requestId);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = `/HostedNumber/Eligibility/Bulk`;
    instance.create = function create(params, headers, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        data = params;
        if (headers === null || headers === undefined) {
            headers = {};
        }
        headers["Content-Type"] = "application/json";
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new BulkEligibilityInstance(operationVersion, payload));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/eligibility.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EligibilityInstance = void 0;
exports.EligibilityListInstance = EligibilityListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
function EligibilityListInstance(version) {
    const instance = {};
    instance._version = version;
    instance._solution = {};
    instance._uri = `/HostedNumber/Eligibility`;
    instance.create = function create(params, headers, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        data = params;
        if (headers === null || headers === undefined) {
            headers = {};
        }
        headers["Content-Type"] = "application/json";
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new EligibilityInstance(operationVersion, payload));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class EligibilityInstance {
    constructor(_version, payload){
        this._version = _version;
        this.results = payload.results;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            results: this.results
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.EligibilityInstance = EligibilityInstance;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/portingAllPortIn.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PortingAllPortInPage = exports.PortingAllPortInInstance = void 0;
exports.PortingAllPortInListInstance = PortingAllPortInListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const Page_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Page.js [app-rsc] (ecmascript)"));
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
function PortingAllPortInListInstance(version) {
    const instance = {};
    instance._version = version;
    instance._solution = {};
    instance._uri = `/Porting/PortIn/PortInRequests`;
    instance.page = function page(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["token"] !== undefined) data["Token"] = params["token"];
        if (params["size"] !== undefined) data["Size"] = params["size"];
        if (params["portInRequestSid"] !== undefined) data["PortInRequestSid"] = params["portInRequestSid"];
        if (params["portInRequestStatus"] !== undefined) data["PortInRequestStatus"] = params["portInRequestStatus"];
        if (params["createdBefore"] !== undefined) data["CreatedBefore"] = serialize.iso8601DateTime(params["createdBefore"]);
        if (params["createdAfter"] !== undefined) data["CreatedAfter"] = serialize.iso8601DateTime(params["createdAfter"]);
        if (params.pageNumber !== undefined) data["Page"] = params.pageNumber;
        if (params.pageToken !== undefined) data["PageToken"] = params.pageToken;
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.page({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new PortingAllPortInPage(operationVersion, payload, instance._solution));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.each = instance._version.each;
    instance.list = instance._version.list;
    instance.getPage = function getPage(targetUrl, callback) {
        const operationPromise = instance._version._domain.twilio.request({
            method: "get",
            uri: targetUrl
        });
        let pagePromise = operationPromise.then((payload)=>new PortingAllPortInPage(instance._version, payload, instance._solution));
        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);
        return pagePromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class PortingAllPortInInstance {
    constructor(_version, payload){
        this._version = _version;
        this.portInRequestSid = payload.port_in_request_sid;
        this.portInRequestStatus = payload.port_in_request_status;
        this.statusLastUpdatedTimestamp = payload.status_last_updated_timestamp;
        this.phoneNumbersRequested = deserialize.integer(payload.phone_numbers_requested);
        this.phoneNumbersPorted = deserialize.integer(payload.phone_numbers_ported);
        this.suggestedAction = payload.suggested_action;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            portInRequestSid: this.portInRequestSid,
            portInRequestStatus: this.portInRequestStatus,
            statusLastUpdatedTimestamp: this.statusLastUpdatedTimestamp,
            phoneNumbersRequested: this.phoneNumbersRequested,
            phoneNumbersPorted: this.phoneNumbersPorted,
            suggestedAction: this.suggestedAction
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.PortingAllPortInInstance = PortingAllPortInInstance;
class PortingAllPortInPage extends Page_1.default {
    /**
     * Initialize the PortingAllPortInPage
     *
     * @param version - Version of the resource
     * @param response - Response from the API
     * @param solution - Path solution
     */ constructor(version, response, solution){
        super(version, response, solution);
    }
    /**
     * Build an instance of PortingAllPortInInstance
     *
     * @param payload - Payload response from the API
     */ getInstance(payload) {
        return new PortingAllPortInInstance(this._version, payload);
    }
    [util_1.inspect.custom](depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.PortingAllPortInPage = PortingAllPortInPage;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/portingPortIn.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PortingPortInInstance = exports.PortingPortInContextImpl = exports.NumbersV1PortingPortInPhoneNumberResult = exports.NumbersV1PortingPortInCreatePhoneNumbers = exports.NumbersV1PortingPortInCreate = exports.NumbersV1PortingLosingCarrierInformation = exports.NumbersV1PortingAddress = void 0;
exports.PortingPortInListInstance = PortingPortInListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
class NumbersV1PortingAddress {
}
exports.NumbersV1PortingAddress = NumbersV1PortingAddress;
class NumbersV1PortingLosingCarrierInformation {
}
exports.NumbersV1PortingLosingCarrierInformation = NumbersV1PortingLosingCarrierInformation;
class NumbersV1PortingPortInCreate {
}
exports.NumbersV1PortingPortInCreate = NumbersV1PortingPortInCreate;
class NumbersV1PortingPortInCreatePhoneNumbers {
}
exports.NumbersV1PortingPortInCreatePhoneNumbers = NumbersV1PortingPortInCreatePhoneNumbers;
class NumbersV1PortingPortInPhoneNumberResult {
}
exports.NumbersV1PortingPortInPhoneNumberResult = NumbersV1PortingPortInPhoneNumberResult;
class PortingPortInContextImpl {
    constructor(_version, portInRequestSid){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(portInRequestSid)) {
            throw new Error("Parameter 'portInRequestSid' is not valid.");
        }
        this._solution = {
            portInRequestSid
        };
        this._uri = `/Porting/PortIn/${portInRequestSid}`;
    }
    remove(callback) {
        const headers = {};
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.remove({
            uri: instance._uri,
            method: "delete",
            headers
        });
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    fetch(callback) {
        const headers = {};
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            headers
        });
        operationPromise = operationPromise.then((payload)=>new PortingPortInInstance(operationVersion, payload, instance._solution.portInRequestSid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.PortingPortInContextImpl = PortingPortInContextImpl;
class PortingPortInInstance {
    constructor(_version, payload, portInRequestSid){
        this._version = _version;
        this.portInRequestSid = payload.port_in_request_sid;
        this.url = payload.url;
        this.accountSid = payload.account_sid;
        this.notificationEmails = payload.notification_emails;
        this.targetPortInDate = deserialize.iso8601Date(payload.target_port_in_date);
        this.targetPortInTimeRangeStart = payload.target_port_in_time_range_start;
        this.targetPortInTimeRangeEnd = payload.target_port_in_time_range_end;
        this.portInRequestStatus = payload.port_in_request_status;
        this.orderCancellationReason = payload.order_cancellation_reason;
        this.losingCarrierInformation = payload.losing_carrier_information;
        this.phoneNumbers = payload.phone_numbers;
        this.bundleSid = payload.bundle_sid;
        this.portabilityAdvanceCarrier = payload.portability_advance_carrier;
        this.autoCancelApprovalNumbers = payload.auto_cancel_approval_numbers;
        this.documents = payload.documents;
        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
        this._solution = {
            portInRequestSid: portInRequestSid || this.portInRequestSid
        };
    }
    get _proxy() {
        this._context = this._context || new PortingPortInContextImpl(this._version, this._solution.portInRequestSid);
        return this._context;
    }
    /**
     * Remove a PortingPortInInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed boolean
     */ remove(callback) {
        return this._proxy.remove(callback);
    }
    /**
     * Fetch a PortingPortInInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed PortingPortInInstance
     */ fetch(callback) {
        return this._proxy.fetch(callback);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            portInRequestSid: this.portInRequestSid,
            url: this.url,
            accountSid: this.accountSid,
            notificationEmails: this.notificationEmails,
            targetPortInDate: this.targetPortInDate,
            targetPortInTimeRangeStart: this.targetPortInTimeRangeStart,
            targetPortInTimeRangeEnd: this.targetPortInTimeRangeEnd,
            portInRequestStatus: this.portInRequestStatus,
            orderCancellationReason: this.orderCancellationReason,
            losingCarrierInformation: this.losingCarrierInformation,
            phoneNumbers: this.phoneNumbers,
            bundleSid: this.bundleSid,
            portabilityAdvanceCarrier: this.portabilityAdvanceCarrier,
            autoCancelApprovalNumbers: this.autoCancelApprovalNumbers,
            documents: this.documents,
            dateCreated: this.dateCreated
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.PortingPortInInstance = PortingPortInInstance;
function PortingPortInListInstance(version) {
    const instance = (portInRequestSid)=>instance.get(portInRequestSid);
    instance.get = function get(portInRequestSid) {
        return new PortingPortInContextImpl(version, portInRequestSid);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = `/Porting/PortIn`;
    instance.create = function create(params, headers, callback) {
        if (params === null || params === undefined) {
            throw new Error('Required parameter "params" missing.');
        }
        let data = {};
        data = params;
        if (headers === null || headers === undefined) {
            headers = {};
        }
        headers["Content-Type"] = "application/json";
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new PortingPortInInstance(operationVersion, payload));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/portingPortInPhoneNumber.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PortingPortInPhoneNumberInstance = exports.PortingPortInPhoneNumberContextImpl = void 0;
exports.PortingPortInPhoneNumberListInstance = PortingPortInPhoneNumberListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
class PortingPortInPhoneNumberContextImpl {
    constructor(_version, portInRequestSid, phoneNumberSid){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(portInRequestSid)) {
            throw new Error("Parameter 'portInRequestSid' is not valid.");
        }
        if (!(0, utility_1.isValidPathParam)(phoneNumberSid)) {
            throw new Error("Parameter 'phoneNumberSid' is not valid.");
        }
        this._solution = {
            portInRequestSid,
            phoneNumberSid
        };
        this._uri = `/Porting/PortIn/${portInRequestSid}/PhoneNumber/${phoneNumberSid}`;
    }
    remove(callback) {
        const headers = {};
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.remove({
            uri: instance._uri,
            method: "delete",
            headers
        });
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    fetch(callback) {
        const headers = {};
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            headers
        });
        operationPromise = operationPromise.then((payload)=>new PortingPortInPhoneNumberInstance(operationVersion, payload, instance._solution.portInRequestSid, instance._solution.phoneNumberSid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.PortingPortInPhoneNumberContextImpl = PortingPortInPhoneNumberContextImpl;
class PortingPortInPhoneNumberInstance {
    constructor(_version, payload, portInRequestSid, phoneNumberSid){
        this._version = _version;
        this.portInRequestSid = payload.port_in_request_sid;
        this.phoneNumberSid = payload.phone_number_sid;
        this.url = payload.url;
        this.accountSid = payload.account_sid;
        this.phoneNumberType = payload.phone_number_type;
        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
        this.country = payload.country;
        this.missingRequiredFields = payload.missing_required_fields;
        this.lastUpdated = deserialize.iso8601DateTime(payload.last_updated);
        this.phoneNumber = payload.phone_number;
        this.portable = payload.portable;
        this.notPortabilityReason = payload.not_portability_reason;
        this.notPortabilityReasonCode = deserialize.integer(payload.not_portability_reason_code);
        this.portInPhoneNumberStatus = payload.port_in_phone_number_status;
        this.portOutPin = deserialize.integer(payload.port_out_pin);
        this.rejectionReason = payload.rejection_reason;
        this.rejectionReasonCode = deserialize.integer(payload.rejection_reason_code);
        this.portDate = deserialize.iso8601DateTime(payload.port_date);
        this._solution = {
            portInRequestSid: portInRequestSid || this.portInRequestSid,
            phoneNumberSid: phoneNumberSid || this.phoneNumberSid
        };
    }
    get _proxy() {
        this._context = this._context || new PortingPortInPhoneNumberContextImpl(this._version, this._solution.portInRequestSid, this._solution.phoneNumberSid);
        return this._context;
    }
    /**
     * Remove a PortingPortInPhoneNumberInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed boolean
     */ remove(callback) {
        return this._proxy.remove(callback);
    }
    /**
     * Fetch a PortingPortInPhoneNumberInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed PortingPortInPhoneNumberInstance
     */ fetch(callback) {
        return this._proxy.fetch(callback);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            portInRequestSid: this.portInRequestSid,
            phoneNumberSid: this.phoneNumberSid,
            url: this.url,
            accountSid: this.accountSid,
            phoneNumberType: this.phoneNumberType,
            dateCreated: this.dateCreated,
            country: this.country,
            missingRequiredFields: this.missingRequiredFields,
            lastUpdated: this.lastUpdated,
            phoneNumber: this.phoneNumber,
            portable: this.portable,
            notPortabilityReason: this.notPortabilityReason,
            notPortabilityReasonCode: this.notPortabilityReasonCode,
            portInPhoneNumberStatus: this.portInPhoneNumberStatus,
            portOutPin: this.portOutPin,
            rejectionReason: this.rejectionReason,
            rejectionReasonCode: this.rejectionReasonCode,
            portDate: this.portDate
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.PortingPortInPhoneNumberInstance = PortingPortInPhoneNumberInstance;
function PortingPortInPhoneNumberListInstance(version) {
    const instance = (portInRequestSid, phoneNumberSid)=>instance.get(portInRequestSid, phoneNumberSid);
    instance.get = function get(portInRequestSid, phoneNumberSid) {
        return new PortingPortInPhoneNumberContextImpl(version, portInRequestSid, phoneNumberSid);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = ``;
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/portingPortability.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PortingPortabilityInstance = exports.PortingPortabilityContextImpl = void 0;
exports.PortingPortabilityListInstance = PortingPortabilityListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
class PortingPortabilityContextImpl {
    constructor(_version, phoneNumber){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(phoneNumber)) {
            throw new Error("Parameter 'phoneNumber' is not valid.");
        }
        this._solution = {
            phoneNumber
        };
        this._uri = `/Porting/Portability/PhoneNumber/${phoneNumber}`;
    }
    fetch(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["targetAccountSid"] !== undefined) data["TargetAccountSid"] = params["targetAccountSid"];
        if (params["addressSid"] !== undefined) data["AddressSid"] = params["addressSid"];
        const headers = {};
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new PortingPortabilityInstance(operationVersion, payload, instance._solution.phoneNumber));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.PortingPortabilityContextImpl = PortingPortabilityContextImpl;
class PortingPortabilityInstance {
    constructor(_version, payload, phoneNumber){
        this._version = _version;
        this.phoneNumber = payload.phone_number;
        this.accountSid = payload.account_sid;
        this.portable = payload.portable;
        this.pinAndAccountNumberRequired = payload.pin_and_account_number_required;
        this.notPortableReason = payload.not_portable_reason;
        this.notPortableReasonCode = deserialize.integer(payload.not_portable_reason_code);
        this.numberType = payload.number_type;
        this.country = payload.country;
        this.url = payload.url;
        this._solution = {
            phoneNumber: phoneNumber || this.phoneNumber
        };
    }
    get _proxy() {
        this._context = this._context || new PortingPortabilityContextImpl(this._version, this._solution.phoneNumber);
        return this._context;
    }
    fetch(params, callback) {
        return this._proxy.fetch(params, callback);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            phoneNumber: this.phoneNumber,
            accountSid: this.accountSid,
            portable: this.portable,
            pinAndAccountNumberRequired: this.pinAndAccountNumberRequired,
            notPortableReason: this.notPortableReason,
            notPortableReasonCode: this.notPortableReasonCode,
            numberType: this.numberType,
            country: this.country,
            url: this.url
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.PortingPortabilityInstance = PortingPortabilityInstance;
function PortingPortabilityListInstance(version) {
    const instance = (phoneNumber)=>instance.get(phoneNumber);
    instance.get = function get(phoneNumber) {
        return new PortingPortabilityContextImpl(version, phoneNumber);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = ``;
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/portingWebhookConfiguration.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PortingWebhookConfigurationInstance = void 0;
exports.PortingWebhookConfigurationListInstance = PortingWebhookConfigurationListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
function PortingWebhookConfigurationListInstance(version) {
    const instance = {};
    instance._version = version;
    instance._solution = {};
    instance._uri = `/Porting/Configuration/Webhook`;
    instance.create = function create(params, headers, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        data = params;
        if (headers === null || headers === undefined) {
            headers = {};
        }
        headers["Content-Type"] = "application/json";
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new PortingWebhookConfigurationInstance(operationVersion, payload));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class PortingWebhookConfigurationInstance {
    constructor(_version, payload){
        this._version = _version;
        this.url = payload.url;
        this.portInTargetUrl = payload.port_in_target_url;
        this.portOutTargetUrl = payload.port_out_target_url;
        this.notificationsOf = payload.notifications_of;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            url: this.url,
            portInTargetUrl: this.portInTargetUrl,
            portOutTargetUrl: this.portOutTargetUrl,
            notificationsOf: this.notificationsOf
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.PortingWebhookConfigurationInstance = PortingWebhookConfigurationInstance;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/portingWebhookConfigurationDelete.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PortingWebhookConfigurationDeleteContextImpl = void 0;
exports.PortingWebhookConfigurationDeleteListInstance = PortingWebhookConfigurationDeleteListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
class PortingWebhookConfigurationDeleteContextImpl {
    constructor(_version, webhookType){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(webhookType)) {
            throw new Error("Parameter 'webhookType' is not valid.");
        }
        this._solution = {
            webhookType
        };
        this._uri = `/Porting/Configuration/Webhook/${webhookType}`;
    }
    remove(callback) {
        const headers = {};
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.remove({
            uri: instance._uri,
            method: "delete",
            headers
        });
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.PortingWebhookConfigurationDeleteContextImpl = PortingWebhookConfigurationDeleteContextImpl;
function PortingWebhookConfigurationDeleteListInstance(version) {
    const instance = (webhookType)=>instance.get(webhookType);
    instance.get = function get(webhookType) {
        return new PortingWebhookConfigurationDeleteContextImpl(version, webhookType);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = ``;
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/signingRequestConfiguration.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SigningRequestConfigurationPage = exports.SigningRequestConfigurationInstance = void 0;
exports.SigningRequestConfigurationListInstance = SigningRequestConfigurationListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const Page_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Page.js [app-rsc] (ecmascript)"));
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
function SigningRequestConfigurationListInstance(version) {
    const instance = {};
    instance._version = version;
    instance._solution = {};
    instance._uri = `/SigningRequest/Configuration`;
    instance.create = function create(params, headers, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        data = params;
        if (headers === null || headers === undefined) {
            headers = {};
        }
        headers["Content-Type"] = "application/json";
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new SigningRequestConfigurationInstance(operationVersion, payload));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.page = function page(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["country"] !== undefined) data["Country"] = params["country"];
        if (params["product"] !== undefined) data["Product"] = params["product"];
        if (params["pageSize"] !== undefined) data["PageSize"] = params["pageSize"];
        if (params.pageNumber !== undefined) data["Page"] = params.pageNumber;
        if (params.pageToken !== undefined) data["PageToken"] = params.pageToken;
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.page({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new SigningRequestConfigurationPage(operationVersion, payload, instance._solution));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.each = instance._version.each;
    instance.list = instance._version.list;
    instance.getPage = function getPage(targetUrl, callback) {
        const operationPromise = instance._version._domain.twilio.request({
            method: "get",
            uri: targetUrl
        });
        let pagePromise = operationPromise.then((payload)=>new SigningRequestConfigurationPage(instance._version, payload, instance._solution));
        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);
        return pagePromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class SigningRequestConfigurationInstance {
    constructor(_version, payload){
        this._version = _version;
        this.logoSid = payload.logo_sid;
        this.friendlyName = payload.friendly_name;
        this.product = payload.product;
        this.country = payload.country;
        this.emailSubject = payload.email_subject;
        this.emailMessage = payload.email_message;
        this.urlRedirection = payload.url_redirection;
        this.url = payload.url;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            logoSid: this.logoSid,
            friendlyName: this.friendlyName,
            product: this.product,
            country: this.country,
            emailSubject: this.emailSubject,
            emailMessage: this.emailMessage,
            urlRedirection: this.urlRedirection,
            url: this.url
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.SigningRequestConfigurationInstance = SigningRequestConfigurationInstance;
class SigningRequestConfigurationPage extends Page_1.default {
    /**
     * Initialize the SigningRequestConfigurationPage
     *
     * @param version - Version of the resource
     * @param response - Response from the API
     * @param solution - Path solution
     */ constructor(version, response, solution){
        super(version, response, solution);
    }
    /**
     * Build an instance of SigningRequestConfigurationInstance
     *
     * @param payload - Payload response from the API
     */ getInstance(payload) {
        return new SigningRequestConfigurationInstance(this._version, payload);
    }
    [util_1.inspect.custom](depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.SigningRequestConfigurationPage = SigningRequestConfigurationPage;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/webhook.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.WebhookInstance = void 0;
exports.WebhookListInstance = WebhookListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
function WebhookListInstance(version) {
    const instance = {};
    instance._version = version;
    instance._solution = {};
    instance._uri = `/Porting/Configuration/Webhook`;
    instance.fetch = function fetch(callback) {
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            headers
        });
        operationPromise = operationPromise.then((payload)=>new WebhookInstance(operationVersion, payload));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class WebhookInstance {
    constructor(_version, payload){
        this._version = _version;
        this.url = payload.url;
        this.portInTargetUrl = payload.port_in_target_url;
        this.portOutTargetUrl = payload.port_out_target_url;
        this.notificationsOf = payload.notifications_of;
        this.portInTargetDateCreated = deserialize.iso8601DateTime(payload.port_in_target_date_created);
        this.portOutTargetDateCreated = deserialize.iso8601DateTime(payload.port_out_target_date_created);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            url: this.url,
            portInTargetUrl: this.portInTargetUrl,
            portOutTargetUrl: this.portOutTargetUrl,
            notificationsOf: this.notificationsOf,
            portInTargetDateCreated: this.portInTargetDateCreated,
            portOutTargetDateCreated: this.portOutTargetDateCreated
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.WebhookInstance = WebhookInstance;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/V1.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const Version_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Version.js [app-rsc] (ecmascript)"));
const bulkEligibility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/bulkEligibility.js [app-rsc] (ecmascript)");
const eligibility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/eligibility.js [app-rsc] (ecmascript)");
const portingAllPortIn_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/portingAllPortIn.js [app-rsc] (ecmascript)");
const portingPortIn_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/portingPortIn.js [app-rsc] (ecmascript)");
const portingPortInPhoneNumber_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/portingPortInPhoneNumber.js [app-rsc] (ecmascript)");
const portingPortability_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/portingPortability.js [app-rsc] (ecmascript)");
const portingWebhookConfiguration_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/portingWebhookConfiguration.js [app-rsc] (ecmascript)");
const portingWebhookConfigurationDelete_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/portingWebhookConfigurationDelete.js [app-rsc] (ecmascript)");
const signingRequestConfiguration_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/signingRequestConfiguration.js [app-rsc] (ecmascript)");
const webhook_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v1/webhook.js [app-rsc] (ecmascript)");
class V1 extends Version_1.default {
    /**
     * Initialize the V1 version of Numbers
     *
     * @param domain - The Twilio (Twilio.Numbers) domain
     */ constructor(domain){
        super(domain, "v1");
    }
    /** Getter for bulkEligibilities resource */ get bulkEligibilities() {
        this._bulkEligibilities = this._bulkEligibilities || (0, bulkEligibility_1.BulkEligibilityListInstance)(this);
        return this._bulkEligibilities;
    }
    /** Getter for eligibilities resource */ get eligibilities() {
        this._eligibilities = this._eligibilities || (0, eligibility_1.EligibilityListInstance)(this);
        return this._eligibilities;
    }
    /** Getter for portingAllPortIns resource */ get portingAllPortIns() {
        this._portingAllPortIns = this._portingAllPortIns || (0, portingAllPortIn_1.PortingAllPortInListInstance)(this);
        return this._portingAllPortIns;
    }
    /** Getter for portingPortIns resource */ get portingPortIns() {
        this._portingPortIns = this._portingPortIns || (0, portingPortIn_1.PortingPortInListInstance)(this);
        return this._portingPortIns;
    }
    /** Getter for portingPortInPhoneNumber resource */ get portingPortInPhoneNumber() {
        this._portingPortInPhoneNumber = this._portingPortInPhoneNumber || (0, portingPortInPhoneNumber_1.PortingPortInPhoneNumberListInstance)(this);
        return this._portingPortInPhoneNumber;
    }
    /** Getter for portingPortabilities resource */ get portingPortabilities() {
        this._portingPortabilities = this._portingPortabilities || (0, portingPortability_1.PortingPortabilityListInstance)(this);
        return this._portingPortabilities;
    }
    /** Getter for portingWebhookConfigurations resource */ get portingWebhookConfigurations() {
        this._portingWebhookConfigurations = this._portingWebhookConfigurations || (0, portingWebhookConfiguration_1.PortingWebhookConfigurationListInstance)(this);
        return this._portingWebhookConfigurations;
    }
    /** Getter for portingWebhookConfigurationsDelete resource */ get portingWebhookConfigurationsDelete() {
        this._portingWebhookConfigurationsDelete = this._portingWebhookConfigurationsDelete || (0, portingWebhookConfigurationDelete_1.PortingWebhookConfigurationDeleteListInstance)(this);
        return this._portingWebhookConfigurationsDelete;
    }
    /** Getter for signingRequestConfigurations resource */ get signingRequestConfigurations() {
        this._signingRequestConfigurations = this._signingRequestConfigurations || (0, signingRequestConfiguration_1.SigningRequestConfigurationListInstance)(this);
        return this._signingRequestConfigurations;
    }
    /** Getter for webhook resource */ get webhook() {
        this._webhook = this._webhook || (0, webhook_1.WebhookListInstance)(this);
        return this._webhook;
    }
}
exports.default = V1;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/authorizationDocument/dependentHostedNumberOrder.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DependentHostedNumberOrderPage = exports.DependentHostedNumberOrderInstance = void 0;
exports.DependentHostedNumberOrderListInstance = DependentHostedNumberOrderListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const Page_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Page.js [app-rsc] (ecmascript)"));
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
function DependentHostedNumberOrderListInstance(version, signingDocumentSid) {
    if (!(0, utility_1.isValidPathParam)(signingDocumentSid)) {
        throw new Error("Parameter 'signingDocumentSid' is not valid.");
    }
    const instance = {};
    instance._version = version;
    instance._solution = {
        signingDocumentSid
    };
    instance._uri = `/HostedNumber/AuthorizationDocuments/${signingDocumentSid}/DependentHostedNumberOrders`;
    instance.page = function page(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["status"] !== undefined) data["Status"] = params["status"];
        if (params["phoneNumber"] !== undefined) data["PhoneNumber"] = params["phoneNumber"];
        if (params["incomingPhoneNumberSid"] !== undefined) data["IncomingPhoneNumberSid"] = params["incomingPhoneNumberSid"];
        if (params["friendlyName"] !== undefined) data["FriendlyName"] = params["friendlyName"];
        if (params["pageSize"] !== undefined) data["PageSize"] = params["pageSize"];
        if (params.pageNumber !== undefined) data["Page"] = params.pageNumber;
        if (params.pageToken !== undefined) data["PageToken"] = params.pageToken;
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.page({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new DependentHostedNumberOrderPage(operationVersion, payload, instance._solution));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.each = instance._version.each;
    instance.list = instance._version.list;
    instance.getPage = function getPage(targetUrl, callback) {
        const operationPromise = instance._version._domain.twilio.request({
            method: "get",
            uri: targetUrl
        });
        let pagePromise = operationPromise.then((payload)=>new DependentHostedNumberOrderPage(instance._version, payload, instance._solution));
        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);
        return pagePromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class DependentHostedNumberOrderInstance {
    constructor(_version, payload, signingDocumentSid){
        this._version = _version;
        this.sid = payload.sid;
        this.bulkHostingRequestSid = payload.bulk_hosting_request_sid;
        this.nextStep = payload.next_step;
        this.accountSid = payload.account_sid;
        this.incomingPhoneNumberSid = payload.incoming_phone_number_sid;
        this.addressSid = payload.address_sid;
        this.signingDocumentSid = payload.signing_document_sid;
        this.phoneNumber = payload.phone_number;
        this.capabilities = payload.capabilities;
        this.friendlyName = payload.friendly_name;
        this.status = payload.status;
        this.failureReason = payload.failure_reason;
        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);
        this.email = payload.email;
        this.ccEmails = payload.cc_emails;
        this.contactTitle = payload.contact_title;
        this.contactPhoneNumber = payload.contact_phone_number;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            sid: this.sid,
            bulkHostingRequestSid: this.bulkHostingRequestSid,
            nextStep: this.nextStep,
            accountSid: this.accountSid,
            incomingPhoneNumberSid: this.incomingPhoneNumberSid,
            addressSid: this.addressSid,
            signingDocumentSid: this.signingDocumentSid,
            phoneNumber: this.phoneNumber,
            capabilities: this.capabilities,
            friendlyName: this.friendlyName,
            status: this.status,
            failureReason: this.failureReason,
            dateCreated: this.dateCreated,
            dateUpdated: this.dateUpdated,
            email: this.email,
            ccEmails: this.ccEmails,
            contactTitle: this.contactTitle,
            contactPhoneNumber: this.contactPhoneNumber
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.DependentHostedNumberOrderInstance = DependentHostedNumberOrderInstance;
class DependentHostedNumberOrderPage extends Page_1.default {
    /**
     * Initialize the DependentHostedNumberOrderPage
     *
     * @param version - Version of the resource
     * @param response - Response from the API
     * @param solution - Path solution
     */ constructor(version, response, solution){
        super(version, response, solution);
    }
    /**
     * Build an instance of DependentHostedNumberOrderInstance
     *
     * @param payload - Payload response from the API
     */ getInstance(payload) {
        return new DependentHostedNumberOrderInstance(this._version, payload, this._solution.signingDocumentSid);
    }
    [util_1.inspect.custom](depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.DependentHostedNumberOrderPage = DependentHostedNumberOrderPage;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/authorizationDocument.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AuthorizationDocumentPage = exports.AuthorizationDocumentInstance = exports.AuthorizationDocumentContextImpl = void 0;
exports.AuthorizationDocumentListInstance = AuthorizationDocumentListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const Page_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Page.js [app-rsc] (ecmascript)"));
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
const dependentHostedNumberOrder_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/authorizationDocument/dependentHostedNumberOrder.js [app-rsc] (ecmascript)");
class AuthorizationDocumentContextImpl {
    constructor(_version, sid){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(sid)) {
            throw new Error("Parameter 'sid' is not valid.");
        }
        this._solution = {
            sid
        };
        this._uri = `/HostedNumber/AuthorizationDocuments/${sid}`;
    }
    get dependentHostedNumberOrders() {
        this._dependentHostedNumberOrders = this._dependentHostedNumberOrders || (0, dependentHostedNumberOrder_1.DependentHostedNumberOrderListInstance)(this._version, this._solution.sid);
        return this._dependentHostedNumberOrders;
    }
    remove(callback) {
        const headers = {};
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.remove({
            uri: instance._uri,
            method: "delete",
            headers
        });
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    fetch(callback) {
        const headers = {};
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            headers
        });
        operationPromise = operationPromise.then((payload)=>new AuthorizationDocumentInstance(operationVersion, payload, instance._solution.sid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.AuthorizationDocumentContextImpl = AuthorizationDocumentContextImpl;
class AuthorizationDocumentInstance {
    constructor(_version, payload, sid){
        this._version = _version;
        this.sid = payload.sid;
        this.addressSid = payload.address_sid;
        this.status = payload.status;
        this.email = payload.email;
        this.ccEmails = payload.cc_emails;
        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);
        this.url = payload.url;
        this.links = payload.links;
        this._solution = {
            sid: sid || this.sid
        };
    }
    get _proxy() {
        this._context = this._context || new AuthorizationDocumentContextImpl(this._version, this._solution.sid);
        return this._context;
    }
    /**
     * Remove a AuthorizationDocumentInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed boolean
     */ remove(callback) {
        return this._proxy.remove(callback);
    }
    /**
     * Fetch a AuthorizationDocumentInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed AuthorizationDocumentInstance
     */ fetch(callback) {
        return this._proxy.fetch(callback);
    }
    /**
     * Access the dependentHostedNumberOrders.
     */ dependentHostedNumberOrders() {
        return this._proxy.dependentHostedNumberOrders;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            sid: this.sid,
            addressSid: this.addressSid,
            status: this.status,
            email: this.email,
            ccEmails: this.ccEmails,
            dateCreated: this.dateCreated,
            dateUpdated: this.dateUpdated,
            url: this.url,
            links: this.links
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.AuthorizationDocumentInstance = AuthorizationDocumentInstance;
function AuthorizationDocumentListInstance(version) {
    const instance = (sid)=>instance.get(sid);
    instance.get = function get(sid) {
        return new AuthorizationDocumentContextImpl(version, sid);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = `/HostedNumber/AuthorizationDocuments`;
    instance.create = function create(params, callback) {
        if (params === null || params === undefined) {
            throw new Error('Required parameter "params" missing.');
        }
        if (params["addressSid"] === null || params["addressSid"] === undefined) {
            throw new Error("Required parameter \"params['addressSid']\" missing.");
        }
        if (params["email"] === null || params["email"] === undefined) {
            throw new Error("Required parameter \"params['email']\" missing.");
        }
        if (params["contactPhoneNumber"] === null || params["contactPhoneNumber"] === undefined) {
            throw new Error("Required parameter \"params['contactPhoneNumber']\" missing.");
        }
        if (params["hostedNumberOrderSids"] === null || params["hostedNumberOrderSids"] === undefined) {
            throw new Error("Required parameter \"params['hostedNumberOrderSids']\" missing.");
        }
        let data = {};
        data["AddressSid"] = params["addressSid"];
        data["Email"] = params["email"];
        data["ContactPhoneNumber"] = params["contactPhoneNumber"];
        data["HostedNumberOrderSids"] = serialize.map(params["hostedNumberOrderSids"], (e)=>e);
        if (params["contactTitle"] !== undefined) data["ContactTitle"] = params["contactTitle"];
        if (params["ccEmails"] !== undefined) data["CcEmails"] = serialize.map(params["ccEmails"], (e)=>e);
        const headers = {};
        headers["Content-Type"] = "application/x-www-form-urlencoded";
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new AuthorizationDocumentInstance(operationVersion, payload));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.page = function page(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["email"] !== undefined) data["Email"] = params["email"];
        if (params["status"] !== undefined) data["Status"] = params["status"];
        if (params["pageSize"] !== undefined) data["PageSize"] = params["pageSize"];
        if (params.pageNumber !== undefined) data["Page"] = params.pageNumber;
        if (params.pageToken !== undefined) data["PageToken"] = params.pageToken;
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.page({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new AuthorizationDocumentPage(operationVersion, payload, instance._solution));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.each = instance._version.each;
    instance.list = instance._version.list;
    instance.getPage = function getPage(targetUrl, callback) {
        const operationPromise = instance._version._domain.twilio.request({
            method: "get",
            uri: targetUrl
        });
        let pagePromise = operationPromise.then((payload)=>new AuthorizationDocumentPage(instance._version, payload, instance._solution));
        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);
        return pagePromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class AuthorizationDocumentPage extends Page_1.default {
    /**
     * Initialize the AuthorizationDocumentPage
     *
     * @param version - Version of the resource
     * @param response - Response from the API
     * @param solution - Path solution
     */ constructor(version, response, solution){
        super(version, response, solution);
    }
    /**
     * Build an instance of AuthorizationDocumentInstance
     *
     * @param payload - Payload response from the API
     */ getInstance(payload) {
        return new AuthorizationDocumentInstance(this._version, payload);
    }
    [util_1.inspect.custom](depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.AuthorizationDocumentPage = AuthorizationDocumentPage;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/bulkHostedNumberOrder.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BulkHostedNumberOrderInstance = exports.BulkHostedNumberOrderContextImpl = void 0;
exports.BulkHostedNumberOrderListInstance = BulkHostedNumberOrderListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
class BulkHostedNumberOrderContextImpl {
    constructor(_version, bulkHostingSid){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(bulkHostingSid)) {
            throw new Error("Parameter 'bulkHostingSid' is not valid.");
        }
        this._solution = {
            bulkHostingSid
        };
        this._uri = `/HostedNumber/Orders/Bulk/${bulkHostingSid}`;
    }
    fetch(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["orderStatus"] !== undefined) data["OrderStatus"] = params["orderStatus"];
        const headers = {};
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new BulkHostedNumberOrderInstance(operationVersion, payload, instance._solution.bulkHostingSid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.BulkHostedNumberOrderContextImpl = BulkHostedNumberOrderContextImpl;
class BulkHostedNumberOrderInstance {
    constructor(_version, payload, bulkHostingSid){
        this._version = _version;
        this.bulkHostingSid = payload.bulk_hosting_sid;
        this.requestStatus = payload.request_status;
        this.friendlyName = payload.friendly_name;
        this.notificationEmail = payload.notification_email;
        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
        this.dateCompleted = deserialize.iso8601DateTime(payload.date_completed);
        this.url = payload.url;
        this.totalCount = deserialize.integer(payload.total_count);
        this.results = payload.results;
        this._solution = {
            bulkHostingSid: bulkHostingSid || this.bulkHostingSid
        };
    }
    get _proxy() {
        this._context = this._context || new BulkHostedNumberOrderContextImpl(this._version, this._solution.bulkHostingSid);
        return this._context;
    }
    fetch(params, callback) {
        return this._proxy.fetch(params, callback);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            bulkHostingSid: this.bulkHostingSid,
            requestStatus: this.requestStatus,
            friendlyName: this.friendlyName,
            notificationEmail: this.notificationEmail,
            dateCreated: this.dateCreated,
            dateCompleted: this.dateCompleted,
            url: this.url,
            totalCount: this.totalCount,
            results: this.results
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.BulkHostedNumberOrderInstance = BulkHostedNumberOrderInstance;
function BulkHostedNumberOrderListInstance(version) {
    const instance = (bulkHostingSid)=>instance.get(bulkHostingSid);
    instance.get = function get(bulkHostingSid) {
        return new BulkHostedNumberOrderContextImpl(version, bulkHostingSid);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = `/HostedNumber/Orders/Bulk`;
    instance.create = function create(params, headers, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        data = params;
        if (headers === null || headers === undefined) {
            headers = {};
        }
        headers["Content-Type"] = "application/json";
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new BulkHostedNumberOrderInstance(operationVersion, payload));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/bundleClone.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BundleCloneInstance = exports.BundleCloneContextImpl = void 0;
exports.BundleCloneListInstance = BundleCloneListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
class BundleCloneContextImpl {
    constructor(_version, bundleSid){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(bundleSid)) {
            throw new Error("Parameter 'bundleSid' is not valid.");
        }
        this._solution = {
            bundleSid
        };
        this._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/Clones`;
    }
    create(params, callback) {
        if (params === null || params === undefined) {
            throw new Error('Required parameter "params" missing.');
        }
        if (params["targetAccountSid"] === null || params["targetAccountSid"] === undefined) {
            throw new Error("Required parameter \"params['targetAccountSid']\" missing.");
        }
        let data = {};
        data["TargetAccountSid"] = params["targetAccountSid"];
        if (params["moveToDraft"] !== undefined) data["MoveToDraft"] = serialize.bool(params["moveToDraft"]);
        if (params["friendlyName"] !== undefined) data["FriendlyName"] = params["friendlyName"];
        const headers = {};
        headers["Content-Type"] = "application/x-www-form-urlencoded";
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new BundleCloneInstance(operationVersion, payload, instance._solution.bundleSid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.BundleCloneContextImpl = BundleCloneContextImpl;
class BundleCloneInstance {
    constructor(_version, payload, bundleSid){
        this._version = _version;
        this.bundleSid = payload.bundle_sid;
        this.accountSid = payload.account_sid;
        this.regulationSid = payload.regulation_sid;
        this.friendlyName = payload.friendly_name;
        this.status = payload.status;
        this.validUntil = deserialize.iso8601DateTime(payload.valid_until);
        this.email = payload.email;
        this.statusCallback = payload.status_callback;
        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);
        this.url = payload.url;
        this._solution = {
            bundleSid: bundleSid || this.bundleSid
        };
    }
    get _proxy() {
        this._context = this._context || new BundleCloneContextImpl(this._version, this._solution.bundleSid);
        return this._context;
    }
    create(params, callback) {
        return this._proxy.create(params, callback);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            bundleSid: this.bundleSid,
            accountSid: this.accountSid,
            regulationSid: this.regulationSid,
            friendlyName: this.friendlyName,
            status: this.status,
            validUntil: this.validUntil,
            email: this.email,
            statusCallback: this.statusCallback,
            dateCreated: this.dateCreated,
            dateUpdated: this.dateUpdated,
            url: this.url
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.BundleCloneInstance = BundleCloneInstance;
function BundleCloneListInstance(version) {
    const instance = (bundleSid)=>instance.get(bundleSid);
    instance.get = function get(bundleSid) {
        return new BundleCloneContextImpl(version, bundleSid);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = ``;
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/hostedNumberOrder.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.HostedNumberOrderPage = exports.HostedNumberOrderInstance = exports.HostedNumberOrderContextImpl = void 0;
exports.HostedNumberOrderListInstance = HostedNumberOrderListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const Page_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Page.js [app-rsc] (ecmascript)"));
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
class HostedNumberOrderContextImpl {
    constructor(_version, sid){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(sid)) {
            throw new Error("Parameter 'sid' is not valid.");
        }
        this._solution = {
            sid
        };
        this._uri = `/HostedNumber/Orders/${sid}`;
    }
    remove(callback) {
        const headers = {};
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.remove({
            uri: instance._uri,
            method: "delete",
            headers
        });
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    fetch(callback) {
        const headers = {};
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            headers
        });
        operationPromise = operationPromise.then((payload)=>new HostedNumberOrderInstance(operationVersion, payload, instance._solution.sid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    update(params, callback) {
        if (params === null || params === undefined) {
            throw new Error('Required parameter "params" missing.');
        }
        if (params["status"] === null || params["status"] === undefined) {
            throw new Error("Required parameter \"params['status']\" missing.");
        }
        let data = {};
        data["Status"] = params["status"];
        if (params["verificationCallDelay"] !== undefined) data["VerificationCallDelay"] = params["verificationCallDelay"];
        if (params["verificationCallExtension"] !== undefined) data["VerificationCallExtension"] = params["verificationCallExtension"];
        const headers = {};
        headers["Content-Type"] = "application/x-www-form-urlencoded";
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.update({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new HostedNumberOrderInstance(operationVersion, payload, instance._solution.sid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.HostedNumberOrderContextImpl = HostedNumberOrderContextImpl;
class HostedNumberOrderInstance {
    constructor(_version, payload, sid){
        this._version = _version;
        this.sid = payload.sid;
        this.accountSid = payload.account_sid;
        this.incomingPhoneNumberSid = payload.incoming_phone_number_sid;
        this.addressSid = payload.address_sid;
        this.signingDocumentSid = payload.signing_document_sid;
        this.phoneNumber = payload.phone_number;
        this.capabilities = payload.capabilities;
        this.friendlyName = payload.friendly_name;
        this.status = payload.status;
        this.failureReason = payload.failure_reason;
        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);
        this.email = payload.email;
        this.ccEmails = payload.cc_emails;
        this.url = payload.url;
        this.contactTitle = payload.contact_title;
        this.contactPhoneNumber = payload.contact_phone_number;
        this.bulkHostingRequestSid = payload.bulk_hosting_request_sid;
        this.nextStep = payload.next_step;
        this.verificationAttempts = deserialize.integer(payload.verification_attempts);
        this.verificationCallSids = payload.verification_call_sids;
        this.verificationCallDelay = deserialize.integer(payload.verification_call_delay);
        this.verificationCallExtension = payload.verification_call_extension;
        this.verificationCode = payload.verification_code;
        this.verificationType = payload.verification_type;
        this._solution = {
            sid: sid || this.sid
        };
    }
    get _proxy() {
        this._context = this._context || new HostedNumberOrderContextImpl(this._version, this._solution.sid);
        return this._context;
    }
    /**
     * Remove a HostedNumberOrderInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed boolean
     */ remove(callback) {
        return this._proxy.remove(callback);
    }
    /**
     * Fetch a HostedNumberOrderInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed HostedNumberOrderInstance
     */ fetch(callback) {
        return this._proxy.fetch(callback);
    }
    update(params, callback) {
        return this._proxy.update(params, callback);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            sid: this.sid,
            accountSid: this.accountSid,
            incomingPhoneNumberSid: this.incomingPhoneNumberSid,
            addressSid: this.addressSid,
            signingDocumentSid: this.signingDocumentSid,
            phoneNumber: this.phoneNumber,
            capabilities: this.capabilities,
            friendlyName: this.friendlyName,
            status: this.status,
            failureReason: this.failureReason,
            dateCreated: this.dateCreated,
            dateUpdated: this.dateUpdated,
            email: this.email,
            ccEmails: this.ccEmails,
            url: this.url,
            contactTitle: this.contactTitle,
            contactPhoneNumber: this.contactPhoneNumber,
            bulkHostingRequestSid: this.bulkHostingRequestSid,
            nextStep: this.nextStep,
            verificationAttempts: this.verificationAttempts,
            verificationCallSids: this.verificationCallSids,
            verificationCallDelay: this.verificationCallDelay,
            verificationCallExtension: this.verificationCallExtension,
            verificationCode: this.verificationCode,
            verificationType: this.verificationType
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.HostedNumberOrderInstance = HostedNumberOrderInstance;
function HostedNumberOrderListInstance(version) {
    const instance = (sid)=>instance.get(sid);
    instance.get = function get(sid) {
        return new HostedNumberOrderContextImpl(version, sid);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = `/HostedNumber/Orders`;
    instance.create = function create(params, callback) {
        if (params === null || params === undefined) {
            throw new Error('Required parameter "params" missing.');
        }
        if (params["phoneNumber"] === null || params["phoneNumber"] === undefined) {
            throw new Error("Required parameter \"params['phoneNumber']\" missing.");
        }
        if (params["contactPhoneNumber"] === null || params["contactPhoneNumber"] === undefined) {
            throw new Error("Required parameter \"params['contactPhoneNumber']\" missing.");
        }
        if (params["addressSid"] === null || params["addressSid"] === undefined) {
            throw new Error("Required parameter \"params['addressSid']\" missing.");
        }
        if (params["email"] === null || params["email"] === undefined) {
            throw new Error("Required parameter \"params['email']\" missing.");
        }
        let data = {};
        data["PhoneNumber"] = params["phoneNumber"];
        data["ContactPhoneNumber"] = params["contactPhoneNumber"];
        data["AddressSid"] = params["addressSid"];
        data["Email"] = params["email"];
        if (params["accountSid"] !== undefined) data["AccountSid"] = params["accountSid"];
        if (params["friendlyName"] !== undefined) data["FriendlyName"] = params["friendlyName"];
        if (params["ccEmails"] !== undefined) data["CcEmails"] = serialize.map(params["ccEmails"], (e)=>e);
        if (params["smsUrl"] !== undefined) data["SmsUrl"] = params["smsUrl"];
        if (params["smsMethod"] !== undefined) data["SmsMethod"] = params["smsMethod"];
        if (params["smsFallbackUrl"] !== undefined) data["SmsFallbackUrl"] = params["smsFallbackUrl"];
        if (params["smsCapability"] !== undefined) data["SmsCapability"] = serialize.bool(params["smsCapability"]);
        if (params["smsFallbackMethod"] !== undefined) data["SmsFallbackMethod"] = params["smsFallbackMethod"];
        if (params["statusCallbackUrl"] !== undefined) data["StatusCallbackUrl"] = params["statusCallbackUrl"];
        if (params["statusCallbackMethod"] !== undefined) data["StatusCallbackMethod"] = params["statusCallbackMethod"];
        if (params["smsApplicationSid"] !== undefined) data["SmsApplicationSid"] = params["smsApplicationSid"];
        if (params["contactTitle"] !== undefined) data["ContactTitle"] = params["contactTitle"];
        const headers = {};
        headers["Content-Type"] = "application/x-www-form-urlencoded";
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new HostedNumberOrderInstance(operationVersion, payload));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.page = function page(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["status"] !== undefined) data["Status"] = params["status"];
        if (params["smsCapability"] !== undefined) data["SmsCapability"] = serialize.bool(params["smsCapability"]);
        if (params["phoneNumber"] !== undefined) data["PhoneNumber"] = params["phoneNumber"];
        if (params["incomingPhoneNumberSid"] !== undefined) data["IncomingPhoneNumberSid"] = params["incomingPhoneNumberSid"];
        if (params["friendlyName"] !== undefined) data["FriendlyName"] = params["friendlyName"];
        if (params["pageSize"] !== undefined) data["PageSize"] = params["pageSize"];
        if (params.pageNumber !== undefined) data["Page"] = params.pageNumber;
        if (params.pageToken !== undefined) data["PageToken"] = params.pageToken;
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.page({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new HostedNumberOrderPage(operationVersion, payload, instance._solution));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.each = instance._version.each;
    instance.list = instance._version.list;
    instance.getPage = function getPage(targetUrl, callback) {
        const operationPromise = instance._version._domain.twilio.request({
            method: "get",
            uri: targetUrl
        });
        let pagePromise = operationPromise.then((payload)=>new HostedNumberOrderPage(instance._version, payload, instance._solution));
        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);
        return pagePromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class HostedNumberOrderPage extends Page_1.default {
    /**
     * Initialize the HostedNumberOrderPage
     *
     * @param version - Version of the resource
     * @param response - Response from the API
     * @param solution - Path solution
     */ constructor(version, response, solution){
        super(version, response, solution);
    }
    /**
     * Build an instance of HostedNumberOrderInstance
     *
     * @param payload - Payload response from the API
     */ getInstance(payload) {
        return new HostedNumberOrderInstance(this._version, payload);
    }
    [util_1.inspect.custom](depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.HostedNumberOrderPage = HostedNumberOrderPage;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/bundle/bundleCopy.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BundleCopyPage = exports.BundleCopyInstance = void 0;
exports.BundleCopyListInstance = BundleCopyListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const Page_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Page.js [app-rsc] (ecmascript)"));
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
function BundleCopyListInstance(version, bundleSid) {
    if (!(0, utility_1.isValidPathParam)(bundleSid)) {
        throw new Error("Parameter 'bundleSid' is not valid.");
    }
    const instance = {};
    instance._version = version;
    instance._solution = {
        bundleSid
    };
    instance._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/Copies`;
    instance.create = function create(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["friendlyName"] !== undefined) data["FriendlyName"] = params["friendlyName"];
        const headers = {};
        headers["Content-Type"] = "application/x-www-form-urlencoded";
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new BundleCopyInstance(operationVersion, payload, instance._solution.bundleSid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.page = function page(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["pageSize"] !== undefined) data["PageSize"] = params["pageSize"];
        if (params.pageNumber !== undefined) data["Page"] = params.pageNumber;
        if (params.pageToken !== undefined) data["PageToken"] = params.pageToken;
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.page({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new BundleCopyPage(operationVersion, payload, instance._solution));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.each = instance._version.each;
    instance.list = instance._version.list;
    instance.getPage = function getPage(targetUrl, callback) {
        const operationPromise = instance._version._domain.twilio.request({
            method: "get",
            uri: targetUrl
        });
        let pagePromise = operationPromise.then((payload)=>new BundleCopyPage(instance._version, payload, instance._solution));
        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);
        return pagePromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class BundleCopyInstance {
    constructor(_version, payload, bundleSid){
        this._version = _version;
        this.sid = payload.sid;
        this.accountSid = payload.account_sid;
        this.regulationSid = payload.regulation_sid;
        this.friendlyName = payload.friendly_name;
        this.status = payload.status;
        this.validUntil = deserialize.iso8601DateTime(payload.valid_until);
        this.email = payload.email;
        this.statusCallback = payload.status_callback;
        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            sid: this.sid,
            accountSid: this.accountSid,
            regulationSid: this.regulationSid,
            friendlyName: this.friendlyName,
            status: this.status,
            validUntil: this.validUntil,
            email: this.email,
            statusCallback: this.statusCallback,
            dateCreated: this.dateCreated,
            dateUpdated: this.dateUpdated
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.BundleCopyInstance = BundleCopyInstance;
class BundleCopyPage extends Page_1.default {
    /**
     * Initialize the BundleCopyPage
     *
     * @param version - Version of the resource
     * @param response - Response from the API
     * @param solution - Path solution
     */ constructor(version, response, solution){
        super(version, response, solution);
    }
    /**
     * Build an instance of BundleCopyInstance
     *
     * @param payload - Payload response from the API
     */ getInstance(payload) {
        return new BundleCopyInstance(this._version, payload, this._solution.bundleSid);
    }
    [util_1.inspect.custom](depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.BundleCopyPage = BundleCopyPage;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/bundle/evaluation.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EvaluationPage = exports.EvaluationInstance = exports.EvaluationContextImpl = void 0;
exports.EvaluationListInstance = EvaluationListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const Page_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Page.js [app-rsc] (ecmascript)"));
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
class EvaluationContextImpl {
    constructor(_version, bundleSid, sid){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(bundleSid)) {
            throw new Error("Parameter 'bundleSid' is not valid.");
        }
        if (!(0, utility_1.isValidPathParam)(sid)) {
            throw new Error("Parameter 'sid' is not valid.");
        }
        this._solution = {
            bundleSid,
            sid
        };
        this._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/Evaluations/${sid}`;
    }
    fetch(callback) {
        const headers = {};
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            headers
        });
        operationPromise = operationPromise.then((payload)=>new EvaluationInstance(operationVersion, payload, instance._solution.bundleSid, instance._solution.sid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.EvaluationContextImpl = EvaluationContextImpl;
class EvaluationInstance {
    constructor(_version, payload, bundleSid, sid){
        this._version = _version;
        this.sid = payload.sid;
        this.accountSid = payload.account_sid;
        this.regulationSid = payload.regulation_sid;
        this.bundleSid = payload.bundle_sid;
        this.status = payload.status;
        this.results = payload.results;
        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
        this.url = payload.url;
        this._solution = {
            bundleSid,
            sid: sid || this.sid
        };
    }
    get _proxy() {
        this._context = this._context || new EvaluationContextImpl(this._version, this._solution.bundleSid, this._solution.sid);
        return this._context;
    }
    /**
     * Fetch a EvaluationInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed EvaluationInstance
     */ fetch(callback) {
        return this._proxy.fetch(callback);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            sid: this.sid,
            accountSid: this.accountSid,
            regulationSid: this.regulationSid,
            bundleSid: this.bundleSid,
            status: this.status,
            results: this.results,
            dateCreated: this.dateCreated,
            url: this.url
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.EvaluationInstance = EvaluationInstance;
function EvaluationListInstance(version, bundleSid) {
    if (!(0, utility_1.isValidPathParam)(bundleSid)) {
        throw new Error("Parameter 'bundleSid' is not valid.");
    }
    const instance = (sid)=>instance.get(sid);
    instance.get = function get(sid) {
        return new EvaluationContextImpl(version, bundleSid, sid);
    };
    instance._version = version;
    instance._solution = {
        bundleSid
    };
    instance._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/Evaluations`;
    instance.create = function create(callback) {
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            headers
        });
        operationPromise = operationPromise.then((payload)=>new EvaluationInstance(operationVersion, payload, instance._solution.bundleSid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.page = function page(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["pageSize"] !== undefined) data["PageSize"] = params["pageSize"];
        if (params.pageNumber !== undefined) data["Page"] = params.pageNumber;
        if (params.pageToken !== undefined) data["PageToken"] = params.pageToken;
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.page({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new EvaluationPage(operationVersion, payload, instance._solution));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.each = instance._version.each;
    instance.list = instance._version.list;
    instance.getPage = function getPage(targetUrl, callback) {
        const operationPromise = instance._version._domain.twilio.request({
            method: "get",
            uri: targetUrl
        });
        let pagePromise = operationPromise.then((payload)=>new EvaluationPage(instance._version, payload, instance._solution));
        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);
        return pagePromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class EvaluationPage extends Page_1.default {
    /**
     * Initialize the EvaluationPage
     *
     * @param version - Version of the resource
     * @param response - Response from the API
     * @param solution - Path solution
     */ constructor(version, response, solution){
        super(version, response, solution);
    }
    /**
     * Build an instance of EvaluationInstance
     *
     * @param payload - Payload response from the API
     */ getInstance(payload) {
        return new EvaluationInstance(this._version, payload, this._solution.bundleSid);
    }
    [util_1.inspect.custom](depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.EvaluationPage = EvaluationPage;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/bundle/itemAssignment.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ItemAssignmentPage = exports.ItemAssignmentInstance = exports.ItemAssignmentContextImpl = void 0;
exports.ItemAssignmentListInstance = ItemAssignmentListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const Page_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Page.js [app-rsc] (ecmascript)"));
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
class ItemAssignmentContextImpl {
    constructor(_version, bundleSid, sid){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(bundleSid)) {
            throw new Error("Parameter 'bundleSid' is not valid.");
        }
        if (!(0, utility_1.isValidPathParam)(sid)) {
            throw new Error("Parameter 'sid' is not valid.");
        }
        this._solution = {
            bundleSid,
            sid
        };
        this._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/ItemAssignments/${sid}`;
    }
    remove(callback) {
        const headers = {};
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.remove({
            uri: instance._uri,
            method: "delete",
            headers
        });
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    fetch(callback) {
        const headers = {};
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            headers
        });
        operationPromise = operationPromise.then((payload)=>new ItemAssignmentInstance(operationVersion, payload, instance._solution.bundleSid, instance._solution.sid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.ItemAssignmentContextImpl = ItemAssignmentContextImpl;
class ItemAssignmentInstance {
    constructor(_version, payload, bundleSid, sid){
        this._version = _version;
        this.sid = payload.sid;
        this.bundleSid = payload.bundle_sid;
        this.accountSid = payload.account_sid;
        this.objectSid = payload.object_sid;
        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
        this.url = payload.url;
        this._solution = {
            bundleSid,
            sid: sid || this.sid
        };
    }
    get _proxy() {
        this._context = this._context || new ItemAssignmentContextImpl(this._version, this._solution.bundleSid, this._solution.sid);
        return this._context;
    }
    /**
     * Remove a ItemAssignmentInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed boolean
     */ remove(callback) {
        return this._proxy.remove(callback);
    }
    /**
     * Fetch a ItemAssignmentInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed ItemAssignmentInstance
     */ fetch(callback) {
        return this._proxy.fetch(callback);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            sid: this.sid,
            bundleSid: this.bundleSid,
            accountSid: this.accountSid,
            objectSid: this.objectSid,
            dateCreated: this.dateCreated,
            url: this.url
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.ItemAssignmentInstance = ItemAssignmentInstance;
function ItemAssignmentListInstance(version, bundleSid) {
    if (!(0, utility_1.isValidPathParam)(bundleSid)) {
        throw new Error("Parameter 'bundleSid' is not valid.");
    }
    const instance = (sid)=>instance.get(sid);
    instance.get = function get(sid) {
        return new ItemAssignmentContextImpl(version, bundleSid, sid);
    };
    instance._version = version;
    instance._solution = {
        bundleSid
    };
    instance._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/ItemAssignments`;
    instance.create = function create(params, callback) {
        if (params === null || params === undefined) {
            throw new Error('Required parameter "params" missing.');
        }
        if (params["objectSid"] === null || params["objectSid"] === undefined) {
            throw new Error("Required parameter \"params['objectSid']\" missing.");
        }
        let data = {};
        data["ObjectSid"] = params["objectSid"];
        const headers = {};
        headers["Content-Type"] = "application/x-www-form-urlencoded";
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new ItemAssignmentInstance(operationVersion, payload, instance._solution.bundleSid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.page = function page(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["pageSize"] !== undefined) data["PageSize"] = params["pageSize"];
        if (params.pageNumber !== undefined) data["Page"] = params.pageNumber;
        if (params.pageToken !== undefined) data["PageToken"] = params.pageToken;
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.page({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new ItemAssignmentPage(operationVersion, payload, instance._solution));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.each = instance._version.each;
    instance.list = instance._version.list;
    instance.getPage = function getPage(targetUrl, callback) {
        const operationPromise = instance._version._domain.twilio.request({
            method: "get",
            uri: targetUrl
        });
        let pagePromise = operationPromise.then((payload)=>new ItemAssignmentPage(instance._version, payload, instance._solution));
        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);
        return pagePromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class ItemAssignmentPage extends Page_1.default {
    /**
     * Initialize the ItemAssignmentPage
     *
     * @param version - Version of the resource
     * @param response - Response from the API
     * @param solution - Path solution
     */ constructor(version, response, solution){
        super(version, response, solution);
    }
    /**
     * Build an instance of ItemAssignmentInstance
     *
     * @param payload - Payload response from the API
     */ getInstance(payload) {
        return new ItemAssignmentInstance(this._version, payload, this._solution.bundleSid);
    }
    [util_1.inspect.custom](depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.ItemAssignmentPage = ItemAssignmentPage;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/bundle/replaceItems.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ReplaceItemsInstance = void 0;
exports.ReplaceItemsListInstance = ReplaceItemsListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
function ReplaceItemsListInstance(version, bundleSid) {
    if (!(0, utility_1.isValidPathParam)(bundleSid)) {
        throw new Error("Parameter 'bundleSid' is not valid.");
    }
    const instance = {};
    instance._version = version;
    instance._solution = {
        bundleSid
    };
    instance._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/ReplaceItems`;
    instance.create = function create(params, callback) {
        if (params === null || params === undefined) {
            throw new Error('Required parameter "params" missing.');
        }
        if (params["fromBundleSid"] === null || params["fromBundleSid"] === undefined) {
            throw new Error("Required parameter \"params['fromBundleSid']\" missing.");
        }
        let data = {};
        data["FromBundleSid"] = params["fromBundleSid"];
        const headers = {};
        headers["Content-Type"] = "application/x-www-form-urlencoded";
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new ReplaceItemsInstance(operationVersion, payload, instance._solution.bundleSid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class ReplaceItemsInstance {
    constructor(_version, payload, bundleSid){
        this._version = _version;
        this.sid = payload.sid;
        this.accountSid = payload.account_sid;
        this.regulationSid = payload.regulation_sid;
        this.friendlyName = payload.friendly_name;
        this.status = payload.status;
        this.validUntil = deserialize.iso8601DateTime(payload.valid_until);
        this.email = payload.email;
        this.statusCallback = payload.status_callback;
        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            sid: this.sid,
            accountSid: this.accountSid,
            regulationSid: this.regulationSid,
            friendlyName: this.friendlyName,
            status: this.status,
            validUntil: this.validUntil,
            email: this.email,
            statusCallback: this.statusCallback,
            dateCreated: this.dateCreated,
            dateUpdated: this.dateUpdated
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.ReplaceItemsInstance = ReplaceItemsInstance;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/bundle.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BundlePage = exports.BundleInstance = exports.BundleContextImpl = void 0;
exports.BundleListInstance = BundleListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const Page_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Page.js [app-rsc] (ecmascript)"));
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
const bundleCopy_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/bundle/bundleCopy.js [app-rsc] (ecmascript)");
const evaluation_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/bundle/evaluation.js [app-rsc] (ecmascript)");
const itemAssignment_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/bundle/itemAssignment.js [app-rsc] (ecmascript)");
const replaceItems_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/bundle/replaceItems.js [app-rsc] (ecmascript)");
class BundleContextImpl {
    constructor(_version, sid){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(sid)) {
            throw new Error("Parameter 'sid' is not valid.");
        }
        this._solution = {
            sid
        };
        this._uri = `/RegulatoryCompliance/Bundles/${sid}`;
    }
    get bundleCopies() {
        this._bundleCopies = this._bundleCopies || (0, bundleCopy_1.BundleCopyListInstance)(this._version, this._solution.sid);
        return this._bundleCopies;
    }
    get evaluations() {
        this._evaluations = this._evaluations || (0, evaluation_1.EvaluationListInstance)(this._version, this._solution.sid);
        return this._evaluations;
    }
    get itemAssignments() {
        this._itemAssignments = this._itemAssignments || (0, itemAssignment_1.ItemAssignmentListInstance)(this._version, this._solution.sid);
        return this._itemAssignments;
    }
    get replaceItems() {
        this._replaceItems = this._replaceItems || (0, replaceItems_1.ReplaceItemsListInstance)(this._version, this._solution.sid);
        return this._replaceItems;
    }
    remove(callback) {
        const headers = {};
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.remove({
            uri: instance._uri,
            method: "delete",
            headers
        });
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    fetch(callback) {
        const headers = {};
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            headers
        });
        operationPromise = operationPromise.then((payload)=>new BundleInstance(operationVersion, payload, instance._solution.sid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    update(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["status"] !== undefined) data["Status"] = params["status"];
        if (params["statusCallback"] !== undefined) data["StatusCallback"] = params["statusCallback"];
        if (params["friendlyName"] !== undefined) data["FriendlyName"] = params["friendlyName"];
        if (params["email"] !== undefined) data["Email"] = params["email"];
        const headers = {};
        headers["Content-Type"] = "application/x-www-form-urlencoded";
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.update({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new BundleInstance(operationVersion, payload, instance._solution.sid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.BundleContextImpl = BundleContextImpl;
class BundleInstance {
    constructor(_version, payload, sid){
        this._version = _version;
        this.sid = payload.sid;
        this.accountSid = payload.account_sid;
        this.regulationSid = payload.regulation_sid;
        this.friendlyName = payload.friendly_name;
        this.status = payload.status;
        this.validUntil = deserialize.iso8601DateTime(payload.valid_until);
        this.email = payload.email;
        this.statusCallback = payload.status_callback;
        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);
        this.url = payload.url;
        this.links = payload.links;
        this._solution = {
            sid: sid || this.sid
        };
    }
    get _proxy() {
        this._context = this._context || new BundleContextImpl(this._version, this._solution.sid);
        return this._context;
    }
    /**
     * Remove a BundleInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed boolean
     */ remove(callback) {
        return this._proxy.remove(callback);
    }
    /**
     * Fetch a BundleInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed BundleInstance
     */ fetch(callback) {
        return this._proxy.fetch(callback);
    }
    update(params, callback) {
        return this._proxy.update(params, callback);
    }
    /**
     * Access the bundleCopies.
     */ bundleCopies() {
        return this._proxy.bundleCopies;
    }
    /**
     * Access the evaluations.
     */ evaluations() {
        return this._proxy.evaluations;
    }
    /**
     * Access the itemAssignments.
     */ itemAssignments() {
        return this._proxy.itemAssignments;
    }
    /**
     * Access the replaceItems.
     */ replaceItems() {
        return this._proxy.replaceItems;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            sid: this.sid,
            accountSid: this.accountSid,
            regulationSid: this.regulationSid,
            friendlyName: this.friendlyName,
            status: this.status,
            validUntil: this.validUntil,
            email: this.email,
            statusCallback: this.statusCallback,
            dateCreated: this.dateCreated,
            dateUpdated: this.dateUpdated,
            url: this.url,
            links: this.links
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.BundleInstance = BundleInstance;
function BundleListInstance(version) {
    const instance = (sid)=>instance.get(sid);
    instance.get = function get(sid) {
        return new BundleContextImpl(version, sid);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = `/RegulatoryCompliance/Bundles`;
    instance.create = function create(params, callback) {
        if (params === null || params === undefined) {
            throw new Error('Required parameter "params" missing.');
        }
        if (params["friendlyName"] === null || params["friendlyName"] === undefined) {
            throw new Error("Required parameter \"params['friendlyName']\" missing.");
        }
        if (params["email"] === null || params["email"] === undefined) {
            throw new Error("Required parameter \"params['email']\" missing.");
        }
        let data = {};
        data["FriendlyName"] = params["friendlyName"];
        data["Email"] = params["email"];
        if (params["statusCallback"] !== undefined) data["StatusCallback"] = params["statusCallback"];
        if (params["regulationSid"] !== undefined) data["RegulationSid"] = params["regulationSid"];
        if (params["isoCountry"] !== undefined) data["IsoCountry"] = params["isoCountry"];
        if (params["endUserType"] !== undefined) data["EndUserType"] = params["endUserType"];
        if (params["numberType"] !== undefined) data["NumberType"] = params["numberType"];
        if (params["isTest"] !== undefined) data["IsTest"] = serialize.bool(params["isTest"]);
        const headers = {};
        headers["Content-Type"] = "application/x-www-form-urlencoded";
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new BundleInstance(operationVersion, payload));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.page = function page(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["status"] !== undefined) data["Status"] = params["status"];
        if (params["friendlyName"] !== undefined) data["FriendlyName"] = params["friendlyName"];
        if (params["regulationSid"] !== undefined) data["RegulationSid"] = params["regulationSid"];
        if (params["isoCountry"] !== undefined) data["IsoCountry"] = params["isoCountry"];
        if (params["numberType"] !== undefined) data["NumberType"] = params["numberType"];
        if (params["hasValidUntilDate"] !== undefined) data["HasValidUntilDate"] = serialize.bool(params["hasValidUntilDate"]);
        if (params["sortBy"] !== undefined) data["SortBy"] = params["sortBy"];
        if (params["sortDirection"] !== undefined) data["SortDirection"] = params["sortDirection"];
        if (params["validUntilDate"] !== undefined) data["ValidUntilDate"] = serialize.iso8601DateTime(params["validUntilDate"]);
        if (params["validUntilDateBefore"] !== undefined) data["ValidUntilDate<"] = serialize.iso8601DateTime(params["validUntilDateBefore"]);
        if (params["validUntilDateAfter"] !== undefined) data["ValidUntilDate>"] = serialize.iso8601DateTime(params["validUntilDateAfter"]);
        if (params["pageSize"] !== undefined) data["PageSize"] = params["pageSize"];
        if (params.pageNumber !== undefined) data["Page"] = params.pageNumber;
        if (params.pageToken !== undefined) data["PageToken"] = params.pageToken;
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.page({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new BundlePage(operationVersion, payload, instance._solution));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.each = instance._version.each;
    instance.list = instance._version.list;
    instance.getPage = function getPage(targetUrl, callback) {
        const operationPromise = instance._version._domain.twilio.request({
            method: "get",
            uri: targetUrl
        });
        let pagePromise = operationPromise.then((payload)=>new BundlePage(instance._version, payload, instance._solution));
        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);
        return pagePromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class BundlePage extends Page_1.default {
    /**
     * Initialize the BundlePage
     *
     * @param version - Version of the resource
     * @param response - Response from the API
     * @param solution - Path solution
     */ constructor(version, response, solution){
        super(version, response, solution);
    }
    /**
     * Build an instance of BundleInstance
     *
     * @param payload - Payload response from the API
     */ getInstance(payload) {
        return new BundleInstance(this._version, payload);
    }
    [util_1.inspect.custom](depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.BundlePage = BundlePage;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/endUser.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EndUserPage = exports.EndUserInstance = exports.EndUserContextImpl = void 0;
exports.EndUserListInstance = EndUserListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const Page_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Page.js [app-rsc] (ecmascript)"));
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
class EndUserContextImpl {
    constructor(_version, sid){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(sid)) {
            throw new Error("Parameter 'sid' is not valid.");
        }
        this._solution = {
            sid
        };
        this._uri = `/RegulatoryCompliance/EndUsers/${sid}`;
    }
    remove(callback) {
        const headers = {};
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.remove({
            uri: instance._uri,
            method: "delete",
            headers
        });
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    fetch(callback) {
        const headers = {};
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            headers
        });
        operationPromise = operationPromise.then((payload)=>new EndUserInstance(operationVersion, payload, instance._solution.sid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    update(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["friendlyName"] !== undefined) data["FriendlyName"] = params["friendlyName"];
        if (params["attributes"] !== undefined) data["Attributes"] = serialize.object(params["attributes"]);
        const headers = {};
        headers["Content-Type"] = "application/x-www-form-urlencoded";
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.update({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new EndUserInstance(operationVersion, payload, instance._solution.sid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.EndUserContextImpl = EndUserContextImpl;
class EndUserInstance {
    constructor(_version, payload, sid){
        this._version = _version;
        this.sid = payload.sid;
        this.accountSid = payload.account_sid;
        this.friendlyName = payload.friendly_name;
        this.type = payload.type;
        this.attributes = payload.attributes;
        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);
        this.url = payload.url;
        this._solution = {
            sid: sid || this.sid
        };
    }
    get _proxy() {
        this._context = this._context || new EndUserContextImpl(this._version, this._solution.sid);
        return this._context;
    }
    /**
     * Remove a EndUserInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed boolean
     */ remove(callback) {
        return this._proxy.remove(callback);
    }
    /**
     * Fetch a EndUserInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed EndUserInstance
     */ fetch(callback) {
        return this._proxy.fetch(callback);
    }
    update(params, callback) {
        return this._proxy.update(params, callback);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            sid: this.sid,
            accountSid: this.accountSid,
            friendlyName: this.friendlyName,
            type: this.type,
            attributes: this.attributes,
            dateCreated: this.dateCreated,
            dateUpdated: this.dateUpdated,
            url: this.url
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.EndUserInstance = EndUserInstance;
function EndUserListInstance(version) {
    const instance = (sid)=>instance.get(sid);
    instance.get = function get(sid) {
        return new EndUserContextImpl(version, sid);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = `/RegulatoryCompliance/EndUsers`;
    instance.create = function create(params, callback) {
        if (params === null || params === undefined) {
            throw new Error('Required parameter "params" missing.');
        }
        if (params["friendlyName"] === null || params["friendlyName"] === undefined) {
            throw new Error("Required parameter \"params['friendlyName']\" missing.");
        }
        if (params["type"] === null || params["type"] === undefined) {
            throw new Error("Required parameter \"params['type']\" missing.");
        }
        let data = {};
        data["FriendlyName"] = params["friendlyName"];
        data["Type"] = params["type"];
        if (params["attributes"] !== undefined) data["Attributes"] = serialize.object(params["attributes"]);
        const headers = {};
        headers["Content-Type"] = "application/x-www-form-urlencoded";
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new EndUserInstance(operationVersion, payload));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.page = function page(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["pageSize"] !== undefined) data["PageSize"] = params["pageSize"];
        if (params.pageNumber !== undefined) data["Page"] = params.pageNumber;
        if (params.pageToken !== undefined) data["PageToken"] = params.pageToken;
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.page({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new EndUserPage(operationVersion, payload, instance._solution));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.each = instance._version.each;
    instance.list = instance._version.list;
    instance.getPage = function getPage(targetUrl, callback) {
        const operationPromise = instance._version._domain.twilio.request({
            method: "get",
            uri: targetUrl
        });
        let pagePromise = operationPromise.then((payload)=>new EndUserPage(instance._version, payload, instance._solution));
        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);
        return pagePromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class EndUserPage extends Page_1.default {
    /**
     * Initialize the EndUserPage
     *
     * @param version - Version of the resource
     * @param response - Response from the API
     * @param solution - Path solution
     */ constructor(version, response, solution){
        super(version, response, solution);
    }
    /**
     * Build an instance of EndUserInstance
     *
     * @param payload - Payload response from the API
     */ getInstance(payload) {
        return new EndUserInstance(this._version, payload);
    }
    [util_1.inspect.custom](depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.EndUserPage = EndUserPage;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/endUserType.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EndUserTypePage = exports.EndUserTypeInstance = exports.EndUserTypeContextImpl = void 0;
exports.EndUserTypeListInstance = EndUserTypeListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const Page_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Page.js [app-rsc] (ecmascript)"));
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
class EndUserTypeContextImpl {
    constructor(_version, sid){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(sid)) {
            throw new Error("Parameter 'sid' is not valid.");
        }
        this._solution = {
            sid
        };
        this._uri = `/RegulatoryCompliance/EndUserTypes/${sid}`;
    }
    fetch(callback) {
        const headers = {};
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            headers
        });
        operationPromise = operationPromise.then((payload)=>new EndUserTypeInstance(operationVersion, payload, instance._solution.sid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.EndUserTypeContextImpl = EndUserTypeContextImpl;
class EndUserTypeInstance {
    constructor(_version, payload, sid){
        this._version = _version;
        this.sid = payload.sid;
        this.friendlyName = payload.friendly_name;
        this.machineName = payload.machine_name;
        this.fields = payload.fields;
        this.url = payload.url;
        this._solution = {
            sid: sid || this.sid
        };
    }
    get _proxy() {
        this._context = this._context || new EndUserTypeContextImpl(this._version, this._solution.sid);
        return this._context;
    }
    /**
     * Fetch a EndUserTypeInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed EndUserTypeInstance
     */ fetch(callback) {
        return this._proxy.fetch(callback);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            sid: this.sid,
            friendlyName: this.friendlyName,
            machineName: this.machineName,
            fields: this.fields,
            url: this.url
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.EndUserTypeInstance = EndUserTypeInstance;
function EndUserTypeListInstance(version) {
    const instance = (sid)=>instance.get(sid);
    instance.get = function get(sid) {
        return new EndUserTypeContextImpl(version, sid);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = `/RegulatoryCompliance/EndUserTypes`;
    instance.page = function page(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["pageSize"] !== undefined) data["PageSize"] = params["pageSize"];
        if (params.pageNumber !== undefined) data["Page"] = params.pageNumber;
        if (params.pageToken !== undefined) data["PageToken"] = params.pageToken;
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.page({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new EndUserTypePage(operationVersion, payload, instance._solution));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.each = instance._version.each;
    instance.list = instance._version.list;
    instance.getPage = function getPage(targetUrl, callback) {
        const operationPromise = instance._version._domain.twilio.request({
            method: "get",
            uri: targetUrl
        });
        let pagePromise = operationPromise.then((payload)=>new EndUserTypePage(instance._version, payload, instance._solution));
        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);
        return pagePromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class EndUserTypePage extends Page_1.default {
    /**
     * Initialize the EndUserTypePage
     *
     * @param version - Version of the resource
     * @param response - Response from the API
     * @param solution - Path solution
     */ constructor(version, response, solution){
        super(version, response, solution);
    }
    /**
     * Build an instance of EndUserTypeInstance
     *
     * @param payload - Payload response from the API
     */ getInstance(payload) {
        return new EndUserTypeInstance(this._version, payload);
    }
    [util_1.inspect.custom](depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.EndUserTypePage = EndUserTypePage;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/regulation.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RegulationPage = exports.RegulationInstance = exports.RegulationContextImpl = void 0;
exports.RegulationListInstance = RegulationListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const Page_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Page.js [app-rsc] (ecmascript)"));
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
class RegulationContextImpl {
    constructor(_version, sid){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(sid)) {
            throw new Error("Parameter 'sid' is not valid.");
        }
        this._solution = {
            sid
        };
        this._uri = `/RegulatoryCompliance/Regulations/${sid}`;
    }
    fetch(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["includeConstraints"] !== undefined) data["IncludeConstraints"] = serialize.bool(params["includeConstraints"]);
        const headers = {};
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new RegulationInstance(operationVersion, payload, instance._solution.sid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.RegulationContextImpl = RegulationContextImpl;
class RegulationInstance {
    constructor(_version, payload, sid){
        this._version = _version;
        this.sid = payload.sid;
        this.friendlyName = payload.friendly_name;
        this.isoCountry = payload.iso_country;
        this.numberType = payload.number_type;
        this.endUserType = payload.end_user_type;
        this.requirements = payload.requirements;
        this.url = payload.url;
        this._solution = {
            sid: sid || this.sid
        };
    }
    get _proxy() {
        this._context = this._context || new RegulationContextImpl(this._version, this._solution.sid);
        return this._context;
    }
    fetch(params, callback) {
        return this._proxy.fetch(params, callback);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            sid: this.sid,
            friendlyName: this.friendlyName,
            isoCountry: this.isoCountry,
            numberType: this.numberType,
            endUserType: this.endUserType,
            requirements: this.requirements,
            url: this.url
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.RegulationInstance = RegulationInstance;
function RegulationListInstance(version) {
    const instance = (sid)=>instance.get(sid);
    instance.get = function get(sid) {
        return new RegulationContextImpl(version, sid);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = `/RegulatoryCompliance/Regulations`;
    instance.page = function page(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["endUserType"] !== undefined) data["EndUserType"] = params["endUserType"];
        if (params["isoCountry"] !== undefined) data["IsoCountry"] = params["isoCountry"];
        if (params["numberType"] !== undefined) data["NumberType"] = params["numberType"];
        if (params["includeConstraints"] !== undefined) data["IncludeConstraints"] = serialize.bool(params["includeConstraints"]);
        if (params["pageSize"] !== undefined) data["PageSize"] = params["pageSize"];
        if (params.pageNumber !== undefined) data["Page"] = params.pageNumber;
        if (params.pageToken !== undefined) data["PageToken"] = params.pageToken;
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.page({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new RegulationPage(operationVersion, payload, instance._solution));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.each = instance._version.each;
    instance.list = instance._version.list;
    instance.getPage = function getPage(targetUrl, callback) {
        const operationPromise = instance._version._domain.twilio.request({
            method: "get",
            uri: targetUrl
        });
        let pagePromise = operationPromise.then((payload)=>new RegulationPage(instance._version, payload, instance._solution));
        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);
        return pagePromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class RegulationPage extends Page_1.default {
    /**
     * Initialize the RegulationPage
     *
     * @param version - Version of the resource
     * @param response - Response from the API
     * @param solution - Path solution
     */ constructor(version, response, solution){
        super(version, response, solution);
    }
    /**
     * Build an instance of RegulationInstance
     *
     * @param payload - Payload response from the API
     */ getInstance(payload) {
        return new RegulationInstance(this._version, payload);
    }
    [util_1.inspect.custom](depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.RegulationPage = RegulationPage;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/supportingDocument.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SupportingDocumentPage = exports.SupportingDocumentInstance = exports.SupportingDocumentContextImpl = void 0;
exports.SupportingDocumentListInstance = SupportingDocumentListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const Page_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Page.js [app-rsc] (ecmascript)"));
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
class SupportingDocumentContextImpl {
    constructor(_version, sid){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(sid)) {
            throw new Error("Parameter 'sid' is not valid.");
        }
        this._solution = {
            sid
        };
        this._uri = `/RegulatoryCompliance/SupportingDocuments/${sid}`;
    }
    remove(callback) {
        const headers = {};
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.remove({
            uri: instance._uri,
            method: "delete",
            headers
        });
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    fetch(callback) {
        const headers = {};
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            headers
        });
        operationPromise = operationPromise.then((payload)=>new SupportingDocumentInstance(operationVersion, payload, instance._solution.sid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    update(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["friendlyName"] !== undefined) data["FriendlyName"] = params["friendlyName"];
        if (params["attributes"] !== undefined) data["Attributes"] = serialize.object(params["attributes"]);
        const headers = {};
        headers["Content-Type"] = "application/x-www-form-urlencoded";
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.update({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new SupportingDocumentInstance(operationVersion, payload, instance._solution.sid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.SupportingDocumentContextImpl = SupportingDocumentContextImpl;
class SupportingDocumentInstance {
    constructor(_version, payload, sid){
        this._version = _version;
        this.sid = payload.sid;
        this.accountSid = payload.account_sid;
        this.friendlyName = payload.friendly_name;
        this.mimeType = payload.mime_type;
        this.status = payload.status;
        this.failureReason = payload.failure_reason;
        this.errors = payload.errors;
        this.type = payload.type;
        this.attributes = payload.attributes;
        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);
        this.url = payload.url;
        this._solution = {
            sid: sid || this.sid
        };
    }
    get _proxy() {
        this._context = this._context || new SupportingDocumentContextImpl(this._version, this._solution.sid);
        return this._context;
    }
    /**
     * Remove a SupportingDocumentInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed boolean
     */ remove(callback) {
        return this._proxy.remove(callback);
    }
    /**
     * Fetch a SupportingDocumentInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed SupportingDocumentInstance
     */ fetch(callback) {
        return this._proxy.fetch(callback);
    }
    update(params, callback) {
        return this._proxy.update(params, callback);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            sid: this.sid,
            accountSid: this.accountSid,
            friendlyName: this.friendlyName,
            mimeType: this.mimeType,
            status: this.status,
            failureReason: this.failureReason,
            errors: this.errors,
            type: this.type,
            attributes: this.attributes,
            dateCreated: this.dateCreated,
            dateUpdated: this.dateUpdated,
            url: this.url
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.SupportingDocumentInstance = SupportingDocumentInstance;
function SupportingDocumentListInstance(version) {
    const instance = (sid)=>instance.get(sid);
    instance.get = function get(sid) {
        return new SupportingDocumentContextImpl(version, sid);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = `/RegulatoryCompliance/SupportingDocuments`;
    instance.create = function create(params, callback) {
        if (params === null || params === undefined) {
            throw new Error('Required parameter "params" missing.');
        }
        if (params["friendlyName"] === null || params["friendlyName"] === undefined) {
            throw new Error("Required parameter \"params['friendlyName']\" missing.");
        }
        if (params["type"] === null || params["type"] === undefined) {
            throw new Error("Required parameter \"params['type']\" missing.");
        }
        let data = {};
        data["FriendlyName"] = params["friendlyName"];
        data["Type"] = params["type"];
        if (params["attributes"] !== undefined) data["Attributes"] = serialize.object(params["attributes"]);
        const headers = {};
        headers["Content-Type"] = "application/x-www-form-urlencoded";
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new SupportingDocumentInstance(operationVersion, payload));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.page = function page(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["pageSize"] !== undefined) data["PageSize"] = params["pageSize"];
        if (params.pageNumber !== undefined) data["Page"] = params.pageNumber;
        if (params.pageToken !== undefined) data["PageToken"] = params.pageToken;
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.page({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new SupportingDocumentPage(operationVersion, payload, instance._solution));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.each = instance._version.each;
    instance.list = instance._version.list;
    instance.getPage = function getPage(targetUrl, callback) {
        const operationPromise = instance._version._domain.twilio.request({
            method: "get",
            uri: targetUrl
        });
        let pagePromise = operationPromise.then((payload)=>new SupportingDocumentPage(instance._version, payload, instance._solution));
        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);
        return pagePromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class SupportingDocumentPage extends Page_1.default {
    /**
     * Initialize the SupportingDocumentPage
     *
     * @param version - Version of the resource
     * @param response - Response from the API
     * @param solution - Path solution
     */ constructor(version, response, solution){
        super(version, response, solution);
    }
    /**
     * Build an instance of SupportingDocumentInstance
     *
     * @param payload - Payload response from the API
     */ getInstance(payload) {
        return new SupportingDocumentInstance(this._version, payload);
    }
    [util_1.inspect.custom](depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.SupportingDocumentPage = SupportingDocumentPage;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/supportingDocumentType.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SupportingDocumentTypePage = exports.SupportingDocumentTypeInstance = exports.SupportingDocumentTypeContextImpl = void 0;
exports.SupportingDocumentTypeListInstance = SupportingDocumentTypeListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const Page_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Page.js [app-rsc] (ecmascript)"));
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const utility_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/utility.js [app-rsc] (ecmascript)");
class SupportingDocumentTypeContextImpl {
    constructor(_version, sid){
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(sid)) {
            throw new Error("Parameter 'sid' is not valid.");
        }
        this._solution = {
            sid
        };
        this._uri = `/RegulatoryCompliance/SupportingDocumentTypes/${sid}`;
    }
    fetch(callback) {
        const headers = {};
        headers["Accept"] = "application/json";
        const instance = this;
        let operationVersion = instance._version, operationPromise = operationVersion.fetch({
            uri: instance._uri,
            method: "get",
            headers
        });
        operationPromise = operationPromise.then((payload)=>new SupportingDocumentTypeInstance(operationVersion, payload, instance._solution.sid));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.SupportingDocumentTypeContextImpl = SupportingDocumentTypeContextImpl;
class SupportingDocumentTypeInstance {
    constructor(_version, payload, sid){
        this._version = _version;
        this.sid = payload.sid;
        this.friendlyName = payload.friendly_name;
        this.machineName = payload.machine_name;
        this.fields = payload.fields;
        this.url = payload.url;
        this._solution = {
            sid: sid || this.sid
        };
    }
    get _proxy() {
        this._context = this._context || new SupportingDocumentTypeContextImpl(this._version, this._solution.sid);
        return this._context;
    }
    /**
     * Fetch a SupportingDocumentTypeInstance
     *
     * @param callback - Callback to handle processed record
     *
     * @returns Resolves to processed SupportingDocumentTypeInstance
     */ fetch(callback) {
        return this._proxy.fetch(callback);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            sid: this.sid,
            friendlyName: this.friendlyName,
            machineName: this.machineName,
            fields: this.fields,
            url: this.url
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.SupportingDocumentTypeInstance = SupportingDocumentTypeInstance;
function SupportingDocumentTypeListInstance(version) {
    const instance = (sid)=>instance.get(sid);
    instance.get = function get(sid) {
        return new SupportingDocumentTypeContextImpl(version, sid);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = `/RegulatoryCompliance/SupportingDocumentTypes`;
    instance.page = function page(params, callback) {
        if (params instanceof Function) {
            callback = params;
            params = {};
        } else {
            params = params || {};
        }
        let data = {};
        if (params["pageSize"] !== undefined) data["PageSize"] = params["pageSize"];
        if (params.pageNumber !== undefined) data["Page"] = params.pageNumber;
        if (params.pageToken !== undefined) data["PageToken"] = params.pageToken;
        const headers = {};
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.page({
            uri: instance._uri,
            method: "get",
            params: data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new SupportingDocumentTypePage(operationVersion, payload, instance._solution));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.each = instance._version.each;
    instance.list = instance._version.list;
    instance.getPage = function getPage(targetUrl, callback) {
        const operationPromise = instance._version._domain.twilio.request({
            method: "get",
            uri: targetUrl
        });
        let pagePromise = operationPromise.then((payload)=>new SupportingDocumentTypePage(instance._version, payload, instance._solution));
        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);
        return pagePromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class SupportingDocumentTypePage extends Page_1.default {
    /**
     * Initialize the SupportingDocumentTypePage
     *
     * @param version - Version of the resource
     * @param response - Response from the API
     * @param solution - Path solution
     */ constructor(version, response, solution){
        super(version, response, solution);
    }
    /**
     * Build an instance of SupportingDocumentTypeInstance
     *
     * @param payload - Payload response from the API
     */ getInstance(payload) {
        return new SupportingDocumentTypeInstance(this._version, payload);
    }
    [util_1.inspect.custom](depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.SupportingDocumentTypePage = SupportingDocumentTypePage;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RegulatoryComplianceListInstance = RegulatoryComplianceListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
const bundle_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/bundle.js [app-rsc] (ecmascript)");
const endUser_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/endUser.js [app-rsc] (ecmascript)");
const endUserType_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/endUserType.js [app-rsc] (ecmascript)");
const regulation_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/regulation.js [app-rsc] (ecmascript)");
const supportingDocument_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/supportingDocument.js [app-rsc] (ecmascript)");
const supportingDocumentType_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/supportingDocumentType.js [app-rsc] (ecmascript)");
function RegulatoryComplianceListInstance(version) {
    const instance = {};
    instance._version = version;
    instance._solution = {};
    instance._uri = `/RegulatoryCompliance`;
    Object.defineProperty(instance, "bundles", {
        get: function bundles() {
            if (!instance._bundles) {
                instance._bundles = (0, bundle_1.BundleListInstance)(instance._version);
            }
            return instance._bundles;
        }
    });
    Object.defineProperty(instance, "endUsers", {
        get: function endUsers() {
            if (!instance._endUsers) {
                instance._endUsers = (0, endUser_1.EndUserListInstance)(instance._version);
            }
            return instance._endUsers;
        }
    });
    Object.defineProperty(instance, "endUserTypes", {
        get: function endUserTypes() {
            if (!instance._endUserTypes) {
                instance._endUserTypes = (0, endUserType_1.EndUserTypeListInstance)(instance._version);
            }
            return instance._endUserTypes;
        }
    });
    Object.defineProperty(instance, "regulations", {
        get: function regulations() {
            if (!instance._regulations) {
                instance._regulations = (0, regulation_1.RegulationListInstance)(instance._version);
            }
            return instance._regulations;
        }
    });
    Object.defineProperty(instance, "supportingDocuments", {
        get: function supportingDocuments() {
            if (!instance._supportingDocuments) {
                instance._supportingDocuments = (0, supportingDocument_1.SupportingDocumentListInstance)(instance._version);
            }
            return instance._supportingDocuments;
        }
    });
    Object.defineProperty(instance, "supportingDocumentTypes", {
        get: function supportingDocumentTypes() {
            if (!instance._supportingDocumentTypes) {
                instance._supportingDocumentTypes = (0, supportingDocumentType_1.SupportingDocumentTypeListInstance)(instance._version);
            }
            return instance._supportingDocumentTypes;
        }
    });
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/V2.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const Version_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Version.js [app-rsc] (ecmascript)"));
const authorizationDocument_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/authorizationDocument.js [app-rsc] (ecmascript)");
const bulkHostedNumberOrder_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/bulkHostedNumberOrder.js [app-rsc] (ecmascript)");
const bundleClone_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/bundleClone.js [app-rsc] (ecmascript)");
const hostedNumberOrder_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/hostedNumberOrder.js [app-rsc] (ecmascript)");
const regulatoryCompliance_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance.js [app-rsc] (ecmascript)");
class V2 extends Version_1.default {
    /**
     * Initialize the V2 version of Numbers
     *
     * @param domain - The Twilio (Twilio.Numbers) domain
     */ constructor(domain){
        super(domain, "v2");
    }
    /** Getter for authorizationDocuments resource */ get authorizationDocuments() {
        this._authorizationDocuments = this._authorizationDocuments || (0, authorizationDocument_1.AuthorizationDocumentListInstance)(this);
        return this._authorizationDocuments;
    }
    /** Getter for bulkHostedNumberOrders resource */ get bulkHostedNumberOrders() {
        this._bulkHostedNumberOrders = this._bulkHostedNumberOrders || (0, bulkHostedNumberOrder_1.BulkHostedNumberOrderListInstance)(this);
        return this._bulkHostedNumberOrders;
    }
    /** Getter for bundleClone resource */ get bundleClone() {
        this._bundleClone = this._bundleClone || (0, bundleClone_1.BundleCloneListInstance)(this);
        return this._bundleClone;
    }
    /** Getter for hostedNumberOrders resource */ get hostedNumberOrders() {
        this._hostedNumberOrders = this._hostedNumberOrders || (0, hostedNumberOrder_1.HostedNumberOrderListInstance)(this);
        return this._hostedNumberOrders;
    }
    /** Getter for regulatoryCompliance resource */ get regulatoryCompliance() {
        this._regulatoryCompliance = this._regulatoryCompliance || (0, regulatoryCompliance_1.RegulatoryComplianceListInstance)(this);
        return this._regulatoryCompliance;
    }
}
exports.default = V2;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v3/hostedNumberOrder.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.HostedNumberOrderInstance = void 0;
exports.HostedNumberOrderListInstance = HostedNumberOrderListInstance;
const util_1 = __turbopack_context__.r("[externals]/util [external] (util, cjs)");
const deserialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/deserialize.js [app-rsc] (ecmascript)");
const serialize = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/serialize.js [app-rsc] (ecmascript)");
function HostedNumberOrderListInstance(version) {
    const instance = {};
    instance._version = version;
    instance._solution = {};
    instance._uri = `/HostedNumbers/HostedNumberOrders`;
    instance.create = function create(params, callback) {
        if (params === null || params === undefined) {
            throw new Error('Required parameter "params" missing.');
        }
        if (params["phoneNumber"] === null || params["phoneNumber"] === undefined) {
            throw new Error("Required parameter \"params['phoneNumber']\" missing.");
        }
        if (params["smsCapability"] === null || params["smsCapability"] === undefined) {
            throw new Error("Required parameter \"params['smsCapability']\" missing.");
        }
        let data = {};
        data["phoneNumber"] = params["phoneNumber"];
        data["smsCapability"] = serialize.bool(params["smsCapability"]);
        if (params["accountSid"] !== undefined) data["accountSid"] = params["accountSid"];
        if (params["friendlyName"] !== undefined) data["friendlyName"] = params["friendlyName"];
        if (params["uniqueName"] !== undefined) data["uniqueName"] = params["uniqueName"];
        if (params["ccEmails"] !== undefined) data["ccEmails"] = serialize.map(params["ccEmails"], (e)=>e);
        if (params["smsUrl"] !== undefined) data["smsUrl"] = params["smsUrl"];
        if (params["smsMethod"] !== undefined) data["smsMethod"] = params["smsMethod"];
        if (params["smsFallbackUrl"] !== undefined) data["smsFallbackUrl"] = params["smsFallbackUrl"];
        if (params["smsFallbackMethod"] !== undefined) data["smsFallbackMethod"] = params["smsFallbackMethod"];
        if (params["statusCallbackUrl"] !== undefined) data["statusCallbackUrl"] = params["statusCallbackUrl"];
        if (params["statusCallbackMethod"] !== undefined) data["statusCallbackMethod"] = params["statusCallbackMethod"];
        if (params["smsApplicationSid"] !== undefined) data["smsApplicationSid"] = params["smsApplicationSid"];
        if (params["addressSid"] !== undefined) data["addressSid"] = params["addressSid"];
        if (params["email"] !== undefined) data["email"] = params["email"];
        if (params["verificationType"] !== undefined) data["verificationType"] = params["verificationType"];
        if (params["verificationDocumentSid"] !== undefined) data["verificationDocumentSid"] = params["verificationDocumentSid"];
        const headers = {};
        headers["Content-Type"] = "application/x-www-form-urlencoded";
        headers["Accept"] = "application/json";
        let operationVersion = version, operationPromise = operationVersion.create({
            uri: instance._uri,
            method: "post",
            data,
            headers
        });
        operationPromise = operationPromise.then((payload)=>new HostedNumberOrderInstance(operationVersion, payload));
        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    };
    instance.toJSON = function toJSON() {
        return instance._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(instance.toJSON(), options);
    };
    return instance;
}
class HostedNumberOrderInstance {
    constructor(_version, payload){
        this._version = _version;
        this.sid = payload.sid;
        this.accountSid = payload.accountSid;
        this.incomingPhoneNumberSid = payload.incomingPhoneNumberSid;
        this.addressSid = payload.addressSid;
        this.signingDocumentSid = payload.signingDocumentSid;
        this.phoneNumber = payload.phoneNumber;
        this.capabilities = payload.capabilities;
        this.friendlyName = payload.friendlyName;
        this.uniqueName = payload.uniqueName;
        this.status = payload.status;
        this.failureReason = payload.failureReason;
        this.dateCreated = deserialize.iso8601DateTime(payload.dateCreated);
        this.dateUpdated = deserialize.iso8601DateTime(payload.dateUpdated);
        this.verificationAttempts = deserialize.integer(payload.verificationAttempts);
        this.email = payload.email;
        this.ccEmails = payload.ccEmails;
        this.url = payload.url;
        this.verificationType = payload.verificationType;
        this.verificationDocumentSid = payload.verificationDocumentSid;
        this.extension = payload.extension;
        this.callDelay = deserialize.integer(payload.callDelay);
        this.verificationCode = payload.verificationCode;
        this.verificationCallSids = payload.verificationCallSids;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */ toJSON() {
        return {
            sid: this.sid,
            accountSid: this.accountSid,
            incomingPhoneNumberSid: this.incomingPhoneNumberSid,
            addressSid: this.addressSid,
            signingDocumentSid: this.signingDocumentSid,
            phoneNumber: this.phoneNumber,
            capabilities: this.capabilities,
            friendlyName: this.friendlyName,
            uniqueName: this.uniqueName,
            status: this.status,
            failureReason: this.failureReason,
            dateCreated: this.dateCreated,
            dateUpdated: this.dateUpdated,
            verificationAttempts: this.verificationAttempts,
            email: this.email,
            ccEmails: this.ccEmails,
            url: this.url,
            verificationType: this.verificationType,
            verificationDocumentSid: this.verificationDocumentSid,
            extension: this.extension,
            callDelay: this.callDelay,
            verificationCode: this.verificationCode,
            verificationCallSids: this.verificationCallSids
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.HostedNumberOrderInstance = HostedNumberOrderInstance;
}),
"[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/V3.js [app-rsc] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __importDefault = /*TURBOPACK member replacement*/ __turbopack_context__.e && /*TURBOPACK member replacement*/ __turbopack_context__.e.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const Version_1 = __importDefault(__turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/base/Version.js [app-rsc] (ecmascript)"));
const hostedNumberOrder_1 = __turbopack_context__.r("[project]/wraelen/wraelen-internal-boilerplate/node_modules/.pnpm/twilio@5.10.2/node_modules/twilio/lib/rest/numbers/v3/hostedNumberOrder.js [app-rsc] (ecmascript)");
class V3 extends Version_1.default {
    /**
     * Initialize the V3 version of Numbers
     *
     * @param domain - The Twilio (Twilio.Numbers) domain
     */ constructor(domain){
        super(domain, "v3");
    }
    /** Getter for hostedNumberOrders resource */ get hostedNumberOrders() {
        this._hostedNumberOrders = this._hostedNumberOrders || (0, hostedNumberOrder_1.HostedNumberOrderListInstance)(this);
        return this._hostedNumberOrders;
    }
}
exports.default = V3;
}),
];

//# sourceMappingURL=1b7ef_twilio_lib_rest_numbers_51939270._.js.map