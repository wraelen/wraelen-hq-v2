{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/progress.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Progress = registerClientReference(\n    function() { throw new Error(\"Attempted to call Progress() from the server but Progress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/wraelen/wraelen-internal-boilerplate/src/components/ui/progress.tsx <module evaluation>\",\n    \"Progress\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,WAAW,IAAA,wgBAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,qGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/components/ui/progress.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Progress = registerClientReference(\n    function() { throw new Error(\"Attempted to call Progress() from the server but Progress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/wraelen/wraelen-internal-boilerplate/src/components/ui/progress.tsx\",\n    \"Progress\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,WAAW,IAAA,wgBAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,iFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/app/auth.ts"],"sourcesContent":["// app/auth.ts\nimport Credentials from \"@auth/core/providers/credentials\"; // v5 import\nimport { PrismaAdapter } from \"@auth/prisma-adapter\";\nimport { PrismaClient } from \"@prisma/client\";\nimport bcrypt from \"bcryptjs\"; // For secure hashing/comparison\n\nconst prisma = new PrismaClient();\n\nexport const authConfig = {\n  adapter: PrismaAdapter(prisma), // Works with Mongo; handles user creation on first login\n  providers: [\n    Credentials({\n      name: \"Credentials\",\n      credentials: {\n        username: { label: \"Username\", type: \"text\" }, // Switched to username per your schema\n        password: { label: \"Password\", type: \"password\" },\n      },\n      async authorize(credentials) {\n        if (!credentials?.username || !credentials?.password) return null;\n\n        // Fetch user from DB (type-safe via Prisma)\n        const user = await prisma.user.findUnique({ where: { username: credentials.username } });\n        if (!user || !user.password) return null;\n\n        // Verify hashed password\n        const isValid = await bcrypt.compare(credentials.password, user.password);\n        if (!isValid) return null;\n\n        // Return user object (extends session)\n        return { id: user.id, username: user.username, role: user.role, points: user.points };\n      },\n    }),\n    // Expand later: e.g., Google({ clientId: env.GOOGLE_ID, clientSecret: env.GOOGLE_SECRET })\n  ],\n  callbacks: {\n    async session({ session, token }) {\n      if (session.user && token) {\n        session.user.id = token.sub; // Mongo ID from JWT\n        session.user.role = token.role; // Expose for role gates\n        session.user.points = token.points; // For real-time gamification display\n      }\n      return session;\n    },\n    async jwt({ token, user }) {\n      if (user) {\n        token.role = user.role; // Persist in JWT for session callback\n        token.points = user.points;\n      }\n      return token;\n    },\n  },\n  pages: {\n    signIn: \"/auth/signin\", // Custom page for console theme\n  },\n  session: {\n    strategy: \"jwt\", // JWT for stateless; switch to \"database\" if need full session DB\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n};"],"names":[],"mappings":"AAAA,cAAc;;;;;;;;;;AAEd;AACA;AACA,iZAA+B,gCAAgC;;;;;AAE/D,MAAM,SAAS,IAAI,6IAAY;AAExB,MAAM,aAAa;IACxB,SAAS,IAAA,oZAAa,EAAC;IACvB,WAAW;QACT,YAAY;YACV,MAAM;YACN,aAAa;gBACX,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAO;gBAC5C,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,YAAY,CAAC,aAAa,UAAU,OAAO;gBAE7D,4CAA4C;gBAC5C,MAAM,OAAO,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC;oBAAE,OAAO;wBAAE,UAAU,YAAY,QAAQ;oBAAC;gBAAE;gBACtF,IAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE,OAAO;gBAEpC,yBAAyB;gBACzB,MAAM,UAAU,MAAM,kPAAM,CAAC,OAAO,CAAC,YAAY,QAAQ,EAAE,KAAK,QAAQ;gBACxE,IAAI,CAAC,SAAS,OAAO;gBAErB,uCAAuC;gBACvC,OAAO;oBAAE,IAAI,KAAK,EAAE;oBAAE,UAAU,KAAK,QAAQ;oBAAE,MAAM,KAAK,IAAI;oBAAE,QAAQ,KAAK,MAAM;gBAAC;YACtF;QACF;KAED;IACD,WAAW;QACT,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,QAAQ,IAAI,IAAI,OAAO;gBACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,EAAE,oBAAoB;gBACjD,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI,EAAE,wBAAwB;gBACxD,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,MAAM,EAAE,qCAAqC;YAC3E;YACA,OAAO;QACT;QACA,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,IAAI,GAAG,KAAK,IAAI,EAAE,sCAAsC;gBAC9D,MAAM,MAAM,GAAG,KAAK,MAAM;YAC5B;YACA,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;IACV;IACA,SAAS;QACP,UAAU;IACZ;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACrC","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["// app/api/auth/[...nextauth]/route.ts\nimport NextAuth from \"next-auth\";\nimport { authConfig } from \"@/app/auth\";\n\nexport const { handlers, auth, signIn, signOut } = NextAuth(authConfig);"],"names":[],"mappings":"AAAA,sCAAsC;;;;;;;;;;;AACtC;AACA;;;AAEO,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,IAAA,maAAQ,EAAC,iLAAU","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///home/wraelen/wraelen/wraelen-internal-boilerplate/src/app/layout.tsx"],"sourcesContent":["import \"src/styles/global.css\" // Kept existing import for Tailwind styles\n\nimport Link from 'next/link'; // Added: For client-side navigation links (best practice in Next.js—fast, no reloads for game-like feel on page changes)\nimport { getServerSession } from 'next-auth'; // Kept existing: For fetching user session with XP/points (requires next-auth installed and authOptions defined in api/auth/[...nextauth]/route.ts)\nimport { Progress } from '@/components/ui/progress'; // Kept existing: Shadcn Progress component for visual XP bar (install if not: npx shadcn-ui@latest add progress)\nimport { authOptions } from './api/auth/[...nextauth]/route'; // Kept existing: Import auth config (stub if not set up yet; push back: Add Auth.js for secure roles/XP access)\n\nexport default async function RootLayout({ children }: { children: React.ReactNode }) {\n  const session = await getServerSession(authOptions); // Kept existing: Fetch session server-side to get user XP/points (safe for async layout in Next.js app dir)\n  const userXp = session?.user?.points || 0; // Updated: Get points from session (defaults to 0 if not logged in or no points field)\n  const currentLevel = Math.min(Math.floor(userXp / 100), 99); // Kept existing: Calc level 0-99 based on points (100 points per level placeholder—adjust to your defined task values; no multipliers as per your request)\n\n  return (\n    <html lang=\"en\">\n      <body>\n        {/* Added: Navigation bar for easy page traversal (links to Home/Dashboard/Login/Register/Logout—conditional on session for auth state; uses next/link for client-side routing, Tailwind for styling; placed above XP bar for hierarchy) */}\n        <nav className=\"fixed top-4 left-0 w-full bg-gray-800 text-white z-40 flex justify-center space-x-4 p-2\"> /* Game-themed dark bar; fixed above XP for always visible */\n          <Link href=\"/\">Home</Link> /* Link to home page (boilerplate default; client-side nav) */\n          <Link href=\"/dashboard\">Dashboard</Link> /* Link to dashboard (gamified view; fixes 404 by ensuring page.tsx exists—create next) */\n          {session ? (\n            <Link href=\"/api/auth/signout\">Logout</Link> /* Conditional: Logout if logged in (next-auth built-in signout route; redirect to home) */\n          ) : (\n            <>\n              <Link href=\"/auth/signin\">Login</Link> /* Link to login page (custom form; fixes 404 by ensuring page.tsx exists—create if not) */\n              <Link href=\"/auth/register\">Register</Link> /* Link to register page (form calling /api/register; add page.tsx for UI—stub below) */\n            </>\n          )}\n        </nav>\n        {/* Added: Persistent XP bar on every page (visual progress, like WoW top bar; tied to session XP for real-time feel—updates on re-render after quests) */}\n        <div className=\"fixed top-0 left-0 w-full h-4 bg-gray-200 z-50\">\n          <Progress value={(userXp % 100)} className=\"h-full\" /> {/* Added: Progress to next level using Shadcn (Tailwind-styled); value is % to next 100 XP */}\n          <span className=\"absolute top-0 left-1/2 transform -translate-x-1/2 text-xs text-black\">Level {currentLevel} ({userXp % 100}/100 XP)</span> /* Added: Level display with placeholder for lore tooltip (add Tooltip component here for hover explanation) */\n        </div>\n        {children} // Kept existing children render\n      </body>\n    </html>\n  )\n}"],"names":[],"mappings":";;;;;AAEA,+rBAA8B,yHAAyH;AACvJ,srBAA8C,oJAAoJ;AAAlM;AACA,6TAAqD,iHAAiH;AACtK,0VAA8D,gHAAgH;;;;;;;AAE/J,eAAe,WAAW,EAAE,QAAQ,EAAiC;IAClF,MAAM,UAAU,MAAM,IAAA,4ZAAgB,EAAC,wNAAW,GAAG,4GAA4G;IACjK,MAAM,SAAS,SAAS,MAAM,UAAU,GAAG,uFAAuF;IAClI,MAAM,eAAe,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,SAAS,MAAM,KAAK,2JAA2J;IAExN,qBACE,8eAAC;QAAK,MAAK;kBACT,cAAA,8eAAC;;8BAEC,8eAAC;oBAAI,WAAU;;wBAA0F;sCACvG,8eAAC,uaAAI;4BAAC,MAAK;sCAAI;;;;;;wBAAW;sCAC1B,8eAAC,uaAAI;4BAAC,MAAK;sCAAa;;;;;;wBAAgB;wBACvC,wBACC,8eAAC,uaAAI;4BAAC,MAAK;sCAAoB;;;;;iDAE/B;;8CACE,8eAAC,uaAAI;oCAAC,MAAK;8CAAe;;;;;;gCAAY;8CACtC,8eAAC,uaAAI;oCAAC,MAAK;8CAAiB;;;;;;gCAAe;;;;;;;;;8BAKjD,8eAAC;oBAAI,WAAU;;sCACb,8eAAC,iMAAQ;4BAAC,OAAQ,SAAS;4BAAM,WAAU;;;;;;wBAAW;sCACtD,8eAAC;4BAAK,WAAU;;gCAAwE;gCAAO;gCAAa;gCAAG,SAAS;gCAAI;;;;;;;wBAAe;;;;;;;gBAE5I;gBAAS;;;;;;;;;;;;AAIlB","debugId":null}}]
}