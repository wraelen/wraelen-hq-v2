{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["// src/middleware.ts - Production auth with proper rate limiting\nimport { createServerClient } from '@supabase/ssr';\nimport { type NextRequest, NextResponse } from 'next/server';\n\n// Simple in-memory cache (resets on server restart - fine for dev)\nconst authCache = new Map<string, { user: any; timestamp: number }>();\nconst CACHE_TTL = 10000; // 10 seconds cache\nconst MAX_CACHE_SIZE = 1000; // Prevent memory leaks\n\nexport async function middleware(req: NextRequest) {\n  // Skip middleware for static assets and auth pages\n  const { pathname } = req.nextUrl;\n  \n  if (\n    pathname.startsWith('/_next') ||\n    pathname.startsWith('/api/health') ||\n    pathname.startsWith('/auth') ||\n    pathname.includes('.') // Static files\n  ) {\n    return NextResponse.next();\n  }\n\n  // Env guard\n  if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n    console.error('Missing Supabase env vars');\n    return NextResponse.next();\n  }\n\n  const response = NextResponse.next();\n  \n  // Create Supabase client\n  const supabase = createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n    {\n      cookies: {\n        getAll: () => req.cookies.getAll(),\n        setAll: (cookiesToSet) => {\n          cookiesToSet.forEach(({ name, value, options }) => {\n            response.cookies.set(name, value, options);\n          });\n        },\n      },\n    }\n  );\n\n  // Check cache first (reduces Supabase calls)\n  const accessToken = req.cookies.get('sb-access-token')?.value;\n  const cacheKey = accessToken || 'anonymous';\n  const cached = authCache.get(cacheKey);\n  \n  if (cached && Date.now() - cached.timestamp < CACHE_TTL) {\n    // Use cached result\n    if (!cached.user) {\n      return NextResponse.redirect(new URL('/auth/signin', req.url));\n    }\n    return response;\n  }\n\n  // Fetch fresh auth state\n  try {\n    const { data: { user }, error } = await supabase.auth.getUser();\n\n    // Update cache (with size limit)\n    if (authCache.size > MAX_CACHE_SIZE) {\n      authCache.clear(); // Simple eviction\n    }\n    authCache.set(cacheKey, { user, timestamp: Date.now() });\n\n    // Redirect unauthenticated users\n    if (!user || error) {\n      return NextResponse.redirect(new URL('/auth/signin', req.url));\n    }\n\n  } catch (error) {\n    console.error('Middleware auth error:', error);\n    // On error, redirect to signin (safer than allowing through)\n    return NextResponse.redirect(new URL('/auth/signin', req.url));\n  }\n\n  return response;\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * - public folder\n     * - auth pages\n     */\n    '/((?!_next/static|_next/image|favicon.ico|.*\\\\..*|auth).*)',\n  ],\n};"],"names":[],"mappings":"AAAA,gEAAgE;;;;;;;AAChE;AAAA;AACA;AAAA;;;AAEA,mEAAmE;AACnE,MAAM,YAAY,IAAI;AACtB,MAAM,YAAY,OAAO,mBAAmB;AAC5C,MAAM,iBAAiB,MAAM,uBAAuB;AAE7C,eAAe,WAAW,GAAgB;IAC/C,mDAAmD;IACnD,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,OAAO;IAEhC,IACE,SAAS,UAAU,CAAC,aACpB,SAAS,UAAU,CAAC,kBACpB,SAAS,UAAU,CAAC,YACpB,SAAS,QAAQ,CAAC,KAAK,eAAe;MACtC;QACA,OAAO,+YAAY,CAAC,IAAI;IAC1B;IAEA,YAAY;IACZ;;IAKA,MAAM,WAAW,+YAAY,CAAC,IAAI;IAElC,yBAAyB;IACzB,MAAM,WAAW,IAAA,oTAAkB,sUAGjC;QACE,SAAS;YACP,QAAQ,IAAM,IAAI,OAAO,CAAC,MAAM;YAChC,QAAQ,CAAC;gBACP,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;oBAC5C,SAAS,OAAO,CAAC,GAAG,CAAC,MAAM,OAAO;gBACpC;YACF;QACF;IACF;IAGF,6CAA6C;IAC7C,MAAM,cAAc,IAAI,OAAO,CAAC,GAAG,CAAC,oBAAoB;IACxD,MAAM,WAAW,eAAe;IAChC,MAAM,SAAS,UAAU,GAAG,CAAC;IAE7B,IAAI,UAAU,KAAK,GAAG,KAAK,OAAO,SAAS,GAAG,WAAW;QACvD,oBAAoB;QACpB,IAAI,CAAC,OAAO,IAAI,EAAE;YAChB,OAAO,+YAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,gBAAgB,IAAI,GAAG;QAC9D;QACA,OAAO;IACT;IAEA,yBAAyB;IACzB,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QAE7D,iCAAiC;QACjC,IAAI,UAAU,IAAI,GAAG,gBAAgB;YACnC,UAAU,KAAK,IAAI,kBAAkB;QACvC;QACA,UAAU,GAAG,CAAC,UAAU;YAAE;YAAM,WAAW,KAAK,GAAG;QAAG;QAEtD,iCAAiC;QACjC,IAAI,CAAC,QAAQ,OAAO;YAClB,OAAO,+YAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,gBAAgB,IAAI,GAAG;QAC9D;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,6DAA6D;QAC7D,OAAO,+YAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,gBAAgB,IAAI,GAAG;IAC9D;IAEA,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;;KAOC,GACD;KACD;AACH"}}]
}